















































</>
1	CHELLO	Hello World			1	1203
</>
2	CTDL_001	THUẬT TOÁN SINH	CÁC MÔ HÌNH THUẬT TOÁN	Sinh kế tiếp	1	1148
</>
3	CTDL_002	Tổng dãy con = K	CÁC MÔ HÌNH THUẬT TOÁN	Sinh kế tiếp	1	908
</>
4	CTDL_005	XÓA DỮ LIỆU TRONG DSLK ĐƠN	CÁC CẤU TRÚC DỮ LIỆU CƠ BẢN	Sắp xếp - Tìm kiếm	1	819
</>
5	CTDL_006	LỌC DỮ LIỆU TRÙNG TRONG DSLK ĐƠN	CÁC CẤU TRÚC DỮ LIỆU CƠ BẢN	Sắp xếp - Tìm kiếm	1	739
</>
6	DSA01001	XÂU NHỊ PHÂN KẾ TIẾP	CÁC MÔ HÌNH THUẬT TOÁN	Sinh kế tiếp	1	1170
</>
7	DSA01002	TẬP CON KẾ TIẾP	CÁC MÔ HÌNH THUẬT TOÁN	Sinh kế tiếp	1	1028
</>
8	DSA01003	HOÁN VỊ KẾ TIẾP	CÁC MÔ HÌNH THUẬT TOÁN	Sinh kế tiếp	1	1006
</>
9	DSA01004	SINH TỔ HỢP	CÁC MÔ HÌNH THUẬT TOÁN	Sinh kế tiếp	1	1023
</>
10	DSA01005	SINH HOÁN VỊ	CÁC MÔ HÌNH THUẬT TOÁN	Sinh kế tiếp	1	988
</>
11	DSA01006	HOÁN VỊ NGƯỢC	CÁC MÔ HÌNH THUẬT TOÁN	Sinh kế tiếp	1	886
</>
12	DSA01007	XÂU AB CÓ ĐỘ DÀI N	CÁC MÔ HÌNH THUẬT TOÁN	Sinh kế tiếp	1	951
</>
13	DSA01008	XÂU NHỊ PHÂN CÓ K BIT 1	CÁC MÔ HÌNH THUẬT TOÁN	Sinh kế tiếp	1	881
</>
14	DSA01019	HAHAHA	CÁC MÔ HÌNH THUẬT TOÁN	Sinh kế tiếp	1	892
</>
15	DSA01020	XÂU NHỊ PHÂN TRƯỚC	CÁC MÔ HÌNH THUẬT TOÁN	Sinh kế tiếp	1	949
</>
16	DSA01021	TỔ HỢP TIẾP THEO	CÁC MÔ HÌNH THUẬT TOÁN	Sinh kế tiếp	1	748
</>
17	DSA01022	SỐ THỨ TỰ HOÁN VỊ	CÁC MÔ HÌNH THUẬT TOÁN	Sinh kế tiếp	1	727
</>
18	DSA01023	SỐ THỨ TỰ TỔ HỢP	CÁC MÔ HÌNH THUẬT TOÁN	Sinh kế tiếp	1	707
</>
19	DSA01024	ĐẶT TÊN - 1	CÁC MÔ HÌNH THUẬT TOÁN	Quay lui - Nhánh cận	1	605
</>
20	DSA01025	ĐẶT TÊN - 2	CÁC MÔ HÌNH THUẬT TOÁN	Sinh kế tiếp	1	671
</>
21	DSA01026	PHÁT LỘC	CÁC MÔ HÌNH THUẬT TOÁN	Sinh kế tiếp	1	679
</>
22	DSA01027	HOÁN VỊ DÃY SỐ	CÁC MÔ HÌNH THUẬT TOÁN	Sinh kế tiếp	1	713
</>
23	DSA01028	LIỆT KÊ TỔ HỢP	CÁC MÔ HÌNH THUẬT TOÁN	Sinh kế tiếp	1	625
</>
24	DSA02001	DÃY SỐ 1	CÁC MÔ HÌNH THUẬT TOÁN	Quay lui - Nhánh cận	1	644
</>
25	DSA02002	DÃY SỐ 2	CÁC MÔ HÌNH THUẬT TOÁN	Quay lui - Nhánh cận	1	558
</>
26	DSA02003	DI CHUYỂN TRONG MÊ CUNG 1	CÁC MÔ HÌNH THUẬT TOÁN	Quay lui - Nhánh cận	1	467
</>
27	DSA02005	HOÁN VỊ XÂU KÝ TỰ	CÁC MÔ HÌNH THUẬT TOÁN	Quay lui - Nhánh cận	1	567
</>
28	DSA02006	DÃY CON TỔNG BẰNG K	CÁC MÔ HÌNH THUẬT TOÁN	Quay lui - Nhánh cận	1	484
</>
29	DSA02012	DI CHUYỂN TRONG MA TRẬN	CÁC MÔ HÌNH THUẬT TOÁN	Quay lui - Nhánh cận	1	423
</>
30	DSA02016	SẮP XẾP QUÂN HẬU 1	CÁC MÔ HÌNH THUẬT TOÁN	Quay lui - Nhánh cận	1	450
</>
31	DSA02022	NGÀY ĐẶC BIỆT	CÁC MÔ HÌNH THUẬT TOÁN	Quay lui - Nhánh cận	1	385
</>
32	DSA02023	ĐẶT TÊN	CÁC MÔ HÌNH THUẬT TOÁN	Quay lui - Nhánh cận	1	461
</>
33	DSA02024	DÃY CON TĂNG DẦN	CÁC MÔ HÌNH THUẬT TOÁN	Quay lui - Nhánh cận	1	296
</>
34	DSA02029	THÁP HÀ NỘI	CÁC MÔ HÌNH THUẬT TOÁN	Quay lui - Nhánh cận	1	346
</>
35	DSA02030	LIỆT KÊ XÂU KÝ TỰ	CÁC MÔ HÌNH THUẬT TOÁN	Quay lui - Nhánh cận	1	387
</>
36	DSA02031	GHÉP CHỮ CÁI	CÁC MÔ HÌNH THUẬT TOÁN	Quay lui - Nhánh cận	1	321
</>
37	DSA02033	SỐ XA CÁCH	CÁC MÔ HÌNH THUẬT TOÁN	Quay lui - Nhánh cận	1	342
</>
38	DSA02034	TRÒ CHƠI VỚI CÁC CON SỐ	CÁC MÔ HÌNH THUẬT TOÁN	Quay lui - Nhánh cận	1	336
</>
39	DSA03001	ĐỔI TIỀN	CÁC MÔ HÌNH THUẬT TOÁN	Giải thuật tham lam	1	465
</>
40	DSA03002	NHẦM CHỮ SỐ	CÁC MÔ HÌNH THUẬT TOÁN	Giải thuật tham lam	1	399
</>
41	DSA03003	TÌM MAX	CÁC MÔ HÌNH THUẬT TOÁN	Giải thuật tham lam	1	393
</>
42	DSA03004	TỔNG NHỎ NHẤT	CÁC MÔ HÌNH THUẬT TOÁN	Giải thuật tham lam	1	368
</>
43	DSA03005	CHIA MẢNG THÀNH HAI MẢNG CON CÓ TỔNG LỚN NHẤT	CÁC MÔ HÌNH THUẬT TOÁN	Giải thuật tham lam	1	349
</>
44	DSA03006	SẮP XẾP THAM LAM	CÁC MÔ HÌNH THUẬT TOÁN	Giải thuật tham lam	1	305
</>
45	DSA03008	SẮP XẾP CÔNG VIỆC 1	CÁC MÔ HÌNH THUẬT TOÁN	Giải thuật tham lam	1	322
</>
46	DSA03010	NỐI DÂY 1	CÁC MÔ HÌNH THUẬT TOÁN	Giải thuật tham lam	1	267
</>
47	DSA03012	SẮP ĐẶT XÂU KÝ TỰ 1	CÁC MÔ HÌNH THUẬT TOÁN	Giải thuật tham lam	1	301
</>
48	DSA03013	SẮP ĐẶT XÂU KÝ TỰ 2	CÁC MÔ HÌNH THUẬT TOÁN	Giải thuật tham lam	1	230
</>
49	DSA03015	MUA LƯƠNG THỰC	CÁC MÔ HÌNH THUẬT TOÁN	Giải thuật tham lam	1	232
</>
50	DSA03022	TÍCH LỚN NHẤT	CÁC MÔ HÌNH THUẬT TOÁN	Giải thuật tham lam	1	299
</>
51	DSA03024	LỰA CHỌN TỐI ƯU	CÁC MÔ HÌNH THUẬT TOÁN	Giải thuật tham lam	1	253
</>
52	DSA03025	TRỤC TỌA ĐỘ	CÁC MÔ HÌNH THUẬT TOÁN	Giải thuật tham lam	1	242
</>
53	DSA03034	DÃY CON CHUNG	CÁC MÔ HÌNH THUẬT TOÁN	Giải thuật tham lam	1	227
</>
54	DSA03035	SẮP XẾP ĐƠN GIẢN	CÁC MÔ HÌNH THUẬT TOÁN	Giải thuật tham lam	1	166
</>
55	DSA04001	LŨY THỪA	CÁC MÔ HÌNH THUẬT TOÁN	Chia và trị	1	650
</>
56	DSA04002	LŨY THỪA ĐẢO	CÁC MÔ HÌNH THUẬT TOÁN	Chia và trị	1	434
</>
57	DSA04003	ĐẾM DÃY	CÁC MÔ HÌNH THUẬT TOÁN	Chia và trị	1	434
</>
58	DSA04004	GẤP ĐÔI DÃY SỐ	CÁC MÔ HÌNH THUẬT TOÁN	Chia và trị	1	407
</>
59	DSA04005	DÃY XÂU FIBONACI	CÁC MÔ HÌNH THUẬT TOÁN	Chia và trị	1	416
</>
60	DSA04010	DÃY CON LIÊN TIẾP CÓ TỔNG LỚN NHẤT	CÁC MÔ HÌNH THUẬT TOÁN	Chia và trị	1	308
</>
61	DSA04015	TÍNH FLOOR(X)	CÁC MÔ HÌNH THUẬT TOÁN	Chia và trị	1	419
</>
62	DSA04016	PHẦN TỬ THỨ K	CÁC MÔ HÌNH THUẬT TOÁN	Chia và trị	1	349
</>
63	DSA04017	PHẦN TỬ KHÁC NHAU	CÁC MÔ HÌNH THUẬT TOÁN	Chia và trị	1	324
</>
64	DSA04018	ĐẾM SỐ 0	CÁC MÔ HÌNH THUẬT TOÁN	Chia và trị	1	403
</>
65	DSA04020	TÌM KIẾM NHỊ PHÂN	CÁC MÔ HÌNH THUẬT TOÁN	Chia và trị	1	502
</>
66	DSA04021	DÃY XÂU NHỊ PHÂN	CÁC MÔ HÌNH THUẬT TOÁN	Chia và trị	1	310
</>
67	DSA04022	KÝ TỰ THỨ K TRONG XÂU	CÁC MÔ HÌNH THUẬT TOÁN	Chia và trị	1	332
</>
68	DSA04024	LŨY THỪA MA TRẬN 2	CÁC MÔ HÌNH THUẬT TOÁN	Chia và trị	1	203
</>
69	DSA04025	DÃY SỐ VÔ HẠN	CÁC MÔ HÌNH THUẬT TOÁN	Chia và trị	1	193
</>
70	DSA04035	TÍNH LŨY THỪA	CÁC MÔ HÌNH THUẬT TOÁN	Chia và trị	1	394
</>
71	DSA05001	XÂU CON CHUNG DÀI NHẤT	CÁC MÔ HÌNH THUẬT TOÁN	Quy hoạch động	1	207
</>
72	DSA05004	DÃY CON TĂNG DÀI NHẤT	CÁC MÔ HÌNH THUẬT TOÁN	Quy hoạch động	1	256
</>
73	DSA05005	SỐ BƯỚC ÍT NHẤT	CÁC MÔ HÌNH THUẬT TOÁN	Quy hoạch động	1	177
</>
74	DSA05008	DÃY CON CÓ TỔNG BẰNG S	CÁC MÔ HÌNH THUẬT TOÁN	Quy hoạch động	1	188
</>
75	DSA05009	TẬP CON BẰNG NHAU	CÁC MÔ HÌNH THUẬT TOÁN	Quay lui - Nhánh cận	1	188
</>
76	DSA05012	TỔ HỢP C(n, k)	CÁC MÔ HÌNH THUẬT TOÁN	Quy hoạch động	1	214
</>
77	DSA05013	BẬC THANG	CÁC MÔ HÌNH THUẬT TOÁN	Quy hoạch động	1	173
</>
78	DSA05025	CON ẾCH	CÁC MÔ HÌNH THUẬT TOÁN	Quy hoạch động	1	193
</>
79	DSA05026	XEM PHIM	CÁC MÔ HÌNH THUẬT TOÁN	Quy hoạch động	1	131
</>
80	DSA05027	CÁI TÚI	CÁC MÔ HÌNH THUẬT TOÁN	Quy hoạch động	1	157
</>
81	DSA05029	GIẢI MÃ	CÁC MÔ HÌNH THUẬT TOÁN	Quy hoạch động	1	72
</>
82	DSA05034	TỔNG SỐ CÁCH DI CHUYỂN	CÁC MÔ HÌNH THUẬT TOÁN	Quy hoạch động	1	151
</>
83	DSA06001	SẮP XẾP XEN KẼ	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	1	788
</>
84	DSA06002	SẮP XẾP THEO GIÁ TRỊ TUYỆT ĐỐI	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	1	680
</>
85	DSA06003	ĐỔI CHỖ ÍT NHẤT	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	1	590
</>
86	DSA06004	HỢP VÀ GIAO CỦA HAI DÃY SỐ 1	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	1	641
</>
87	DSA06005	HỢP VÀ GIAO CỦA HAI DÃY SỐ 2	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	1	621
</>
88	DSA06006	SẮP XẾP [0 1 2]	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	1	743
</>
89	DSA06007	SẮP XẾP DÃY CON LIÊN TỤC	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	1	555
</>
90	DSA06008	ĐẾM CẶP	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	1	243
</>
91	DSA06009	CẶP SỐ TỔNG BẰNG K	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	1	606
</>
92	DSA06010	SẮP XẾP CHỮ SỐ	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	1	643
</>
93	DSA06011	TỔNG GẦN 0 NHẤT	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	1	538
</>
94	DSA06012	PHẦN TỬ LỚN NHẤT	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	1	675
</>
95	DSA06013	SỐ LẦN XUẤT HIỆN	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	1	640
</>
96	DSA06014	TỔNG CẶP SỐ NGUYÊN TỐ	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	1	487
</>
97	DSA06015	MERGE SORT	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	1	598
</>
98	DSA06016	TÍCH LỚN NHẤT - NHỎ NHẤT	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	1	569
</>
99	DSA06017	TRỘN HAI DÃY	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	1	608
</>
100	DSA06018	BỔ SUNG PHẦN TỬ	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	1	523
</>
101	DSA06019	SẮP XẾP THEO SỐ LẦN XUẤT HIỆN	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	1	451
</>
102	DSA06020	TÌM KIẾM	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	1	587
</>
103	DSA06021	TÌM KIẾM TRONG DÃY SẮP XẾP VÒNG	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	1	420
</>
104	DSA06022	SỐ NHỎ NHẤT VÀ NHỎ THỨ HAI	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	1	542
</>
105	DSA06023	SẮP XẾP ĐỔI CHỖ TRỰC TIẾP	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	1	658
</>
106	DSA06024	SẮP XẾP CHỌN	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	1	711
</>
107	DSA06025	SẮP XẾP CHÈN	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	1	691
</>
108	DSA06026	SẮP XẾP NỔI BỌT	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	1	649
</>
109	DSA06027	SẮP XẾP ĐỔI CHỖ TRỰC TIẾP - LIỆT KÊ NGƯỢC	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	1	447
</>
110	DSA06028	SẮP XẾP CHỌN - LIỆT KÊ NGƯỢC	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	1	438
</>
111	DSA06029	SẮP XẾP CHÈN - LIỆT KÊ NGƯỢC	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	1	413
</>
112	DSA06030	SẮP XẾP NỔI BỌT - LIỆT KÊ NGƯỢC	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	1	394
</>
113	DSA06031	PHẦN TỬ LỚN NHẤT TRONG DÃY CON	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	1	324
</>
114	DSA06032	BỘ BA SỐ CÓ TỔNG NHỎ HƠN K	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	1	225
</>
115	DSA06033	KHOẢNG CÁCH XA NHẤT	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	1	165
</>
116	DSA06034	CẶP SỐ CÓ TỔNG BẰNG K	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	1	279
</>
117	DSA06035	DÃY TAM GIÁC DÀI NHẤT	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	1	128
</>
118	DSA06036	BỘ BA SỐ BẰNG K	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	1	235
</>
119	DSA06039	SỐ ĐẦU TIÊN BỊ LẶP	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	1	313
</>
120	DSA06040	GIAO CỦA BA DÃY SỐ	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	1	239
</>
121	DSA06041	SỐ XUẤT HIỆN NHIỀU NHẤT	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	1	307
</>
122	DSA06043	ĐIỂM CÂN BẰNG	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	1	256
</>
123	DSA06046	CHÊNH LỆCH NHỎ NHẤT	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	1	309
</>
124	DSA06047	BỘ BA SỐ PYTAGO	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	1	220
</>
125	DSA06048	SỐ LẦN QUAY VÒNG	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	1	202
</>
126	DSA06049	ĐẾM CẶP	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	1	185
</>
127	DSA07001	NGĂN XẾP 1	CÁC MÔ HÌNH THUẬT TOÁN	Ngăn xếp	1	155
</>
128	DSA07002	NGĂN XẾP 2	CÁC MÔ HÌNH THUẬT TOÁN	Ngăn xếp	1	150
</>
129	DSA07003	KIỂM TRA BIỂU THỨC SỐ HỌC	CÁC MÔ HÌNH THUẬT TOÁN	Ngăn xếp	1	85
</>
130	DSA07004	ĐẾM SỐ DẤU NGOẶC ĐỔI CHIỀU	CÁC MÔ HÌNH THUẬT TOÁN	Ngăn xếp	1	73
</>
131	DSA07009	BIẾN ĐỔI TIỀN TỐ - TRUNG TỐ	CÁC MÔ HÌNH THUẬT TOÁN	Ngăn xếp	1	63
</>
132	DSA07010	BIẾN ĐỐI TIỀN TỐ - HẬU TỐ	CÁC MÔ HÌNH THUẬT TOÁN	Ngăn xếp	1	61
</>
133	DSA07013	TÍNH GIÁ TRỊ BIỂU THỨC HẬU TỐ	CÁC MÔ HÌNH THUẬT TOÁN	Ngăn xếp	1	56
</>
134	DSA07014	TÍNH GIÁ TRỊ BIỂU THỨC TIỀN TỐ	CÁC MÔ HÌNH THUẬT TOÁN	Ngăn xếp	1	54
</>
135	DSA07021	DÃY NGOẶC ĐÚNG DÀI NHẤT	CÁC CẤU TRÚC DỮ LIỆU CƠ BẢN	Ngăn xếp	1	56
</>
136	DSA07023	ĐẢO TỪ	CÁC CẤU TRÚC DỮ LIỆU CƠ BẢN	Ngăn xếp	1	129
</>
137	DSA07027	PHẦN TỬ BÊN PHẢI ĐẦU TIÊN LỚN HƠN	CÁC CẤU TRÚC DỮ LIỆU CƠ BẢN	Ngăn xếp	1	89
</>
138	DSA07110	KIỂM TRA DÃY NGOẶC ĐÚNG	CÁC CẤU TRÚC DỮ LIỆU CƠ BẢN	Ngăn xếp	1	77
</>
139	DSA08001	CẤU TRÚC DỮ LIỆU HÀNG ĐỢI 1	CÁC MÔ HÌNH THUẬT TOÁN	Hàng đợi	1	99
</>
140	DSA08002	CẤU TRÚC DỮ LIỆU HÀNG ĐỢI 2	CÁC MÔ HÌNH THUẬT TOÁN	Hàng đợi	1	95
</>
141	DSA08003	HÀNG ĐỢI HAI ĐẦU (DEQUEUE)	CÁC MÔ HÌNH THUẬT TOÁN	Hàng đợi	1	81
</>
142	DSA08005	SỐ NHỊ PHÂN TỪ 1 ĐẾN N	CÁC MÔ HÌNH THUẬT TOÁN	Hàng đợi	1	82
</>
143	DSA08006	SỐ 0 VÀ SỐ 9	CÁC MÔ HÌNH THUẬT TOÁN	Hàng đợi	1	81
</>
144	DSA08007	SỐ BDN 1	CÁC MÔ HÌNH THUẬT TOÁN	Hàng đợi	1	69
</>
145	DSA08008	SỐ BDN 2	CÁC MÔ HÌNH THUẬT TOÁN	Hàng đợi	1	65
</>
146	DSA08017	SỐ LỘC PHÁT 1	CÁC MÔ HÌNH THUẬT TOÁN	Hàng đợi	1	93
</>
147	DSA08018	SỐ LỘC PHÁT 2	CÁC MÔ HÌNH THUẬT TOÁN	Hàng đợi	1	83
</>
148	DSA08019	SỐ LỘC PHÁT 3	CÁC MÔ HÌNH THUẬT TOÁN	Hàng đợi	1	83
</>
149	DSA08021	DI CHUYỂN TRONG MA TRẬN	CÁC CẤU TRÚC DỮ LIỆU CƠ BẢN	Hàng đợi	1	29
</>
150	DSA09001	CHUYỂN DANH SÁCH CẠNH SANG DANH SÁCH KỀ	CÁC MÔ HÌNH THUẬT TOÁN	Duyệt đồ thị	1	176
</>
151	DSA09002	CHUYỂN TỪ DANH SÁCH KỀ SANG DANH SÁCH CẠNH	CÁC MÔ HÌNH THUẬT TOÁN	Duyệt đồ thị	1	158
</>
152	DSA09003	BIỂU DIỄN ĐỒ THỊ CÓ HƯỚNG.	CÁC MÔ HÌNH THUẬT TOÁN	Duyệt đồ thị	1	158
</>
153	DSA09004	DFS TRÊN ĐỒ THỊ VÔ HƯỚNG	CÁC MÔ HÌNH THUẬT TOÁN	Duyệt đồ thị	1	153
</>
154	DSA09005	BFS TRÊN ĐỒ THỊ VÔ HƯỚNG	CÁC MÔ HÌNH THUẬT TOÁN	Duyệt đồ thị	1	143
</>
155	DSA09013	LIỆT KÊ CẠNH CẦU	CÁC MÔ HÌNH THUẬT TOÁN	Duyệt đồ thị	1	66
</>
156	DSA09020	CHUYỂN DANH SÁCH KỀ SANG MA TRẬN KỀ	CÁC CẤU TRÚC DỮ LIỆU CƠ BẢN	Duyệt đồ thị	1	139
</>
157	DSA09021	CHUYỂN MA TRẬN KỀ SANG DANH SÁCH KỀ	CÁC CẤU TRÚC DỮ LIỆU CƠ BẢN	Duyệt đồ thị	1	135
</>
158	DSA09022	DFS TRÊN ĐỒ THỊ CÓ HƯỚNG	CÁC CẤU TRÚC DỮ LIỆU CƠ BẢN	Duyệt đồ thị	1	138
</>
159	DSA09024	BFS TRÊN ĐỒ THỊ CÓ HƯỚNG	CÁC CẤU TRÚC DỮ LIỆU CƠ BẢN	Duyệt đồ thị	1	129
</>
160	DSA09025	ĐƯỜNG ĐI THEO DFS VỚI ĐỒ THỊ CÓ HƯỚNG	CÁC CẤU TRÚC DỮ LIỆU CƠ BẢN	Duyệt đồ thị	1	107
</>
161	DSA09026	ĐƯỜNG ĐI THEO BFS TRÊN ĐỒ THỊ CÓ HƯỚNG	CÁC CẤU TRÚC DỮ LIỆU CƠ BẢN	Duyệt đồ thị	1	101
</>
162	DSA09027	KIỂM TRA ĐƯỜNG ĐI	CÁC CẤU TRÚC DỮ LIỆU CƠ BẢN	Duyệt đồ thị	1	97
</>
163	DSA10004	ĐƯỜNG ĐI VÀ CHU TRÌNH EULER VỚI ĐỒ THỊ VÔ HƯỚNG	CÁC MÔ HÌNH THUẬT TOÁN	Duyệt đồ thị	1	42
</>
164	DSA10005	CHU TRÌNH EULER TRONG ĐỒ THỊ CÓ HƯỚNG	CÁC MÔ HÌNH THUẬT TOÁN	Duyệt đồ thị	1	41
</>
165	DSAKT053	SỐ NGUYÊN LỚN	CÁC MÔ HÌNH THUẬT TOÁN	Quy hoạch động	1	99
</>
166	DSAKT055	BÀI TOÁN CÁI TÚI 0-1	CÁC MÔ HÌNH THUẬT TOÁN	Quy hoạch động	1	99
</>
167	DSAKT110	NHÀ KHÔNG KỀ NHAU	CÁC MÔ HÌNH THUẬT TOÁN	Quy hoạch động	1	103
</>
168	CTDL_003	PHƯƠNG ÁN TỐI ƯU	CÁC MÔ HÌNH THUẬT TOÁN	Sinh kế tiếp	2	112
</>
169	CTDL_004	DÃY CON TĂNG DẦN BẬC K	CÁC MÔ HÌNH THUẬT TOÁN	Sinh kế tiếp	2	196
</>
170	DSA01009	XÂU AB ĐẶC BIỆT	CÁC MÔ HÌNH THUẬT TOÁN	Sinh kế tiếp	2	231
</>
171	DSA01010	TẬP QUÂN SỰ	CÁC MÔ HÌNH THUẬT TOÁN	Sinh kế tiếp	2	237
</>
172	DSA01011	HOÁN VỊ TIẾP THEO CỦA CHUỖI SỐ	CÁC MÔ HÌNH THUẬT TOÁN	Sinh kế tiếp	2	227
</>
173	DSA01012	MÃ GRAY 1	CÁC MÔ HÌNH THUẬT TOÁN	Sinh kế tiếp	2	166
</>
174	DSA01013	MÃ GRAY 2	CÁC MÔ HÌNH THUẬT TOÁN	Sinh kế tiếp	2	147
</>
175	DSA01014	TẬP HỢP	CÁC MÔ HÌNH THUẬT TOÁN	Sinh kế tiếp	2	142
</>
176	DSA01015	TÌM BỘI SỐ	CÁC MÔ HÌNH THUẬT TOÁN	Sinh kế tiếp	2	137
</>
177	DSA01016	PHÂN TÍCH SỐ 1	CÁC MÔ HÌNH THUẬT TOÁN	Sinh kế tiếp	2	174
</>
178	DSA01017	MÃ GRAY 3	CÁC MÔ HÌNH THUẬT TOÁN	Sinh kế tiếp	2	128
</>
179	DSA02004	DI CHUYỂN TRONG MÊ CUNG 2	CÁC MÔ HÌNH THUẬT TOÁN	Quay lui - Nhánh cận	2	154
</>
180	DSA02007	ĐỔI CHỖ CÁC CHỮ SỐ	CÁC MÔ HÌNH THUẬT TOÁN	Quay lui - Nhánh cận	2	96
</>
181	DSA02008	CHỌN SỐ TỪ MA TRẬN VUÔNG CẤP N	CÁC MÔ HÌNH THUẬT TOÁN	Sinh kế tiếp	2	112
</>
182	DSA02013	SỐ NGUYÊN TỐ	CÁC MÔ HÌNH THUẬT TOÁN	Quay lui - Nhánh cận	2	102
</>
183	DSA02017	SẮP XẾP QUÂN HẬU 2	CÁC MÔ HÌNH THUẬT TOÁN	Quay lui - Nhánh cận	2	156
</>
184	DSA02025	KÝ TỰ LẶP	CÁC MÔ HÌNH THUẬT TOÁN	Quay lui - Nhánh cận	2	52
</>
185	DSA02026	PHÉP TOÁN CƠ BẢN	CÁC MÔ HÌNH THUẬT TOÁN	Quay lui - Nhánh cận	2	25
</>
186	DSA02032	TỔ HỢP SỐ CÓ TỔNG BẰNG X	CÁC MÔ HÌNH THUẬT TOÁN	Quay lui - Nhánh cận	2	104
</>
187	DSA02035	HOÁN VỊ CÁC CHỮ SỐ	CÁC MÔ HÌNH THUẬT TOÁN	Quay lui - Nhánh cận	2	38
</>
188	DSA02036	DÃY CON CÓ TỔNG LẺ	CÁC MÔ HÌNH THUẬT TOÁN	Quay lui - Nhánh cận	2	81
</>
189	DSA02037	DÃY CON CÓ TỔNG NGUYÊN TỐ	CÁC MÔ HÌNH THUẬT TOÁN	Quay lui - Nhánh cận	2	82
</>
190	DSA02038	DÃY CON CÓ K PHẦN TỬ TĂNG DẦN	CÁC MÔ HÌNH THUẬT TOÁN	Quay lui - Nhánh cận	2	95
</>
191	DSA02039	PHÂN TÍCH SỐ 2	CÁC MÔ HÌNH THUẬT TOÁN	Quay lui - Nhánh cận	2	114
</>
192	DSA02041	BIẾN ĐỔI VỀ 1	CÁC CẤU TRÚC DỮ LIỆU CƠ BẢN	Quay lui - Nhánh cận	2	68
</>
193	DSA02045	TẬP CON CỦA XÂU KÝ TỰ	CÁC MÔ HÌNH THUẬT TOÁN	Quay lui - Nhánh cận	2	64
</>
194	DSA03007	GIÁ TRỊ NHỎ NHẤT CỦA BIỂU THỨC	CÁC MÔ HÌNH THUẬT TOÁN	Giải thuật tham lam	2	121
</>
195	DSA03009	SẮP XẾP CÔNG VIỆC 2	CÁC MÔ HÌNH THUẬT TOÁN	Giải thuật tham lam	2	71
</>
196	DSA03011	NỐI DÂY 2	CÁC MÔ HÌNH THUẬT TOÁN	Giải thuật tham lam	2	120
</>
197	DSA03016	SỐ NHỎ NHẤT	CÁC MÔ HÌNH THUẬT TOÁN	Giải thuật tham lam	2	104
</>
198	DSA03017	GIÁ TRỊ NHỎ NHẤT CỦA XÂU	CÁC MÔ HÌNH THUẬT TOÁN	Giải thuật tham lam	2	103
</>
199	DSA03018	SỐ MAY MẮN	CÁC MÔ HÌNH THUẬT TOÁN	Giải thuật tham lam	2	82
</>
200	DSA03019	PHÂN SỐ ĐƠN VỊ	CÁC MÔ HÌNH THUẬT TOÁN	Giải thuật tham lam	2	54
</>
201	DSA03020	BIỂU THỨC ĐÚNG	CÁC MÔ HÌNH THUẬT TOÁN	Giải thuật tham lam	2	17
</>
202	DSA03021	TÌM DÃY SỐ	CÁC MÔ HÌNH THUẬT TOÁN	Giải thuật tham lam	2	12
</>
203	DSA03023	SẮP XẾP VIÊN BI	CÁC MÔ HÌNH THUẬT TOÁN	Giải thuật tham lam	2	11
</>
204	DSA03026	LỰA CHỌN THAM LAM	CÁC MÔ HÌNH THUẬT TOÁN	Giải thuật tham lam	2	69
</>
205	DSA04007	HỆ CƠ SỐ K	CÁC MÔ HÌNH THUẬT TOÁN	Chia và trị	2	86
</>
206	DSA04008	SỐ FIBONACCI THỨ N	CÁC MÔ HÌNH THUẬT TOÁN	Chia và trị	2	153
</>
207	DSA04009	LŨY THỪA MA TRẬN 1	CÁC MÔ HÌNH THUẬT TOÁN	Chia và trị	2	125
</>
208	DSA04011	TÍCH HAI SỐ NHỊ PHÂN	CÁC MÔ HÌNH THUẬT TOÁN	Chia và trị	2	76
</>
209	DSA04012	TÍCH ĐA THỨC	CÁC MÔ HÌNH THUẬT TOÁN	Chia và trị	2	51
</>
210	DSA04013	SẮP XẾP KANGURU	CÁC MÔ HÌNH THUẬT TOÁN	Chia và trị	2	41
</>
211	DSA04014	CẶP NGHỊCH THẾ	CÁC MÔ HÌNH THUẬT TOÁN	Chia và trị	2	86
</>
212	DSA04023	KHOẢNG CÁCH NHỎ HƠN K	CÁC MÔ HÌNH THUẬT TOÁN	Chia và trị	2	56
</>
213	DSA05003	DÃY CON CHUNG DÀI NHẤT CỦA BA XÂU	CÁC MÔ HÌNH THUẬT TOÁN	Quy hoạch động	2	60
</>
214	DSA05006	TỔNG LỚN NHẤT CỦA DÃY CON TĂNG DẦN	CÁC MÔ HÌNH THUẬT TOÁN	Quy hoạch động	2	94
</>
215	DSA05007	TỔNG LỚN NHẤT CỦA DÃY CON KHÔNG KỀ NHAU	CÁC MÔ HÌNH THUẬT TOÁN	Quy hoạch động	2	81
</>
216	DSA05014	CATALAN NUMBER	CÁC MÔ HÌNH THUẬT TOÁN	Quy hoạch động	2	18
</>
217	DSA05015	TÍNH P(N,K)	CÁC MÔ HÌNH THUẬT TOÁN	Quy hoạch động	2	42
</>
218	DSA05016	SỐ UGLY	CÁC MÔ HÌNH THUẬT TOÁN	Quy hoạch động	2	31
</>
219	DSA05017	DÃY SỐ BI-TONIC	CÁC MÔ HÌNH THUẬT TOÁN	Quy hoạch động	2	41
</>
220	DSA05018	XÂU CON ĐỐI XỨNG DÀI NHẤT	CÁC MÔ HÌNH THUẬT TOÁN	Quy hoạch động	2	106
</>
221	DSA05019	HÌNH VUÔNG LỚN NHẤT	CÁC MÔ HÌNH THUẬT TOÁN	Quy hoạch động	2	45
</>
222	DSA05020	ĐƯỜNG ĐI NHỎ NHẤT	CÁC MÔ HÌNH THUẬT TOÁN	Quy hoạch động	2	38
</>
223	DSA05022	KÝ TỰ GIỐNG NHAU	CÁC MÔ HÌNH THUẬT TOÁN	Quy hoạch động	2	63
</>
224	DSA05023	TỔNG CÁC XÂU CON	CÁC MÔ HÌNH THUẬT TOÁN	Quy hoạch động	2	32
</>
225	DSA05024	TỔNG BẰNG K	CÁC MÔ HÌNH THUẬT TOÁN	Quy hoạch động	2	47
</>
226	DSA05028	BIẾN ĐỔI XÂU	CÁC MÔ HÌNH THUẬT TOÁN	Quy hoạch động	2	21
</>
227	DSA05031	TỔNG BÌNH PHƯƠNG	CÁC MÔ HÌNH THUẬT TOÁN	Quy hoạch động	2	70
</>
228	DSA05035	CHỮ SỐ SẮP XẾP TĂNG DẦN	CÁC MÔ HÌNH THUẬT TOÁN	Quy hoạch động	2	19
</>
229	DSA05036	TĂNG - GIẢM	CÁC MÔ HÌNH THUẬT TOÁN	Quy hoạch động	2	10
</>
230	DSA05037	CHỮ SỐ SẮP XẾP TĂNG DẦN	CÁC MÔ HÌNH THUẬT TOÁN	Quy hoạch động	2	17
</>
231	DSA05038	DÃY CON TĂNG DÀI NHẤT 2 CHIỀU	CÁC MÔ HÌNH THUẬT TOÁN	Quy hoạch động	2	4
</>
232	DSA05040	DÃY TAM GIÁC DÀI NHẤT	CÁC MÔ HÌNH THUẬT TOÁN	Quy hoạch động	2	30
</>
233	DSA05041	BIẾN ĐỔI VỀ XÂU ĐỐI XỨNG	CÁC MÔ HÌNH THUẬT TOÁN	Quy hoạch động	2	30
</>
234	DSA05042	DÃY CON LIÊN TIẾP TỔNG BẰNG K	CÁC MÔ HÌNH THUẬT TOÁN	Quy hoạch động	2	27
</>
235	DSA05043	SỐ THUẬN NGHỊCH	CÁC MÔ HÌNH THUẬT TOÁN	Quy hoạch động	2	42
</>
236	DSA05047	CHỌN Ô	CÁC MÔ HÌNH THUẬT TOÁN	Quy hoạch động	2	5
</>
237	DSA06037	SẮP XẾP ĐOẠN CON	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	2	77
</>
238	DSA06038	CẶP SỐ	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	2	9
</>
239	DSA06044	SẮP XẾP CHẴN LẺ	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	2	248
</>
240	DSA07008	BIẾN ĐỔI TRUNG TỐ - HẬU TỐ	CÁC MÔ HÌNH THUẬT TOÁN	Ngăn xếp	2	22
</>
241	DSA07011	BIẾN ĐỔI HẬU TỐ - TIỀN TỐ	CÁC MÔ HÌNH THUẬT TOÁN	Ngăn xếp	2	28
</>
242	DSA07012	BIẾN ĐỔI HẬU TỐ - TRUNG TỐ	CÁC MÔ HÌNH THUẬT TOÁN	Ngăn xếp	2	28
</>
243	DSA07016	BIỂU THỨC TĂNG GIẢM	CÁC MÔ HÌNH THUẬT TOÁN	Ngăn xếp	2	15
</>
244	DSA07017	PHẦN TỬ BÊN PHẢI NHỎ HƠN	CÁC MÔ HÌNH THUẬT TOÁN	Ngăn xếp	2	15
</>
245	DSA07019	HÌNH CHỮ NHẬT LỚN NHẤT	CÁC MÔ HÌNH THUẬT TOÁN	Ngăn xếp	2	21
</>
246	DSA07028	NHỊP CHỨNG KHOÁN	CÁC CẤU TRÚC DỮ LIỆU CƠ BẢN	Ngăn xếp	2	7
</>
247	DSA07029	GIẢI MÃ XÂU KÝ TỰ	CÁC MÔ HÌNH THUẬT TOÁN	Ngăn xếp	2	8
</>
248	DSA07041	BIỂU THỨC ĐÚNG DÀI NHẤT	CÁC CẤU TRÚC DỮ LIỆU CƠ BẢN	Ngăn xếp	2	24
</>
249	DSA08004	GIÁ TRỊ NHỎ NHẤT CỦA XÂU	CÁC MÔ HÌNH THUẬT TOÁN	Hàng đợi	2	28
</>
250	DSA08009	BIẾN ĐỔI S – T	CÁC MÔ HÌNH THUẬT TOÁN	Hàng đợi	2	29
</>
251	DSA08025	QUÂN MÃ	CÁC CẤU TRÚC DỮ LIỆU CƠ BẢN	Hàng đợi	2	12
</>
252	DSA09006	ĐƯỜNG ĐI THEO DFS VỚI ĐỒ THỊ VÔ HƯỚNG	CÁC MÔ HÌNH THUẬT TOÁN	Duyệt đồ thị	2	82
</>
253	DSA09007	ĐƯỜNG ĐI THEO BFS TRÊN ĐỒ THỊ VÔ HƯỚNG	CÁC MÔ HÌNH THUẬT TOÁN	Duyệt đồ thị	2	74
</>
254	DSA09008	ĐẾM SỐ THÀNH PHẦN LIÊN THÔNG	CÁC MÔ HÌNH THUẬT TOÁN	Duyệt đồ thị	2	81
</>
255	DSA09009	TÌM SỐ THÀNH PHẦN LIÊN THÔNG VỚI BFS	CÁC MÔ HÌNH THUẬT TOÁN	Duyệt đồ thị	2	78
</>
256	DSA09010	KIỂM TRA TÍNH LIÊN THÔNG MẠNH	CÁC MÔ HÌNH THUẬT TOÁN	Duyệt đồ thị	2	65
</>
257	DSA09011	SỐ LƯỢNG HÒN ĐẢO	CÁC MÔ HÌNH THUẬT TOÁN	Duyệt đồ thị	2	52
</>
258	DSA09012	LIỆT KÊ ĐỈNH TRỤ	CÁC MÔ HÌNH THUẬT TOÁN	Duyệt đồ thị	2	51
</>
259	DSA09014	KIỂM TRA CHU TRÌNH TRÊN ĐỒ THỊ VÔ HƯỚNG	CÁC MÔ HÌNH THUẬT TOÁN	Duyệt đồ thị	2	43
</>
260	DSA09015	KIỂM TRA CHU TRÌNH TRÊN ĐỒ THỊ CÓ HƯỚNG	CÁC MÔ HÌNH THUẬT TOÁN	Duyệt đồ thị	2	39
</>
261	DSA09016	KIỂM TRA CHU TRÌNH TRÊN ĐỒ THỊ CÓ HƯỚNG VỚI DFS	CÁC MÔ HÌNH THUẬT TOÁN	Duyệt đồ thị	2	38
</>
262	DSA09017	KIỂM TRA ĐỒ THỊ CÓ PHẢI LÀ CÂY HAY KHÔNG	CÁC MÔ HÌNH THUẬT TOÁN	Duyệt đồ thị	2	19
</>
263	DSA09018	LIỆT KÊ ĐỈNH TRỤ	CÁC MÔ HÌNH THUẬT TOÁN	Đồ thị nâng cao	2	36
</>
264	DSA09019	KIỂM TRA CHU TRÌNH	CÁC MÔ HÌNH THUẬT TOÁN	Đồ thị nâng cao	2	29
</>
265	DSA09028	TÔ MÀU ĐỒ THỊ	CÁC CẤU TRÚC DỮ LIỆU CƠ BẢN	Duyệt đồ thị	2	3
</>
266	DSA09029	ĐƯỜNG ĐI HAMILTON	CÁC CẤU TRÚC DỮ LIỆU CƠ BẢN	Duyệt đồ thị	2	8
</>
267	DSA09030	ĐỒ THỊ HAI PHÍA	CÁC CẤU TRÚC DỮ LIỆU CƠ BẢN	Duyệt đồ thị	2	14
</>
268	DSA09032	KẾT BẠN	CÁC MÔ HÌNH THUẬT TOÁN	Duyệt đồ thị	2	22
</>
269	DSA09033	MẠNG XÃ HỘI	CÁC CẤU TRÚC DỮ LIỆU CƠ BẢN	Duyệt đồ thị	2	23
</>
270	DSA10001	TÌM ĐƯỜNG	CÁC MÔ HÌNH THUẬT TOÁN	Đồ thị nâng cao	2	3
</>
271	DSA10003	KIỂM TRA CHU TRÌNH SỬ DỤNG DISJOIN SET	CÁC MÔ HÌNH THUẬT TOÁN	Duyệt đồ thị	2	20
</>
272	DSA10006	CÂY KHUNG CỦA ĐỒ THỊ THEO THUẬT TOÁN DFS	CÁC MÔ HÌNH THUẬT TOÁN	Đồ thị nâng cao	2	14
</>
273	DSA10007	CÂY KHUNG CỦA ĐỒ THỊ THEO THUẬT TOÁN BFS	CÁC MÔ HÌNH THUẬT TOÁN	Đồ thị nâng cao	2	14
</>
274	DSA11001	CÂY BIỂU THỨC 1	CÁC MÔ HÌNH THUẬT TOÁN	Cây nhị phân	2	8
</>
275	DSA11002	CÂY BIỂU THỨC 2	CÁC MÔ HÌNH THUẬT TOÁN	Cây nhị phân	2	4
</>
276	DSA11003	DUYỆT CÂY 1	CÁC MÔ HÌNH THUẬT TOÁN	Cây nhị phân	2	7
</>
277	DSA11004	DUYỆT CÂY THEO MỨC	CÁC MÔ HÌNH THUẬT TOÁN	Cây nhị phân	2	8
</>
278	DSA11005	DUYỆT CÂY 2	CÁC MÔ HÌNH THUẬT TOÁN	Cây nhị phân	2	5
</>
279	DSA11008	KIỂM TRA NODE LÁ	CÁC MÔ HÌNH THUẬT TOÁN	Cây nhị phân	2	6
</>
280	DSAKT012	ĐỔI TIỀN	CÁC MÔ HÌNH THUẬT TOÁN	Quay lui - Nhánh cận	2	81
</>
281	TN05009	CHU TRÌNH THEO DFS	CÁC CẤU TRÚC DỮ LIỆU CƠ BẢN	Duyệt đồ thị	2	13
</>
282	DSA01018	TẬP CON LIỀN KỀ PHÍA TRƯỚC	CÁC MÔ HÌNH THUẬT TOÁN	Sinh kế tiếp	3	100
</>
283	DSA02009	CHIA MẢNG	CÁC MÔ HÌNH THUẬT TOÁN	Quay lui - Nhánh cận	3	42
</>
284	DSA02010	TỔ HỢP SỐ CÓ TỔNG BẰNG X	CÁC MÔ HÌNH THUẬT TOÁN	Quay lui - Nhánh cận	3	141
</>
285	DSA02011	MÁY ATM	CÁC MÔ HÌNH THUẬT TOÁN	Quay lui - Nhánh cận	3	64
</>
286	DSA02015	LOẠI BỎ DẤU NGOẶC	CÁC MÔ HÌNH THUẬT TOÁN	Quay lui - Nhánh cận	3	3
</>
287	DSA02027	NGƯỜI DU LỊCH	CÁC MÔ HÌNH THUẬT TOÁN	Quay lui - Nhánh cận	3	72
</>
288	DSA02028	CHIA ĐỀU	CÁC MÔ HÌNH THUẬT TOÁN	Quay lui - Nhánh cận	3	14
</>
289	DSA03014	SỐ KHỐI LẬP PHƯƠNG	CÁC MÔ HÌNH THUẬT TOÁN	Giải thuật tham lam	3	26
</>
290	DSA03027	GIÁ TRỊ LỚN NHẤT	CÁC MÔ HÌNH THUẬT TOÁN	Giải thuật tham lam	3	53
</>
291	DSA04006	ĐẾM SỐ BÍT 1	CÁC MÔ HÌNH THUẬT TOÁN	Chia và trị	3	21
</>
292	DSA05010	DÃY CON DÀI NHẤT CÓ TỔNG CHIA HẾT CHO K	CÁC MÔ HÌNH THUẬT TOÁN	Quy hoạch động	3	17
</>
293	DSA05011	SỐ CÓ TỔNG CHỮ SỐ BẰNG K	CÁC MÔ HÌNH THUẬT TOÁN	Quy hoạch động	3	43
</>
294	DSA05021	CẶP SỐ	CÁC MÔ HÌNH THUẬT TOÁN	Quy hoạch động	3	15
</>
295	DSA05030	DI CHUYỂN VỀ GỐC TỌA ĐỘ	CÁC MÔ HÌNH THUẬT TOÁN	Quy hoạch động	3	22
</>
296	DSA05032	XÂU ĐỐI XỨNG 1	CÁC MÔ HÌNH THUẬT TOÁN	Quy hoạch động	3	14
</>
297	DSA05033	XÂU ĐỐI XỨNG 2	CÁC MÔ HÌNH THUẬT TOÁN	Quy hoạch động	3	21
</>
298	DSA05039	TỔNG CHỮ SỐ	CÁC MÔ HÌNH THUẬT TOÁN	Quy hoạch động	3	4
</>
299	DSA05046	LŨY THỪA BẬC K	CÁC MÔ HÌNH THUẬT TOÁN	Quy hoạch động	3	3
</>
300	DSA06045	XÂU TỐT	CÁC MÔ HÌNH THUẬT TOÁN	Sắp xếp - Tìm kiếm	3	3
</>
301	DSA07005	BIỂU THỨC TƯƠNG ĐƯƠNG	CÁC MÔ HÌNH THUẬT TOÁN	Ngăn xếp	3	11
</>
302	DSA07006	XÓA DẤU NGOẶC	CÁC MÔ HÌNH THUẬT TOÁN	Ngăn xếp	3	5
</>
303	DSA07007	SO SÁNH BIỂU THỨC	CÁC MÔ HÌNH THUẬT TOÁN	Ngăn xếp	3	8
</>
304	DSA07018	TỔNG ĐA THỨC	CÁC MÔ HÌNH THUẬT TOÁN	Ngăn xếp	3	8
</>
305	DSA07024	GHÉP VÁN GỖ	CÁC CẤU TRÚC DỮ LIỆU CƠ BẢN	Ngăn xếp	3	5
</>
306	DSA07030	HÌNH CHỮ NHẬT 0-1	CÁC CẤU TRÚC DỮ LIỆU CƠ BẢN	Ngăn xếp	3	13
</>
307	DSA08010	BIẾN ĐỔI SỐ TỰ NHIÊN	CÁC MÔ HÌNH THUẬT TOÁN	Hàng đợi	3	9
</>
308	DSA08012	TÌM SỐ K THỎA MÃN ĐIỀU KIỆN	CÁC MÔ HÌNH THUẬT TOÁN	Hàng đợi	3	12
</>
309	DSA08020	BIẾN ĐỔI SỐ NGUYÊN TỐ	CÁC MÔ HÌNH THUẬT TOÁN	Hàng đợi	3	8
</>
310	DSA08022	BỘI SỐ LỚN NHẤT CỦA 3	CÁC CẤU TRÚC DỮ LIỆU CƠ BẢN	Hàng đợi	3	5
</>
311	DSA08029	QUAY HÌNH VUÔNG	CÁC MÔ HÌNH THUẬT TOÁN	Hàng đợi	3	8
</>
312	DSA09031	CHÚ CỪU XA CÁCH	CÁC CẤU TRÚC DỮ LIỆU CƠ BẢN	Duyệt đồ thị	3	4
</>
313	DSA09034	ĐẾM SỐ AO	CÁC CẤU TRÚC DỮ LIỆU CƠ BẢN	Duyệt đồ thị	3	36
</>
314	DSA09037	HỌP MẶT	CÁC CẤU TRÚC DỮ LIỆU CƠ BẢN	Duyệt đồ thị	3	11
</>
315	DSA09049	LAN TRUYỀN DINH DƯỠNG	CÁC CẤU TRÚC DỮ LIỆU CƠ BẢN	Duyệt đồ thị	3	4
</>
316	DSA10008	DIJKSTRA	CÁC MÔ HÌNH THUẬT TOÁN	Đồ thị nâng cao	3	14
</>
317	DSA10009	FLOYD	CÁC MÔ HÌNH THUẬT TOÁN	Đồ thị nâng cao	3	8
</>
318	DSA10011	DI CHUYỂN TRÊN BẢNG SỐ	CÁC MÔ HÌNH THUẬT TOÁN	Đồ thị nâng cao	3	8
</>
319	DSA10012	ĐƯỜNG ĐI TRUNG BÌNH	CÁC MÔ HÌNH THUẬT TOÁN	Đồ thị nâng cao	3	4
</>
320	DSA10015	KRUSKAL	CÁC CẤU TRÚC DỮ LIỆU CƠ BẢN	Đồ thị nâng cao	3	15
</>
321	DSA10017	CHU TRÌNH ÂM	CÁC CẤU TRÚC DỮ LIỆU CƠ BẢN	Đồ thị nâng cao	3	8
</>
322	DSA11006	DUYỆT CÂY KIỂU XOẮN ỐC	CÁC MÔ HÌNH THUẬT TOÁN	Cây nhị phân	3	8
</>
323	DSA11010	CÂY NHỊ PHÂN HOÀN HẢO	CÁC MÔ HÌNH THUẬT TOÁN	Cây nhị phân	3	6
</>
324	DSA11011	CÂY NHỊ PHÂN ĐỦ	CÁC MÔ HÌNH THUẬT TOÁN	Cây nhị phân	3	7
</>
325	DSA11012	CÂY NHỊ PHÂN BẰNG NHAU	CÁC MÔ HÌNH THUẬT TOÁN	Cây nhị phân	3	6
</>
326	DSA11014	TỔNG NODE LÁ BÊN PHẢI	CÁC MÔ HÌNH THUẬT TOÁN	Cây nhị phân	3	1
</>
327	DSA11015	TỔNG LỚN NHẤT	CÁC MÔ HÌNH THUẬT TOÁN	Cây nhị phân	3	2
</>
328	DSA11016	BIẾN ĐỔI SANG CÂY NHỊ PHÂN TÌM KIẾM	CÁC MÔ HÌNH THUẬT TOÁN	Cây nhị phân	3	3
</>
329	DSA11017	DUYỆT CÂY NHỊ PHÂN TÌM KIẾM 1	CÁC MÔ HÌNH THUẬT TOÁN	Cây nhị phân	3	4
</>
330	DSA11018	XÂY DỰNG LẠI CÂY NHỊ PHÂN TÌM KIẾM	CÁC MÔ HÌNH THUẬT TOÁN	Cây nhị phân	3	2
</>
331	DSA11019	DUYỆT CÂY NHỊ PHÂN TÌM KIẾM 2	CÁC MÔ HÌNH THUẬT TOÁN	Cây nhị phân	3	3
</>
332	DSA11020	KIỂM TRA CÂY NHỊ PHÂN TÌM KIẾM	CÁC MÔ HÌNH THUẬT TOÁN	Cây nhị phân	3	4
</>
333	DSA11021	NODE LÁ CỦA CÂY NHỊ PHÂN TÌM KIẾM	CÁC MÔ HÌNH THUẬT TOÁN	Cây nhị phân	3	3
</>
334	DSA11022	NODE TRUNG GIAN CỦA CÂY NHỊ PHÂN TÌM KIẾM	CÁC MÔ HÌNH THUẬT TOÁN	Cây nhị phân	3	3
</>
335	DSA11023	ĐỘ SÂU CÂY NHỊ PHÂN TÌM KIẾM	CÁC MÔ HÌNH THUẬT TOÁN	Cây nhị phân	3	3
</>
336	DSA11024	CÂY NHỊ PHÂN TÌM KIẾM CÂN BẰNG 1	CÁC MÔ HÌNH THUẬT TOÁN	Cây nhị phân	3	3
</>
337	DSA11025	CÂY NHỊ PHÂN TÌM KIẾM CÂN BẰNG 2	CÁC MÔ HÌNH THUẬT TOÁN	Cây nhị phân	3	2
</>
338	DSA11026	DUYỆT SAU CÂY TÌM KIẾM CÂN BẰNG	CÁC CẤU TRÚC DỮ LIỆU CƠ BẢN	Cây nhị phân	3	2
</>
339	DSA11027	ĐẾM SỐ NODE LÁ CÂY NHỊ PHÂN TÌM KIẾM CÂN BẰNG	CÁC CẤU TRÚC DỮ LIỆU CƠ BẢN	Cây nhị phân	3	2
</>
340	DSA11028	ĐỘ CAO CỦA CÂY	CÁC CẤU TRÚC DỮ LIỆU CƠ BẢN	Cây nhị phân	3	3
</>
341	DSA11029	ĐƯỜNG ĐI TỚI NODE LÁ	CÁC CẤU TRÚC DỮ LIỆU CƠ BẢN	Cây nhị phân	3	3
</>
342	DSAKT060	TRUY VẤN ĐỐI XỨNG	CÁC CẤU TRÚC DỮ LIỆU NÂNG CAO	Cây nhị phân	3	4
</>
343	DSA02014	TỪ ĐIỂN	CÁC MÔ HÌNH THUẬT TOÁN	Quay lui - Nhánh cận	4	22
</>
344	DSA02018	BIỂU THỨC TOÁN HỌC	CÁC MÔ HÌNH THUẬT TOÁN	Quay lui - Nhánh cận	4	17
</>
345	DSA02019	ĐƯỜNG ĐI DÀI NHẤT	CÁC MÔ HÌNH THUẬT TOÁN	Quay lui - Nhánh cận	4	9
</>
346	DSA02020	SỐ NHỎ NHẤT CÓ N ƯỚC SỐ	CÁC MÔ HÌNH THUẬT TOÁN	Quay lui - Nhánh cận	4	11
</>
347	DSA02021	KÝ TỰ ĐẶC BIỆT	CÁC MÔ HÌNH THUẬT TOÁN	Quay lui - Nhánh cận	4	21
</>
348	DSA05045	BÀI TOÁN CÁI TÚI KHÔNG NGUYÊN	CÁC MÔ HÌNH THUẬT TOÁN	Quy hoạch động	4	8
</>
349	DSA07015	TÍNH TOÁN GIÁ TRỊ BIỂU THỨC TRUNG TỐ	CÁC MÔ HÌNH THUẬT TOÁN	Ngăn xếp	4	4
</>
350	DSA07022	PHẦN TỬ CÓ SỐ LẦN XUẤT HIỆN NHIỀU HƠN BÊN PHẢI	CÁC MÔ HÌNH THUẬT TOÁN	Ngăn xếp	4	10
</>
351	DSA07045	GÕ BÀN PHÍM	CÁC CẤU TRÚC DỮ LIỆU CƠ BẢN	Ngăn xếp	4	9
</>
352	DSA08011	KHOẢNG CÁCH XÂU KÝ TỰ	CÁC MÔ HÌNH THUẬT TOÁN	Hàng đợi	4	6
</>
353	DSA08013	DI CHUYỂN TRÁNH VẬT CẢN	CÁC MÔ HÌNH THUẬT TOÁN	Hàng đợi	4	7
</>
354	DSA08014	GIEO MẦM	CÁC MÔ HÌNH THUẬT TOÁN	Hàng đợi	4	7
</>
355	DSA08015	DI CHUYỂN TRONG KHÔNG GIAN	CÁC MÔ HÌNH THUẬT TOÁN	Hàng đợi	4	5
</>
356	DSA08045	HÀNG RÀO	CÁC MÔ HÌNH THUẬT TOÁN	Hàng đợi	4	3
</>
357	DSA10016	NỐI ĐIỂM	CÁC CẤU TRÚC DỮ LIỆU CƠ BẢN	Đồ thị nâng cao	4	5
</>
358	DSA11030	KHOẢNG CÁCH GIỮA HAI NODE	CÁC CẤU TRÚC DỮ LIỆU CƠ BẢN	Cây nhị phân	4	5
</>
359	DSA03033	ATM THẾ HỆ MỚI	CÁC MÔ HÌNH THUẬT TOÁN	Giải thuật tham lam	5	5
</>
360	DSA04019	CẶP ĐIỂM GẦN NHẤT	CÁC MÔ HÌNH THUẬT TOÁN	Chia và trị	5	6
</>
361	DSA04030	SỐ TRIBONACCI	CÁC MÔ HÌNH THUẬT TOÁN	Chia và trị	5	7
</>
362	DSA08016	HEXGAME	CÁC MÔ HÌNH THUẬT TOÁN	Hàng đợi	5	7

CTDL_001

// created: 2023-05-26 17:25:08
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

int n;

bool check(string &s){
	for(int i = 0; i <= n / 2; ++i){
		if(s[i] != s[n - i - 1])
			return false;
	}
	return true;
}

void backtrack(string s = "", int i = 0){
	if(i == n){
		if(check(s)){
			for(char c : s)
				cout << c << ' ';
			cout << '\n';
		}
		return;
	}
	backtrack(s + "0", i + 1);
	backtrack(s + "1", i + 1);
}

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	cin >> n;
	backtrack();
	return 0;
}

CTDL_002

// created: 2023-05-26 17:25:41
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
vector<int> a;
int n, k;
int cnt = 0;
void backtrack(string s = "", int i = 0){
	if(i == n){
		int sm = 0;
		for(int i = 0; i < n; ++i){
			if(s[i] == '1'){
				sm += a[i];
			}
		}
		if(sm == k){
			for(int i = 0; i < n; ++i){
				if(s[i] == '1')
					cout << a[i] << ' ';
			}
			++cnt;
			cout << '\n';
		}
		return;
	}
	backtrack(s + "0", i + 1);
	backtrack(s + "1", i + 1);

}

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	cin >> n >> k;
	a.resize(n);
	for(int i = 0; i < n; ++i)
		cin >> a[i];	
	backtrack();
	cout << cnt;
	return 0;
}


CTDL_003

// created: 2023-05-26 17:33:16
// author: Nguyen Tung Duong

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

vector<int> a;
vector<int> c;

int n, w;
int fopt;
string xopt;
void Try(string s = "", int i = 0){
	if(i == n){
		int tmp1 = 0;
		int tmp2 = w;
		for(int i = 0; i < n; ++i){
			if(s[i] == '1'){
				tmp1 += c[i];
				tmp2 -= a[i];
			}
		}
		if(tmp2 >= 0){
			if(tmp1 >= fopt){
				fopt = tmp1;
				xopt = s;
			}
		}
		return;
	}
	Try(s + "0", i + 1);
	Try(s + "1", i + 1);
}

const ll mod = 1e9 + 7;
int main()
{


    ios_base::sync_with_stdio(false);
    cin.tie(0);

	cin >> n >> w;
	a.resize(n);
	c.resize(n);
	for(int i = 0; i < n; ++i)
		cin >> c[i];
	for(int i = 0; i < n; ++i)
		cin >> a[i];

	Try();
	cout << fopt << '\n';
	for(int i = 0; i < n; ++i){
		cout << xopt[i] << ' ';
	}

    return 0;
}


CTDL_004

// created: 2023-05-26 17:33:34
// author: Nguyen Tung Duong

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

int n, k;
int b[200];
int a[200];

int cnt = 0;
void Try(int i = 1){
	for(int j = a[i - 1] + 1; j <= n - k + i; ++j){
		a[i] = j;
		if(i == k){
			vector<int> tmp;
			for(int l = 1; l <= k; ++l){
				tmp.push_back(b[a[l]]);
			}
			bool flag = true;
			for(int l = 0; l < k - 1; ++l){
				if(tmp[l] > tmp[l + 1]){
					flag = false;
				}
			}
			if(flag){

				++cnt;
			}
		}else
			Try(i + 1);
	}	
}

const ll mod = 1e9 + 7;
int main()
{


    ios_base::sync_with_stdio(false);
    cin.tie(0);

	memset(a, 0, sizeof(a));
	cin >> n >> k;	
	for(int i = 1; i <= n; ++i)
		cin >> b[i];
	Try();
	cout << cnt;	
	return 0;
}

DSA01001

// created: 2023-05-26 17:26:02
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

string s;

void S(){
	int i = s.length() - 1;
	while(s[i] == '1' && i >= 0){
		--i;
	}
	if(i == -1){
		for(int i = 0; i < s.length(); ++i){
			s[i] = '0';
		}
		return;
	}
	s[i] = '1';
	for(int j = i + 1; j < s.length(); ++j)
		s[j] = '0';

}
int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;
	while(t--){
		cin >> s;
		S();
		cout << s << '\n';
	}
	return 0;
}

DSA01002

// created: 2023-05-26 17:26:31
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int n, k;
vector<int> a;
void S(){
	int i = k;
	while(a[i] == n - k + i && i >= 1)
		--i;
	if(i == 0){
		for(int i = 1; i <= k; ++i){
			a[i] = i;
		}
		return;
	}
	a[i]++;
	for(int j = i + 1; j <= k; ++j){
		a[j] = a[j - 1] + 1;
	}
}
int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;
	while(t--){
		cin >> n >> k;
		a.resize(k + 1);
		for(int i = 1; i <= k; ++i)
			cin >> a[i]; 
		S();
		for(int i = 1; i <= k; ++i)
			cout << a[i] << ' ';
		cout << '\n';

	}
	return 0;
}

DSA01003

// created: 2023-05-26 17:26:55
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

vector<int> a;
void S(){
	
}
int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;
	while(t--){
		int n;
		cin >> n; 
		vector<int> a(n);
		for(int i = 0; i < n; ++i)
			cin >> a[i];
		next_permutation(a.begin(), a.end());
		for(int i : a)
			cout << i << ' ';
		cout << '\n';
	}
	return 0;
}

DSA01004

// created: 2023-05-26 17:27:17
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int n, k;
vector<int> a;
void S(int i = 1){
	for(int j = a[i - 1] + 1; j <= n - k + i; ++j){
		a[i] = j;
		if(i == k){
			for(int l = 1; l <= k; ++l){
				cout << a[l];
			}
			cout << ' ';
		}else
			S(i+1);
	}	
}
int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;
	while(t--){
		cin >> n >> k; 
		a.resize(k + 1);
		S();
		cout << '\n';
	}
	return 0;
}

DSA01005

// created: 2023-05-26 17:27:39
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int n, k;
vector<int> a;
void S(int i = 1){
	for(int j = a[i - 1] + 1; j <= n - k + i; ++j){
		a[i] = j;
		if(i == k){
			for(int l = 1; l <= k; ++l){
				cout << a[l];
			}
			cout << ' ';
		}else
			S(i+1);
	}	
}
int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;
	while(t--){
		cin >> n; 
		a.resize(n);
		for(int i = 0; i < n; ++i){
			a[i] = i + 1;
		}	
		do{
			for(int i : a){
				cout << i;
			}
			cout << ' ';
		}while(next_permutation(a.begin(), a.end()));
		cout << '\n';
	}
	return 0;
}

DSA01006

// created: 2023-05-26 17:28:02
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;


int main(){
	
	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		int n;
		cin >> n;	
		vector<int> a(n);
		for(int i = 0; i < n; ++i){
			a[i] = n - i;
		}
		do{
			for(int i : a){
				cout << i;
			}
			cout << ' ';
		}while(prev_permutation(a.begin(), a.end()));
		cout << '\n';
	}
	return 0;
}

DSA01007

// created: 2023-05-26 17:28:40
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

int n;

void Try(string s = "", int i = 0){
	if(i == n){
		cout << s << ' ';
		return;
	}
	Try(s + "A", i + 1);
	Try(s + "B", i + 1);
}

int main(){
	
	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		cin >> n;
		Try();
		cout << '\n';	
	}
	return 0;
}

DSA01008

// created: 2023-05-26 17:29:18
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

int n, k;

void Try(string s = "", int i = 0, int K = k){
	
	if(K == 0){
		cout << s;
		for(int j = 0; j < n - i; ++j){
			cout << 0;
		}
		cout << '\n';
		return;
	}
	if(i == n){
		return;
	}
	Try(s + "0", i + 1, K);	
	if(K > 0){
		Try(s + "1", i + 1, K - 1);
	}
}

int main(){
	
	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		cin >> n >> k;
		Try();
	}
	return 0;
}

DSA01009

// created: 2023-05-26 17:34:00
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

int n, k;
vector<string> res;
void backtrack(string s= "", int i = 0){

	if(i == n){
		int cnt = 0;
		for(int i = 0; i < n; ++i){
			int tmp = 0;
			while(s[i] == 'A'){
				++i;
				++tmp;
			}
			if(tmp > 0)
				--i;
			if(tmp == k)
				++cnt;
		}
		if(cnt == 1)
			res.push_back(s);
		return;
	}
	backtrack(s + "A", i + 1);
	backtrack(s + "B", i + 1);
}

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);
	
	cin >> n >> k;
	backtrack();	
	
	cout << res.size() << '\n';
	for(string i : res){
		cout << i << '\n';
	}
	return 0;
}

DSA01010

// created: 2023-05-26 17:34:23
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

int n, k;
int a[100];
int b[100];

bool Sinh(){
	int i = k;
	while(a[i] == n - k + i && i >= 1)
		--i;
	if(i == 0){
		return false;
	}
	a[i]++;
	for(int j = i + 1; j <= k; ++j){
		a[j] = a[j - 1] + 1;
	}
	return true;	
}

void solve(){
	for(int i = 1; i <= k; ++i){
		a[i] = b[i];
	}
	if(!Sinh()){
		cout << k;
	}else{
		int cnt = 0;
		for(int i = 1; i <= k; ++i){
			bool flag = true;
			for(int j = 1; j <= k; ++j){
				if(a[i] == b[j]) 
					flag = false;
			}
			if(flag) ++cnt;
		}	
		cout << cnt;
	}
}
int main(){
	
	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		memset(a, 0, sizeof(a));
		memset(b, 0, sizeof(b));
		cin >> n >> k;
		for(int i = 1; i <= k; ++i)
			cin >> b[i];
		solve();
		cout << '\n';
	}
	return 0;
}

DSA01011

// created: 2023-05-26 17:34:40
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

int n, k;
int a[100];
int b[100];

bool Sinh(){
	int i = k;
	while(a[i] == n - k + i && i >= 1)
		--i;
	if(i == 0){
		return false;
	}
	a[i]++;
	for(int j = i + 1; j <= k; ++j){
		a[j] = a[j - 1] + 1;
	}
	return true;	
}

void solve(){
	for(int i = 1; i <= k; ++i){
		a[i] = b[i];
	}
	if(!Sinh()){
		cout << k;
	}else{
		int cnt = 0;
		for(int i = 1; i <= k; ++i){
			bool flag = true;
			for(int j = 1; j <= k; ++j){
				if(a[i] == b[j]) 
					flag = false;
			}
			if(flag) ++cnt;
		}	
		cout << cnt;
	}
}
int main(){
	

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		string a;
		cin >> k >> a;
		cout << k << ' ';		
		if(!next_permutation(a.begin(), a.end())){
			cout << "BIGGEST";
		}else{
			cout << a;	
		}
		cout << '\n';
	}
	return 0;
}

DSA01012

// created: 2023-05-26 17:34:56
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int n;

void Try(string s = "", int i = 0){
	if(i == n){
		string tmp(n, '0');
		tmp[0] = s[0];
		for(int i = n - 1; i >= 1; --i){
			if(s[i] != s[i - 1])
				tmp[i] = '1';
			else
				tmp[i] = '0';
		}
		cout << tmp << ' ';
		return;
	}
	Try(s + "0", i + 1);
	Try(s + "1", i + 1);
}

int main()
{

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	deque<int> q;
	while(t--){
		cin >> n;
		Try();
		cout << '\n';		
	}
	return 0;
}

DSA01013

// created: 2023-05-26 17:35:14
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main()
{

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	deque<int> q;
	while(t--){
		string s;
		cin >> s;
		int n = s.length();
		string res(n, '0');
		res[0] = s[0];
		for(int i = 1; i < n; ++i){
			if(s[i] == '1'){
				res[i] = res[i - 1] == '1' ? '0' : '1';
			}else
				res[i] = res[i - 1];
		}
		cout << res << '\n';
	}
	return 0;
}

DSA01014

// created: 2023-05-26 17:35:32
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int n, k, s;
int a[100];
int cnt = 0;
void Try(int i = 1){
	for(int j = a[i - 1] + 1; j <= n - k + i; ++j){
		a[i] = j;
		if(i == k){
			int sum = 0;
			for(int x = 1; x <= k; ++x){
				sum += a[x];
			}
			if(sum == s)
				++cnt;
		}else
			Try(i + 1);
	}

}

int main()
{

	ios_base::sync_with_stdio(false);
	cin.tie(0);
	while(true){
		cin >> n >> k >> s;
		if(n == 0 && k == 0 && s == 0)
			return 0;
		else{
			cnt = 0;
			memset(a, 0, sizeof(a));
			Try();
			cout << cnt << '\n';
		}
	}
}

DSA01015

// created: 2023-05-26 17:35:47
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main()
{

	ios_base::sync_with_stdio(false);
	cin.tie(0);
	int t;
	cin >> t;

	while(t--){
		int n;
		cin >> n;
		queue<ll> q;
		q.push(9);
		while(!q.empty()){
			ll front = q.front(); q.pop();
			if(front % n == 0){
				cout << front << '\n';
				break;
			}else{
				q.push(front * 10);
				q.push(front * 10 + 9);
			}
		}
	}	
}

DSA01016

// created: 2023-05-26 17:36:07
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

void Try(int n, vector<int> a = {}){
	
	if(n == 0){
		cout << '(';
		for(int i = 0; i < a.size(); ++i){
			cout << a[i];
			if(i != a.size() - 1)
				cout << ' ';
		}
		cout << ") ";
		return;
	}
	for(int i = n; i >= 1; --i){
		if(a.size() == 0 || i <= a.back()){
			a.push_back(i);
			Try(n - i, a);
			a.pop_back();
		}
	}
}

int main()
{

	ios_base::sync_with_stdio(false);
	cin.tie(0);
	int t;
	cin >> t;

	while(t--){
		int n;
		cin >> n;
		Try(n);
		cout << '\n';	
	}	
}


DSA01017

// created: 2023-05-26 17:36:21
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main()
{

	ios_base::sync_with_stdio(false);
	cin.tie(0);
	int t;
	cin >> t;

	while(t--){
		string s;
		cin >> s;
		int n = s.length();
		string res(n, '0');
		res[0] = s[0];
		for(int i = n - 1; i >= 1; --i){
			if(s[i] != s[i - 1])
				res[i] = '1';
			else
				res[i] = '0';
		}
		cout << res << '\n';
	}	
}

DSA01018

// created: 2023-05-26 17:36:49
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const int mod = 1e9 + 7;

int n, k;
int a[1001];

void solve(){
	int i = k;
	while(a[i] - a[i - 1] == 1) --i;
	a[i]--;
	for(int j = i + 1; j <= k; ++j){
		a[j] = n - k + j;
	}
	for(int j = 1; j <= k; ++j)
		cout << a[j] << ' ';
}

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		memset(a, 0, sizeof(a));
		cin >> n >> k;
		for(int i = 1; i <= k; ++i) cin >> a[i];	
		solve();
		cout << '\n';	
	}

	return 0;
}

DSA01019

// created: 2023-05-26 17:30:08
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

int n;

void Try(string s = "", int i = 0, bool flag = false){
	
	if(i == n - 2){
		cout << 'H';
		cout << s;
		cout << 'A';
		cout << '\n';
		return;
	}
	Try(s + "A", i + 1, true);
	if(flag)
		Try(s + "H", i + 1, false);

}

int main(){
	
	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		cin >> n;
		Try();
	}
	return 0;
}


DSA01020

// created: 2023-05-26 17:30:26
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

string s;
void Sinh(){
	int i = s.length() - 1;
	while(i >= 0 && s[i] == '0')
		--i;
	if(i == -1){
		for(int j = 0; j < s.length(); ++j){
			cout << 1;
		}
		return;
	}
	s[i] = '0';
	for(int j = i + 1; j < s.length(); ++j)
		s[j] = '1';
	cout << s;
}

int main(){
	
	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		cin >> s;
		Sinh();
		cout << '\n';
	}
	return 0;
}

DSA01021

// created: 2023-05-26 17:30:55
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

int n, k;
int a[100];
int b[100];

bool Sinh(){
	int i = k;
	while(a[i] == n - k + i && i >= 1)
		--i;
	if(i == 0){
		return false;
	}
	a[i]++;
	for(int j = i + 1; j <= k; ++j){
		a[j] = a[j - 1] + 1;
	}
	return true;	
}

void solve(){
	for(int i = 1; i <= k; ++i){
		a[i] = b[i];
	}
	if(!Sinh()){
		cout << k;
	}else{
		int cnt = 0;
		for(int i = 1; i <= k; ++i){
			bool flag = true;
			for(int j = 1; j <= k; ++j){
				if(a[i] == b[j]) 
					flag = false;
			}
			if(flag) ++cnt;
		}	
		cout << cnt;
	}
}
int main(){
	
	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		memset(a, 0, sizeof(a));
		memset(b, 0, sizeof(b));
		cin >> n >> k;
		for(int i = 1; i <= k; ++i)
			cin >> b[i];
		solve();
		cout << '\n';
	}
	return 0;
}

DSA01022

// created: 2023-05-26 17:31:13
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

int main(){
	
	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		int n;
		cin >> n;
		vector<int> a(n);
		vector<int> b(n);
		for(int i = 0; i < n; ++i)
			cin >> b[i];
		for(int i = 0; i < n; ++i)
			a[i] = i + 1;
		int cnt = 1;
		do{
			bool flag = true;
			for(int i = 0; i < n; ++i){
				if(a[i] != b[i])
					flag = false;
			}	
			if(flag){
				cout << cnt << '\n';
				break;
			}
			++cnt;
		}while(next_permutation(a.begin(), a.end()));

	}
	return 0;
}

DSA01023

// created: 2023-05-26 17:31:35
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

int a[100];
int b[100];

int n, k;
int cnt;
void Try(int i = 1){
	for(int j = a[i - 1] + 1; j <= n - k + i; ++j){
		a[i] = j;
		if(i == k){
			bool flag = true;
			for(int l = 1; l <= k; ++l){
				if(a[l] != b[l])
					flag = false;
			}
			if(flag)
				cout << cnt << '\n';
			++cnt;
		}else
			Try(i + 1);
	}
}

int main(){
	
	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		cnt = 1;
		memset(a, 0, sizeof(a));
		memset(b, 0, sizeof(b));
		cin >> n >> k;
		for(int i = 1; i <= k; ++i)
			cin >> b[i];
		Try();
	}
	return 0;
}

DSA01025

// created: 2023-05-26 17:32:00
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

int a[100];
vector<string> b;
int n, k;
void Try(int i = 1){
	for(int j = a[i - 1] + 1; j <= n - k + i; ++j){
		a[i] = j;
		if(i == k){
			for(int l = 1; l <= k; ++l){
				char tmp = a[l] + 'A' - 1;
				cout << tmp; 
			}
			cout << '\n';
		}else
			Try(i + 1);
	}
}

int main(){
	
	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		cin >> n >> k;
		Try();
	}	
	return 0;
}

DSA01026

// created: 2023-05-26 17:32:19
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

int n;
void Try(int N = n, string s = "", int i = 0, int cnt1 = 1, int cnt2 = 0){
	if(i == n - 2){
		if(cnt2 < 3){
			cout << 8;
			cout << s;
			cout << 6;
			cout << '\n';
		}
		return;
	}
	if(cnt2 < 3)
		Try(N, s + "6", i + 1, 0, cnt2 + 1);
	if(cnt1 < 1)
		Try(N, s + "8", i + 1, cnt1 + 1, 0);

}

int main(){
	
	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cin >> n;
	Try();
	return 0;
}

DSA01027

// created: 2023-05-26 17:32:39
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

int main(){
	
	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int n;
	cin >> n;
	vector<int> a(n);
	for(int i = 0; i < n; ++i)
		cin >> a[i];
	sort(a.begin(), a.end());
	do{
		for(int i : a){
			cout << i << ' ';
		}
		cout << '\n';
	}while(next_permutation(a.begin(), a.end()));

	return 0;
}

DSA01028

// created: 2023-05-26 17:32:59
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

int a[100];
int n, k;
vector<int> b;

void Try(int i = 1){
	for(int j = a[i - 1] + 1; j <= n - k + i; ++j){
		a[i] = j;
		if(i == k){
			for(int l = 1; l <= k; ++l){
				cout << b[a[l] - 1] << ' ';
			}
			cout << '\n';
		}else
			Try(i + 1);
	}
}

int main(){
	
	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cin >> n >> k;

	set<int> s;
	for(int i = 0; i < n; ++i){
		int tmp;
		cin >> tmp;
		s.insert(tmp);
	}
	for(int i : s){
		b.push_back(i);
	}
	n = b.size();
	Try();
	return 0;
}

DSA02008

// created: 2023-05-26 17:36:35
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int n, k;
int a[10][10];
bool visited[10];
vector<vector<int>> ans;

void Try(int row = 0, int sum = k, vector<int> res = {}){
		
	if(row == n){
		if(sum == 0){
			ans.push_back(res);
		}
		return;
	}	
	for(int i = 0; i < n; ++i){
		if(a[row][i] <= sum && !visited[i]){
			visited[i] = true;
			res.push_back(i + 1);
			Try(row + 1, sum - a[row][i], res);
		   	res.pop_back();	
			visited[i] = false;
		}	
	}

}

int main(){
    
	ios_base::sync_with_stdio(false);
	cin.tie(0);	
	
	int t = 1;
	//cin >> t;

	while(t--){
		memset(visited, false, sizeof(visited));
		cin >> n >> k;
		for(int i = 0; i < n; ++i){
			for(int j = 0; j < n; ++j)
				cin >> a[i][j];
		}	
		Try();
		cout << ans.size() << '\n';
		for(int i = 0; i < ans.size(); ++i){
			for(int j : ans[i]){
				cout << j << ' ';
			}
			cout << '\n';
		}
	}	
 	 
    return 0;
}


DSA01024 - ĐẶT TÊN - 1

// created: 2023-05-26 17:37:39
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

int a[100];
vector<string> b;
int n, k;
void Try(int i = 1){
	for(int j = a[i - 1] + 1; j <= n - k + i; ++j){
		a[i] = j;
		if(i == k){
			for(int l = 1; l <= k; ++l){
				cout << b[a[l] - 1] << ' '; 
			}
			cout << '\n';
		}else
			Try(i + 1);
	}
}

int main(){
	
	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	cin >> n >> k;
	set<string> s;
	for(int i = 0; i < n; ++i){
		string tmp;
		cin >> tmp;
		s.insert(tmp);
	}	
	for(string i : s){
		b.push_back(i);
	}	
	sort(b.begin(), b.end());
	n = b.size();
	Try();
	return 0;
}


DSA02001 - DÃY SỐ 1

// created: 2023-05-26 17:37:57
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

int n;
vector<int> b;

void backtrack(vector<int> a = b, int i = 0){

	if(i == n){
		return;
	}
	cout << '[';
	for(int j = 0; j < n - i; ++j){
		cout << a[j];
		if(i != n - j - 1)
			cout << ' ';
	}
	for(int j = 0; j < n - i; ++j){
		a[j] = a[j] + a[j + 1];
	}
	cout << ']';
	cout << '\n';
	backtrack(a, i + 1);
}

int main(){
	
	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		cin >> n;
		b.resize(n);
		for(int i = 0; i < n; ++i)
			cin >> b[i];
		backtrack();
	}
	return 0;
}

DSA02002 - DÃY SỐ 2

// created: 2023-05-26 17:38:12
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

int n;
vector<int> b;
vector<vector<int>> res;

void backtrack(vector<int> a = b, int i = 0){

	if(i == n){
		return;
	}

	res.push_back(a);
	for(int j = 0; j < n - i; ++j){
		a[j] = a[j] + a[j + 1];
	}

	backtrack(a, i + 1);
}

int main(){
	
	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		res.clear();
		cin >> n;
		b.resize(n);
		for(int i = 0; i < n; ++i)
			cin >> b[i];
		backtrack();
		for(int i = res.size() - 1; i >= 0; --i){
			cout << '[';
			for(int j = 0; j < n - i; ++j){
				cout << res[i][j];
				if(j != n -i - 1)
					cout << ' ';
			}
			cout << "] ";
		}
		cout << '\n';
	}
	return 0;
}

DSA02003 - DI CHUYỂN TRONG MÊ CUNG 1

// created: 2023-05-26 17:38:26
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

int n;
int a[100][100];
bool flag = false;

void backtrack(string s = "", int x = 0, int y = 0){
	
	if(x == n || y == n) return;
	if(a[x][y] == 0) return;
	if(x == n - 1 && y == n - 1){
		cout << s << ' ';
		flag = true;
		return;
	}
	backtrack(s + "D", x + 1, y);
	backtrack(s + "R", x, y + 1);
}

int main(){
	
	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		flag= false;
		memset(a, 0, sizeof(a));
		cin >> n;
		for(int i = 0; i < n; ++i){
			for(int j = 0; j < n; ++j)
				cin >> a[i][j];
		}
		backtrack();
		if(!flag)
			cout << -1;
		cout << '\n';
	}
	return 0;
}

DSA02004 - DI CHUYỂN TRONG MÊ CUNG 2

// created: 2023-05-26 17:43:35
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int n;
int a[20][20];

int dx[4] = {1, 0, 0, -1};
int dy[4] = {0, -1, 1, 0};
string directions = "DLRU";
int visited[20][20];
bool flag = false;

void Try(string s = "", int x = 0, int y = 0){
	if(x == n - 1 && y == n - 1){
		flag = true;
		cout << s << ' ';
		return;
	}
	for(int i = 0; i < 4; ++i){
		int xx = x + dx[i];
		int yy = y + dy[i];
		if(xx >= 0 && yy >= 0 && xx < n && yy < n && a[xx][yy] == 1 && visited[xx][yy] == 0){
			visited[xx][yy] = 1;
			Try(s + directions[i], xx, yy);
			visited[xx][yy] = 0;
		}
	}
}


int main()
{

	ios_base::sync_with_stdio(false);
	cin.tie(0);
	int t;
	cin >> t;

	while(t--){
		memset(a, 0, sizeof(a));
		flag = false;
		for(int i = 0; i < 20; ++i){
			for(int j = 0; j < 20; ++j){
				visited[i][j] = 0;
			}
		}
		cin >> n;
		for(int i = 0; i < n; ++i){
			for(int j = 0; j < n; ++j)
				cin >> a[i][j];
		}
		if(a[0][0] == 0){
			cout << -1 << '\n';
			continue;
		}
		a[0][0] = 0;
		Try();
		if(!flag){
			cout << -1;
		}

		cout << '\n';
	}	
}

DSA02005 - HOÁN VỊ XÂU KÝ TỰ

// created: 2023-05-26 17:38:44
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

int n;
int a[100][100];
bool flag = false;

void backtrack(string s = "", int x = 0, int y = 0){
	

}

int main(){
	
	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		string s;
		cin >> s;
		do{
			cout << s << ' ';
		}while(next_permutation(s.begin(), s.end()));
		cout << '\n';
	}
	return 0;
}

DSA02006 - DÃY CON TỔNG BẰNG K

// created: 2023-05-26 17:39:03
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

int n, k;
int a[100];
bool flag = false;

void backtrack(string s = "", int i = 0){

	if(i == n){
		int m = 0;
		for(int i = 0; i < n; ++i){
			if(s[i] == '1'){
				m += a[i];
			}
		}
		
		if(m == k){
			flag = true;
			cout << '[';
			vector<int> tmp;
			for(int i = 0; i < n; ++i){
				if(s[i] == '1'){
					tmp.push_back(a[i]);
				}
			}
			for(int i = 0; i < tmp.size(); ++i){
				cout << tmp[i];
				if(i != tmp.size() - 1)
					cout << ' ';
			}
			cout << "] ";
		}
		return;
	}
	backtrack(s + "1", i + 1);
	backtrack(s + "0", i + 1);

}

int main(){
	
	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		flag = false;
		cin >> n >> k;
		for(int i = 0; i < n; ++i)
			cin >> a[i];
		sort(a, a + n);
		backtrack();
		if(!flag){
			cout << -1;
		}
		cout << '\n';
	}

	return 0;
}


DSA02007 - ĐỔI CHỖ CÁC CHỮ SỐ

// created: 2023-05-26 17:43:52
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

string res;
int n;

void Try(string s, int k){
	
	if(k == 0){
		res = max(s, res);
		return;
	}
	for(int i = 0; i < n - 1; ++i){
		char mx = s[i];
		for(int j = i + 1; j < n; ++j){
			mx = max(mx, s[j]);
		}
		if(mx != s[i]){
			for(int j = i + 1; j < n; ++j){
				if(s[j] == mx){
					swap(s[i], s[j]);
					Try(s, k - 1);
					swap(s[i], s[j]);
				}
			}
		}
	}
	res = max(s, res);
}

int main(){
    
	ios_base::sync_with_stdio(false);
	cin.tie(0);	
	
	int t;
	cin >> t;

	while(t--){
		int k;
		cin >> k;
		string s;
		cin >> s;
		res = s;
		n = s.length();
		Try(s, k);
		cout << res <<'\n';
	}	
 	 
    return 0;
}

DSA02009 - CHIA MẢNG

// created: 2023-05-26 17:48:05
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int n, k;
vector<int> a;

int S;
bool used[100];
bool flag = false;

void Try(int s = S, int cnt = 0){
	if(flag)
		return;
	if(cnt == k){
		flag = true;
		return;
	}

	for(int i = 0; i < n; ++i){
		if(flag)
			return;
		if(!used[i]){
			used[i] = true;
			if(a[i] <= s){
				if(a[i] == s){
					Try(s, cnt + 1);
				}else{
					Try(s - a[i], cnt);
				}
			}
			used[i] = false;
		}
	}
}

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		flag = false;
		memset(used, false, sizeof(used));
		cin >> n >> k;
		a.clear();
		a.resize(n);
		for(int i = 0; i < n; ++i) cin >> a[i];
		int sum = 0;
		for(int i = 0; i < n; ++i) sum += a[i];
		if(sum % k != 0){
			cout << 0;
		}else{
			S = sum / k;
			Try();
			if(flag)
				cout << 1;
			else
				cout << 0;
		}
		cout << '\n';
	}	

	return 0;
}

DSA02010 - TỔ HỢP SỐ CÓ TỔNG BẰNG X

// created: 2023-05-26 17:48:19
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int n, k;
vector<int> a;
bool flag = false;

void Try(vector<int> tmp = {}, int sum = k){

	if(sum == 0){
		flag = true;
		cout << "[";
		for(int i = 0; i < tmp.size(); ++i){
			cout << tmp[i];
			if(i != tmp.size() - 1)
				cout << ' ';
		}
		cout << "]";
		return;
	}

	for(int i = 0; i < n; ++i){
		if(a[i] <= sum){
			if(tmp.size() == 0){
				tmp.push_back(a[i]);
				Try(tmp, sum - a[i]);
				tmp.pop_back();
			}else{
				if(a[i] >= tmp.back()){
					tmp.push_back(a[i]);
					Try(tmp, sum - a[i]);
					tmp.pop_back();
				}
			}
		}
	}
}

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		cin >> n >> k;
		a.clear();
		a.resize(n);
		for(int i = 0; i < n; ++i) cin >> a[i];
		sort(a.begin(),a.end());
		Try();
		if(!flag)
			cout << -1;
		cout << '\n';	
	}	

	return 0;
}


DSA02011 - MÁY ATM

// created: 2023-05-26 17:48:34
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int n, k;
vector<int> a;

int res;

void Try(int i = 0, int s = 0, int cnt = 0){
	
	if(cnt >= res) return;
	if(s == k){
		res = min(res, cnt);
		return;
	}
	if(i == n) return;
	if(s + a[i] <= k)
		Try(i + 1, s + a[i], cnt + 1);
	Try(i + 1, s, cnt);
}

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);
	int t;
	cin >> t;

	while(t--){
		a.clear();	
		cin >> n >> k;
		a.resize(n);
		for(int i = 0; i < n; ++i)
			cin >> a[i];
		res = n - 1;
		sort(a.begin(), a.end(), greater<int>());
		Try();	
		cout << (res == n - 1 ? -1 : res) << '\n';
	}
	return 0;
}

DSA02012 - DI CHUYỂN TRONG MA TRẬN

// created: 2023-05-26 17:39:22
// author: Nguyen Tung Duong

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

ll f(ll n)
{
    ll res = 1;
    for (ll i = 2; i <= n; ++i)
        res *= i;
    return res;
}

int main()
{

#ifndef ONLINE_JUDGE
    freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
#endif

    ios_base::sync_with_stdio(false);
    cin.tie(0);

    int t;
    cin >> t;

    while (t--)
    {
        ll n, m;
        cin >> n >> m;
        int a[200][200];
        for (int i = 0; i < n; ++i)
        {
            for (int j = 0; j < m; ++j)
            {
                cin >> a[i][j];
            }
        }
        cout << f(n + m - 2) / (f(n - 1) * f(m - 1)) << '\n';
    }

    return 0;
}

DSA02013 - SỐ NGUYÊN TỐ

// created: 2023-05-26 17:44:08
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

bool sieve[405];
vector<int> prime;

int s, p, n;
vector<string> res;

void Try(int j = 0, int sum = s, vector<int> tmp = {}){
	if(j == n){
		if(sum == 0){
			string str = "";
			for(int x : tmp){
				str += to_string(x) + " ";
			}	
			res.push_back(str);
		}
		return;
	}
	for(int i = 0; i < prime.size(); ++i){
		if(prime[i] > p && prime[i] <= sum){
			if(tmp.size() == 0){
				tmp.push_back(prime[i]);
				Try(j + 1, sum - prime[i], tmp);
				tmp.pop_back();
			}else if(prime[i] > tmp.back()){
				tmp.push_back(prime[i]);
				Try(j + 1, sum - prime[i], tmp);
				tmp.pop_back();

			}
		}
	}
}

int main(){
    
	ios_base::sync_with_stdio(false);
	cin.tie(0);	

	memset(sieve, false, sizeof(sieve));

	for(int i = 2; i * i <= 400; ++i){
		if(!sieve[i]){
			for(int j = i * i; j <= 400; j += i){
				sieve[j] = true;
			}
		}	
	}

	for(int i = 2; i <= 400; ++i){
		if(!sieve[i])
			prime.push_back(i);
	}

	int t;
	cin >> t;

	while(t--){
		res.resize(0);
		cin >> n >> p >> s;
		Try();
		sort(res.begin(), res.end());
		cout << res.size() << '\n';
		for(int i = 0; i < res.size() ; ++i){
			cout << res[i] << '\n';
		}
	}
 	 
    return 0;
}

DSA02014 - TỪ ĐIỂN

// created: 2023-05-26 17:49:42
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int k, n, m;
set<string> s;

bool visited[10][10];
char a[10][10];
int dx[8] = {0,0,1,-1,1,1,-1,-1};
int dy[8] = {1,-1,0,0,1,-1,1,-1};
vector<string> res;

void Try(int x, int y, string S){
	if(s.find(S) != s.end()) res.push_back(S);	
	for(int i = 0; i < 8; ++i){
		int xx = x + dx[i];
		int yy = y + dy[i];
		if(xx >= 0 && xx < n && yy >= 0 && yy < m && !visited[xx][yy]){
			visited[xx][yy] = true;
			Try(xx, yy, S + a[xx][yy]);
			visited[xx][yy] = false;
		}
	}
}

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);
	int t;
	cin >> t;

	while(t--){

		res.clear();
		s.clear();
		cin >> k >> n >> m;
		for(int i = 0; i < k; ++i){
			string tmp;
			cin >> tmp;
			s.insert(tmp);
		}
		for(int i = 0; i < n; ++i){
			for(int j = 0; j < m; ++j)
				cin >> a[i][j];
		}
		for(int i = 0; i < n; ++i){
			for(int j = 0; j < m; ++j){
				memset(visited, false, sizeof(visited));
				visited[i][j] = true;
				Try(i, j, string(1,a[i][j]));
			}
		}
		if(res.size() == 0){
			cout << -1;
		}else{
			for(string i : res) cout << i << ' ';
		}
		cout << '\n';
	}
	return 0;
}

DSA02015 - LOẠI BỎ DẤU NGOẶC

// created: 2023-05-26 17:48:49
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

bool check(string s){
	if(s.length() == 0) return false;
	if(s.length() == 1 && s[0] != ')' && s[0] != '(') return false;
	int deg = 0;
	for(int i = 0; i < s.length(); ++i){
		if(s[i] == '(') ++deg;
		if(s[i] == ')') --deg;
		if(deg < 0) return false;
	}
	return deg == 0;
}

int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	
	int t;
	cin >> t;

	while(t--){
		
		string s;
		cin >> s;
		queue<string> q;
		q.push(s);
		unordered_set<string> st;	
		st.insert(s);
		vector<string> res;
		bool flag = false;
		while(!q.empty()){
			string front = q.front(); q.pop();
			if(check(front)){
				res.push_back(front);
				flag = true;
			}	
			if(flag) continue;
			for(int i = 0; i < front.length(); ++i){
				if(front[i] != '(' && front[i] != ')') continue;
				string tmp = front.substr(0, i) + front.substr(i + 1);
				if(st.find(tmp) == st.end()){
					st.insert(tmp);
					q.push(tmp);
				}
			}
		}
		sort(res.begin(), res.end());
		if(res.size() == 0)
			cout << -1;
		else{
			for(string i : res)
				cout << i << ' ';
		}
		cout << '\n';
	}
	return 0;
}


DSA02016 - SĂP XẾP QUÂN HẬU 1

// created: 2023-05-26 17:39:46
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

int n;
unordered_set<int> col;
unordered_set<int> negDia;
unordered_set<int> posDia;
int cnt;
void backtrack(int x = 0){

	if(x == n){
		++cnt;
		return;
	}
	for(int y = 0; y < n; ++y){
		if(col.find(y) == col.end() && negDia.find(x - y) == negDia.end() && posDia.find(x + y) == posDia.end()){ 
			col.insert(y);
			negDia.insert(x - y);
			posDia.insert(x + y);
			backtrack(x + 1);
			negDia.erase(x - y);
			posDia.erase(x + y);
			col.erase(y);
		}
	}
}

int main(){
	
	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		col.clear();
		negDia.clear();
		posDia.clear();
		cnt = 0;
		cin >> n;
		backtrack();	
		cout << cnt << '\n';	
	}	

	return 0;
}

DSA02017 - SẮP XẾP QUÂN HẬU 2

// created: 2023-05-26 17:44:33
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int a[8][8];
int res = 0;

unordered_set<int> s1, s2, s3;

void Try(int row = 0, int s = 0){
	if(row == 8){
		res = max(res, s);
		return;
	}

	for(int i = 0; i < 8; ++i){
		if(s1.find(i) == s1.end() && s2.find(i + row) == s2.end() && s3.find(i - row) == s3.end()){
			s1.insert(i);
			s2.insert(i + row);
			s3.insert(i - row);
			Try(row + 1, s + a[i][row]);
			s1.erase(i);
			s2.erase(i + row);
			s3.erase(i - row);
		}
	}
}

int main(){
    
	ios_base::sync_with_stdio(false);
	cin.tie(0);	


	int t;
	cin >> t;

	while(t--){
		res = 0;
		s1.clear();
		s2.clear();
		s3.clear();
		for(int i = 0; i < 8; ++i){
			for(int j = 0; j < 8; ++j)
				cin >> a[i][j];
		}
		Try();
		cout << res << '\n';	
	}
 	 
    return 0;
}

DSA02018 - BIỂU THỨC TOÁN HỌC

// created: 2023-05-26 17:49:56
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

vector<int> a(5);
bool flag = false;

void Try(int i = 1, int res = a[0]){
	if(flag) 
		return;
	if(i == 5){
		if(res == 23)
			flag = true;
		return;
	}	
	Try(i + 1, res + a[i]);
	Try(i + 1, res * a[i]);
	Try(i + 1, res - a[i]);
}

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		flag = false;
		for(int i = 0; i < 5; ++i)
			cin >> a[i];
		sort(a.begin(), a.end());
		do{
			Try();
		}while(!flag && next_permutation(a.begin(), a.end()));
		cout << (flag ? "YES" : "NO") << '\n';
	}
	return 0;
}

DSA02019 - ĐƯỜNG ĐI DÀI NHẤT

// created: 2023-05-26 17:50:16
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int n, m;
int a[25][25];
int res;

void Try(int u, int dist = 0){	
	res = max(res, dist);
	for(int v = 0; v < n; ++v){
		if(a[u][v]){
			a[u][v] = 0;
			a[v][u] = 0;
			Try(v, dist + 1);
			a[v][u] = 1;
			a[u][v] = 1;	
		}
	}
}


int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		res = 0;
		memset(a, 0, sizeof(a));
		cin >> n >> m;
		for(int i = 0; i < m; ++i){
			int u, v;
			cin >> u >> v;
			a[u][v] = 1;
			a[v][u] = 1;
		}
		for(int i = 0; i < n; ++i){
			Try(i);
		}
		cout << res << '\n';
	}
	return 0;
}

DSA02020 - SỐ NHỎ NHẤT CÓ N ƯỚC SỐ

// created: 2023-05-26 17:50:31
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

vector<ll> prime;
ll res;
ll n;

void Try(ll cnt = 1, ll pr = 0, ll k = 1){

	if(cnt == n){
		res = min(res, k);
		return;
	}

	for(int i = 1;; ++i){
		if(cnt * (i + 1) > n || k * pow(prime[pr],i) > res) return;
		Try(cnt * (i + 1), pr + 1, k * pow(prime[pr], i));
	}
}

int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	
	vector<bool> sieve(51, true);
	for(int i = 2; i * i <= 50; ++i){
		if(sieve[i]){
			for(int j = i * i; j <= 50; j += i){
				sieve[j] = false;
			}
		}
	}
	for(ll i = 2; i <= 50; ++i){
		if(sieve[i])
			prime.push_back(i);
	}
	int t;
	cin >> t;
	while(t--){
		res = LLONG_MAX;
		cin >> n;
		Try();
		cout << res << '\n';
	}
	return 0;
}


DSA02021 - KÝ TỰ ĐẶC BIỆT

// created: 2023-05-26 17:50:44
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	ll t;
	cin >> t;

	while(t--){
		string s;
		ll k;
		cin >> s >> k;
		ll n = s.length();
		while(n < k) n <<= 1;
		while(k > s.length()){
			ll m = n >> 1;
			if(k > m){
				if(k == m + 1)
					--k;
				else
					k -= m + 1;
			}
			n >>= 1;
		}
		cout << s[k - 1] << '\n';
	}

	return 0;
}


DSA02022 - NGÀY ĐẶC BIỆT

// created: 2023-05-26 17:40:01
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

int main(){
	
	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);
	
	cout << "02/02/2000\n02/02/2002\n02/02/2020\n02/02/2022\n02/02/2200\n02/02/2202\n02/02/2220\n02/02/2222\n20/02/2000\n20/02/2002\n20/02/2020\n20/02/2022\n20/02/2200\n20/02/2202\n20/02/2220\n20/02/2222\n22/02/2000\n22/02/2002\n22/02/2020\n22/02/2022\n22/02/2200\n22/02/2202\n22/02/2220\n22/02/2222\n";

	return 0;
}

DSA02023 - ĐẶT TÊN

// created: 2023-05-26 17:40:22
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

int a[100];
vector<string> b;
int n, k;
void Try(int i = 1){
	for(int j = a[i - 1] + 1; j <= n - k + i; ++j){
		a[i] = j;
		if(i == k){
			for(int l = 1; l <= k; ++l){
				cout << b[a[l] - 1] << ' '; 
			}
			cout << '\n';
		}else
			Try(i + 1);
	}
}

int main(){
	
	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	cin >> n >> k;
	set<string> s;
	for(int i = 0; i < n; ++i){
		string tmp;
		cin >> tmp;
		s.insert(tmp);
	}	
	for(string i : s){
		b.push_back(i);
	}	
	sort(b.begin(), b.end());
	n = b.size();
	Try();
	return 0;
}

DSA02024 - DÃY CON TĂNG DẦN

// created: 2023-05-26 17:40:39
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

int n;
vector<int> a;
vector<string> res;

void backtrack(string s = "", int i = 0){
	if(i == n){
		vector<int> tmp;
		for(int j = 0; j < n; ++j){
			if(s[j] == '1'){
				tmp.push_back(a[j]);
			}
		}
		if(tmp.size() >= 2){
			bool flag = true;
			for(int j = 0; j < tmp.size() - 1; ++j){
				if(tmp[j] > tmp[j + 1])
					flag = false;
			}
			if(flag){
				string k = "";
				for(int j : tmp){
					k += to_string(j) + " ";
				}
				res.push_back(k);
			}
		}
		return;
	}
	backtrack(s + "1", i + 1);
	backtrack(s + "0", i + 1);
}

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cin >> n;

	a.resize(n);

	for(int i = 0; i < n ;++i)
		cin >> a[i];
	
	backtrack();
	sort(res.begin(), res.end());
	for(string s: res){
		cout << s << '\n';
	}
	return 0;

}



DSA02025 - KÝ TỰ LẶP

// created: 2023-05-26 17:44:49
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
int main(){
    
	ios_base::sync_with_stdio(false);
	cin.tie(0);	
	
	int n;
	cin >> n;
	vector<string> a(n);
	for(int i = 0; i < n; ++i)
 		cin >> a[i];
   	vector<int> b(n);
	vector<vector<bool>> c(n, vector<bool>(26));
	for(int i = 0; i < n; ++i){
		for(int j = 0; j < 26; ++j){
			if(binary_search(a[i].begin(), a[i].end(), j + 'A')){
				c[i][j] = true;
			}else
				c[i][j] = false;
		}
	}
	int f[30][30];
	memset(f, 0, sizeof(f));
	for(int i = 0; i < n - 1; ++i){
		for(int j = i + 1; j < n; ++j){
			int cnt = 0;
			for(int k = 0; k < 26; ++k){
				if(c[i][k] && c[j][k])
					++cnt;
			}
			f[i][j] = f[j][i] = cnt;
		}	
	}
	iota(b.begin(), b.end(), 0);
	int res = INT_MAX;	
	do{
		int cnt = 0;
		for(int i = 0; i < n - 1; ++i){
			cnt += f[b[i]][b[i + 1]];
		}
		res = min(cnt, res);
	}while(next_permutation(b.begin(), b.end()));
    cout << res;	
	return 0;
}

DSA02026 - PHÉP TOÁN CƠ BẢN

// created: 2023-05-26 17:45:08
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

string s;

string op = "+-*/";
vector<string> res;

void check(){

	int n1 = stoi(s.substr(0,2));
	int n2 = stoi(s.substr(5,2));
	int n3 = stoi(s.substr(10,2));
	if(s[3] == '+'){
		if(n1 + n2 == n3){
			res.push_back(s);
		}
	}else if(s[3] == '-'){
		if(n1 - n2 == n3){
			res.push_back(s);
		}
	}else if(s[3] == '*'){
		if(n1 * n2 == n3){
			res.push_back(s);
		}
	}else if(s[3] == '/'){
		if(n1 / n2 == n3){
			res.push_back(s);
		}
	}

}

void Try(int i = 0){
	if(i == s.length()){
		check();
		return;
	}
	if(s[i] == '?'){
		if(i == 3){
			for(int j = 0; j < 4; ++j){
				s[i] = op[j];
				Try(i + 1);
				s[i] = '?';
			}
		}else{
			if(i != 0 && i != 5 && i != 10){
				s[i] = '0';
				Try(i + 1);
				s[i] = '?';
			}
			for(char j = '1'; j <= '9'; ++j){
				s[i] = j;
				Try(i + 1);
				s[i] = '?';
			}
		}	
	}else
		Try(i + 1);
}

int main(){
    
	ios_base::sync_with_stdio(false);
	cin.tie(0);	
	
	int t;
	cin >> t;

	cin.ignore();

	while(t--){
		res.resize(0);
		getline(cin, s);
		Try();
		if(res.size() == 0){
			cout << "WRONG PROBLEM!\n";
		}else
			cout << *min_element(res.begin(), res.end()) << '\n';	
	}

	return 0;
}

DSA02027 - NGƯỜI DU LỊCH

// created: 2023-05-26 17:49:07
// author: Nguyen Tung Duong

#include<bits/stdc++.h>

using namespace std;

typedef long long ll;

int n;
int c[25][25];

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);
	
	cin >> n;
	for(int i = 0; i < n; ++i){
		for(int j = 0; j < n; ++j)
			cin >> c[i][j];
	}	
	
	int dp[1 << 16][16] = {};

	for(int mask = 1; mask < (1 << n - 1); ++mask){
		for(int i = 0; i < n - 1; ++i){
			if((mask >> i) & 1){
				if(__builtin_popcount(mask) == 1){
					dp[mask][i] = c[0][i + 1];
					break;
				}
				dp[mask][i] = 1e9;

				int pre_mask = mask - (1 << i);
				
				for(int j = 0; j < n - 1; ++j){
					if((pre_mask >> j) & 1){
						dp[mask][i] = min(dp[mask][i], dp[pre_mask][j] + c[j + 1][i + 1]);
					}
				}
			}
		}
	}

	int res = 1e9;
	for(int i = 0; i < n - 1; ++i){
		res = min(res, dp[(1 << n - 1) - 1][i] + c[i + 1][0]);
	}
	cout << res;

	return 0;
}


DSA02028 - CHIA ĐỀU

// created: 2023-05-26 17:49:27
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int n, K;
vector<int> a;
int cnt = 0;

void Try(int i = 0, int k = K, vector<int> tmp = {}){
	
	if(i == n){
		if(k == 0){

			bool flag = true;
			for(int j = 0; j < K - 1; ++j){
				if(tmp[j] != tmp[j + 1])
					flag = false;
			}
			if(flag) ++cnt;
		}
		return;
	}

	if(tmp.size() == 0){
		tmp.push_back(a[i]);
		Try(i + 1, k - 1, tmp);
	}else{
		if(k > 0){
			tmp.push_back(a[i]);
			Try(i + 1, k - 1, tmp);
			tmp.pop_back();
		}
		tmp[tmp.size() - 1] += a[i];
		Try(i + 1, k, tmp);
		tmp[tmp.size() - 1] -= a[i];
	}
}

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t = 1;
	//cin >> t;

	while(t--){
		cnt = 0;
		cin >> n >> K;
		a.clear();
		a.resize(n);
		for(int i = 0; i < n; ++i)
			cin >> a[i];
		Try();
		cout << cnt << '\n';
	}	

	return 0;
}

DSA02029 - THÁP HÀ NỘI

// created: 2023-05-26 17:41:06
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;
 
typedef long long ll;
 
void dp(int n, char a, char b, char c){
	if(n == 0){
		return;
	}
	dp(n - 1, a, c, b);
	cout << a << " -> " << c << '\n';
	dp(n - 1, b, a, c);
}
 
int main(){
 
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	
	int n; 
	cin >> n;
	
	dp(n, 'A', 'B', 'C');
 
	return 0;
}

DSA02030- LIỆT KÊ XÂU KÝ TỰ

// created: 2023-05-26 17:41:54
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

char c;
int k;
int a[100];
int n;

void backtrack(int i = 1){
	for(int j = a[i - 1]; j <= n; ++j){
		a[i] = j;
		if(i == k){
			for(int l = 1; l <= k; ++l){
				cout << (char) ('A' + a[l]);
			}
			cout << '\n';
		}else
			backtrack(i + 1);
			
	}
}
int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	cin >> c >> k;
	n = c - 'A';
	backtrack();
	return 0;
}

DSA02031 - GHÉP CHỮ CÁI

// created: 2023-05-26 17:42:24
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;


int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	char c;
	cin >> c;
	int n = c - 'A';
	string s = "";
	for(int i = 0; i <= n; ++i){
		s += 'A' + i;
	}

	do{
		bool flag = true;
		for(int i = 1; i < n; ++i){
			if(s[i] == 'A' || s[i] == 'E'){
				if(s[i - 1] != 'A' && s[i - 1] != 'E' && s[i + 1] != 'A' && s[i + 1] != 'E')
				  flag = false;	
			}
		}
		if(flag)
			cout << s << '\n';
	}while(next_permutation(s.begin(), s.end()));
	return 0;
}


DSA02032 - TỔ HỢP SỐ CÓ TỔNG BẰNG X

// created: 2023-05-26 17:45:26
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int n, k;
int a[25];

vector<vector<int>> res;

void Try(int sum = k, vector<int> tmp = {}){

	if(sum == 0){
		res.push_back(tmp);
		return;
	}

	for(int i = 0; i < n; ++i){
		if(a[i] <= sum){
			if(tmp.size() == 0){
				tmp.push_back(a[i]);
				Try(sum - a[i], tmp);
				tmp.pop_back();
			}else{
				if(a[i] >= tmp.back()){
					tmp.push_back(a[i]);
					Try(sum - a[i], tmp);
					tmp.pop_back();
				}
			}
		}	
	}
}

int main(){
    
	ios_base::sync_with_stdio(false);
	cin.tie(0);	
	
	int t;
	cin >> t;
	while(t--){
		res.clear();
		cin >> n >> k;
		for(int i = 0; i < n; ++i)
			cin >> a[i];
		Try();
		if(res.size() == 0){
			cout << -1 << '\n';
		}else{
			cout << res.size() << ' ';
			for(int i = 0; i < res.size(); ++i){
				cout << '{';
				for(int j = 0; j < res[i].size(); ++j){
					cout << res[i][j];
					if(j != res[i].size() - 1)
						cout << ' ';
				}
				cout << "} ";
			}
			cout << '\n';
		}
	}

	return 0;
}

DSA02033 - SỐ XA CÁCH

// created: 2023-05-26 17:42:43
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;


int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		int n;
		cin >> n;
		vector<int> a(n);
		for(int i = 0; i < n; ++i){
			a[i] = i + 1;
		}
		do{
			bool flag = true;
			for(int i = 0; i < n - 1; ++i){
				if(abs(a[i] - a[i + 1]) == 1){
					flag = false;
				}
			}
			if(flag){
				for(int i : a){
					cout << i;
				}
				cout << '\n';
			}
		}while(next_permutation(a.begin(), a.end()));
	}
	cout << '\n';	
	return 0;
}

DSA02034 - TRÒ CHƠI VỚI CÁC CON SỐ

// created: 2023-05-26 17:42:58
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;


int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		int n;
		cin >> n;
		vector<int> a(n);
		for(int i = 0; i < n; ++i){
			a[i] = i + 1;
		}
		do{
			bool flag = true;
			for(int i = 0; i < n - 1; ++i){
				if(abs(a[i] - a[i + 1]) == 1){
					flag = false;
				}
			}
			if(flag){
				for(int i : a){
					cout << i;
				}
				cout << '\n';
			}
		}while(next_permutation(a.begin(), a.end()));
	}
	return 0;
}

DSA02035 - HOÁN VỊ CÁC CHỮ SỐ

// created: 2023-05-26 17:45:45
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){
    
	ios_base::sync_with_stdio(false);
	cin.tie(0);	

	int n, k;
	cin >> n >> k;
	vector<string> a(n);
	for(int i = 0; i < n; ++i) cin >> a[i];

	vector<int> b(k);
	iota(b.begin(), b.end(), 0);

	int res = INT_MAX;	
	do{
		vector<string> tmp(n);
		for(int i = 0; i < n; ++i){
			tmp[i] = a[i];
			for(int j = 0; j < k; ++j){
				tmp[i][j] = a[i][b[j]];
			}
		}
		string s1 = *min_element(tmp.begin(), tmp.end());
		string s2 = *max_element(tmp.begin(), tmp.end());
		res = min(res, stoi(s2) - stoi(s1));	
	}while(next_permutation(b.begin(), b.end()));
	cout << res;
	return 0;
}

DSA02036 - DÃY CON CÓ TỔNG LẺ

// created: 2023-05-26 17:45:57
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int a[30];
int n;

void Try(int i = 0, vector<int> tmp = {}){
	if(i == n){
		int sum = 0;
		for(int i = 0; i < tmp.size(); ++i){
			sum += tmp[i];
		}	
		if(sum & 1){
			for(int i = 0; i < tmp.size(); ++i){
				cout << tmp[i] << ' ';
			}
			cout << '\n';
		}
		return;
	}
	Try(i + 1, tmp);
	tmp.push_back(a[i]);
	Try(i + 1, tmp);
	tmp.pop_back();
}

int main(){
    
	ios_base::sync_with_stdio(false);
	cin.tie(0);	
	
	int t;
	cin >> t;

	while(t--){
		cin >> n;
		for(int i = 0; i < n; ++i) cin >> a[i];
		sort(a, a + n, greater<int>());
		Try();
	}
	return 0;
}

DSA02037 - DÃY CON CÓ TỔNG NGUYÊN TỐ

// created: 2023-05-26 17:46:21
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int a[30];
int n;

bool isPrime(int k){
	if(k <= 1) return false;
	if(k == 2 || k == 3) return true;
	if(k % 2 == 0 || k % 3 == 0) return false;
	for(int i = 5; i * i <= k; i += 6){
		if(k % i == 0 || k % (i + 2) == 0)
			return false;
	}
	return true;
}

void Try(int i = 0, vector<int> tmp = {}){
	if(i == n){
		int sum = 0;
		for(int i = 0; i < tmp.size(); ++i){
			sum += tmp[i];
		}	
		if(isPrime(sum)){
			for(int i = 0; i < tmp.size(); ++i){
				cout << tmp[i] << ' ';
			}
			cout << '\n';
		}
		return;
	}
	Try(i + 1, tmp);
	tmp.push_back(a[i]);
	Try(i + 1, tmp);
	tmp.pop_back();
}

int main(){
    
	ios_base::sync_with_stdio(false);
	cin.tie(0);	
	
	int t;
	cin >> t;

	while(t--){
		cin >> n;
		for(int i = 0; i < n; ++i) cin >> a[i];
		sort(a, a + n, greater<int>());
		Try();
	}
	return 0;
}

DSA02038 - DÃY CON CÓ K PHẦN TỬ TĂNG DẦN

// created: 2023-05-26 17:46:36
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int n, k;
vector<int> a;
vector<int> b;
void S(int i = 1){
	for(int j = a[i - 1] + 1; j <= n - k + i; ++j){
		a[i] = j;
		if(i == k){
			for(int l = 1; l <= k; ++l){
				cout << b[a[l] - 1] << ' ' ;
			}
			cout << '\n';	
		}else
			S(i+1);
	}	
}
int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;
	while(t--){
		a.clear();
		b.clear();
		cin >> n >> k; 
		a.resize(k + 1);
		b.resize(n);
		for(int i = 0; i < n; ++i)
			cin >> b[i];
		sort(b.begin(), b.end());
		S();
	}
	return 0;
}

DSA02039 - PHÂN TÍCH SỐ 2

// created: 2023-05-26 17:46:50
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int n;
vector<vector<int>> res;

void Try(int s = n, vector<int> a = {}){

	if(s == 0){
		res.push_back(a);
		return;
	}	
	for(int i = s; i >= 1; --i){
		if(a.size() == 0){
			a.push_back(i);
			Try(s - i, a);
			a.pop_back();
		}else if(i <= a.back()){
			a.push_back(i);
			Try(s - i, a);
			a.pop_back();		
		}
	}
}

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;
	while(t--){
		res.clear();
		cin >> n;
		Try();
		cout << res.size() << '\n';
		for(int i = 0; i < res.size(); ++i){
			cout << '(';
			for(int j = 0; j < res[i].size(); ++j){
				cout << res[i][j];
				if(j != res[i].size() - 1) cout << ' ';
			}
			cout << ") ";
		}
		cout << '\n';
	}
	return 0;
}




DSA02041 - BIẾN ĐỔI VỀ 1

// created: 2023-05-26 17:47:08
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;
	while(t--){
		int n;
		cin >> n;

		vector<int> dp(n + 1);
		for(int i = 2; i <= n; ++i){
			if(i % 2 == 0 && i % 3 == 0){
				dp[i] = min(dp[i - 1], min(dp[i / 2], dp[i / 3])) + 1;
			}
			else if(i % 2 == 0){
				dp[i] = min(dp[i - 1], dp[i / 2]) + 1;
			}else if(i % 3 == 0){
				dp[i] = min(dp[i - 1], dp[i / 3]) + 1;
			}else
				dp[i] = dp[i - 1] + 1;
		}
		cout << dp[n] << '\n';
	}
	return 0;
}

DSA02045 - TẬP CON CỦA XÂU KÝ TỰ

// created: 2023-05-26 17:47:24
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int n;
string s;
vector<string> res;
void Try(int i = 0, string tmp = ""){

	if(i == n){
		res.push_back(tmp);	
		return;
	}

	Try(i + 1, tmp);
	Try(i + 1, tmp + s[i]);
}

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		res.clear();
		cin >> n >>  s;
		Try();
		sort(res.begin(), res.end());
		for(string i : res){
			cout << i  << ' ';
		}
		cout << '\n';
	}	

	return 0;
}

DSA05009 - TẬP CON BẰNG NHAU

// created: 2023-05-26 17:43:16
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll mod = 1e9 + 7;


int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;	
	cin >> t;

	while(t--){
		int n;
		cin >> n;
		vector<int> a(n);
		for(int i = 0; i < n; ++i)
			cin >> a[i];
		int k = 0;
		for(int i = 0; i < n; ++i)
			k += a[i];
		if(k & 1){
			cout << "NO" << '\n';
			continue;
		}
		k /= 2;
		bool dp[201][40001];
		for(int i = 1; i <= n; ++i){
			for(int j = 0; j <= k; ++j){
				if(j == 0){
					dp[i][j] = true;
				}else{
					dp[i][j] = dp[i - 1][j] || dp[i - 1][j - a[i - 1]]; 
				}
			}
		}	
		cout << (dp[n][k] ? "YES" : "NO") << '\n';
	}	
	return 0;
}

DSAKT012 - ĐỔI TIỀN

// created: 2023-05-26 17:47:46
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int n, k;
vector<int> a;

int res;

void Try(int i = 0, int s = 0, int cnt = 0){
	
	if(cnt >= res) return;
	if(s == k){
		res = min(res, cnt);
		return;
	}
	if(i == n) return;
	if(s + a[i] <= k)
		Try(i + 1, s + a[i], cnt + 1);
	Try(i + 1, s, cnt);
}

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);
	
	cin >> n >> k;
	a.resize(n);
	for(int i = 0; i < n; ++i)
		cin >> a[i];
	res = n - 1;
	sort(a.begin(), a.end(), greater<int>());
	Try();	
	cout << (res == n - 1 ? -1 : res);
	return 0;
}

DSA03001 - ĐỔI TIỀN


// created: 2023-05-26 17:51:50
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	vector<int> a = {1,2,5,10,20,50,100,200,500,1000};
	while(t--){
		int n;
		cin >> n;
		int res = 0;
		int i = a.size() - 1;
		while(n > 0 && i >= 0){
			res += n / a[i];
			n %= a[i];
			--i;
		}
		cout << res << '\n';
		
	}
	return 0;
}

DSA03002 - NHẦM CHỮ SỐ

// created: 2023-05-26 17:52:10
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int change1(int n){
	string s = to_string(n);
	for(int i = 0; i < s.length(); ++i){
		if(s[i] == '6'){
			s[i] = '5';
		}
	}	
	int res = stoi(s);
	return res;
}
int change2(int n){
	string s = to_string(n);
	for(int i = 0; i < s.length(); ++i){
		if(s[i] == '5'){
			s[i] = '6';
		}
	}	
	int res = stoi(s);
	return res;
}


int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);


		int a, b;
		cin >> a >> b;
		int a1 = change1(a);
		int b1 = change1(b);	
		cout << a1 + b1 << ' ';
		int a2 = change2(a);
		int b2 = change2(b);
		cout << a2 + b2 << '\n';

	return 0;
}

DSA03003 - TÌM MAX

// created: 2023-05-26 17:52:25
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		int n;
		cin >> n;
		vector<ll> a(n);
		for(int i = 0; i < n; ++i)
			cin >> a[i];
		sort(a.begin(), a.end());
		ll res = 0;
		for(int i = 0; i < n; ++i){
			res += a[i] * i;
			res %= mod;
		}
		cout << res << '\n';
	}

	return 0;
}

DSA03004 - TỔNG NHỎ NHẤT

// created: 2023-05-26 17:52:38
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		int n;
		cin >> n;
		vector<int> a;
		int tmp;
		for(int i = 0; i < n; ++i){
			cin >> tmp;
			if(tmp != 0)
				a.push_back(tmp);
		}
		sort(a.begin(), a.end());
		string s1, s2;
		ll i1 = 0, i2 = 1;
		while(i1 < a.size() && i2 < a.size()){
			s1 += to_string(a[i1]);
			s2 += to_string(a[i2]);
			i1+=2;
			i2+=2;
		}
		if(i1 == a.size() - 1) s1 += to_string(a[i1]);
		ll k1,k2;
		if(s1.length() == 0)
			k1 = 0;
		else
			k1 = stoll(s1);
		if(s2.length() == 0)
			k2 = 0;
		else 
			k2 = stoll(s2);
		cout << k1 + k2 << '\n';
	}

	return 0;
}


DSA03005 - CHIA MẢNG THÀNH HAI MẢNG CON CÓ TỔNG LỚN NHẤT

// created: 2023-05-26 17:52:49
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		int n, k;
		cin >> n >> k;
		vector<ll> a(n);
		for(int i = 0; i < n; ++i)
			cin >> a[i];
		sort(a.begin(), a.end());
		k = min(k, n - k);
		ll s1 = 0, s2 = 0;
		for(int i = 0; i < k; ++i)
			s1 += a[i];
		for(int i = k; i < n; ++i)
			s2 += a[i];	
		cout << s2 - s1 << '\n';
	}

	return 0;
}


DSA03006 - SẮP XẾP THAM LAM

// created: 2023-05-26 17:53:10
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		int n;
		cin >> n;
		vector<int> a(n);
		for(int i = 0; i < n; ++i)
			cin >> a[i];
		
		int l = 0, r = n - 1;
		while(l < r){
			if(a[l] > a[r]){
				int l1 = l;
				int r1 = r;
				while(l1 < r1){
					swap(a[l1++], a[r1--]);
				}
			}			
			l++;
			r--;

		}	
		bool flag = true;
		for(int i = 0; i < n - 1; ++i){
			if(a[i + 1] < a[i])
				flag = false;
		}
		cout << (flag ? "Yes" : "No") << '\n';
	}
	
	return 0;
}

DSA03007 - GIÁ TRỊ NHỎ NHẤT CỦA BIỂU THỨC

// created: 2023-05-26 17:56:03
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		int n;
		cin >> n;
		vector<ll> a1(n), a2(n);
		for(int i = 0; i < n; ++i)
			cin >> a1[i];
		for(int i = 0; i < n; ++i)
			cin >> a2[i];
		sort(a1.begin(), a1.end());
		sort(a2.begin(), a2.end(), greater<ll>());
		ll res = 0;
		for(int i = 0; i < n; ++i){
			res += a1[i] * a2[i];
		}
		cout << res << '\n';
	}
	return 0;
}

DSA03008 - SẮP XẾP CÔNG VIỆC 1

// created: 2023-05-26 17:53:25
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		int n;
		cin >> n;
		vector<pair<int,int>> a(n);

		for(int i = 0; i < n; ++i){
			cin >> a[i].first;
		}

		for(int i = 0; i < n; ++i){
			cin >> a[i].second;
		}
		sort(a.begin(), a.end());

		vector<int> dp(n, 0);
		dp[0] = 1;

		for(int i = 1; i < n; ++i){
			dp[i] = 1;
			for(int j = 0; j < i; ++j){
				if(a[i].first >= a[j].second){
					dp[i] = max(dp[i], dp[j] + 1);
				}
			}

		}
		int res = INT_MIN;
		for(int i = 0; i < n; ++i)
			res = max(res, dp[i]);
		cout << res << '\n';
	}
	
	return 0;
}

DSA03009 - SẮP XẾP CÔNG VIỆC 2

// created: 2023-05-26 17:56:15
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;
	
	while(t--){
		int n;
		cin >> n;
		vector<int> adj[1001];
		for(int i = 0; i < n; ++i){
			int a,b,c;
			cin >> a >> b >> c;
			adj[b].push_back(c);
		}
		priority_queue<int, vector<int>, greater<int>> q;
		for(int i = 1; i <= 1000; ++i){
			for(int x : adj[i]){
				q.push(x);
			}
			while(q.size() > i){
				q.pop();
			}
		}
		int res = 0;
		cout << q.size() << ' ';
		while(!q.empty()){
			res += q.top(); q.pop();
		}
		cout << res << '\n';
	}	

	return 0;
}


DSA03010 - NỐI DÂY 1

// created: 2023-05-26 17:53:40
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		int n;
		cin >> n;
		priority_queue<ll, vector<ll>, greater<ll>> q;
		for(int i = 0; i < n; ++i){
			ll tmp;
			cin >> tmp;
			q.push(tmp);
		}
		ll res = 0;
		while(q.size() > 1){
			ll tp1 = q.top(); q.pop();
			ll tp2 = q.top(); q.pop();
			res += tp1 + tp2;
			q.push(tp1 + tp2);
		}
		cout << res << '\n';
		
	}
	
	return 0;
}



DSA03011 - NỐI DÂY 2

// created: 2023-05-26 17:56:39
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;
	while(t--){
		int n;
		cin >> n;
		priority_queue<ll, vector<ll>, greater<ll>> q;
		ll tmp;
		for(int i = 0; i < n; ++i){
			cin >> tmp;
			q.push(tmp);
		}
		ll res = 0;
		while(q.size() > 1){
			ll tp1 = q.top(); q.pop();
			ll tp2 = q.top(); q.pop();
			ll k = (tp1 % mod + tp2 % mod) % mod;
			res += k;
			q.push(k);
			res %= mod;
		}
		cout << res << '\n';
	}
	return 0;
}

DSA03012 - SẮP ĐẶT XÂU KÝ TỰ 1

// created: 2023-05-26 17:53:52
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		string s;	
		cin >> s;
		int n = s.length();
		unordered_map<char, int> cnt;
		for(int i = 0; i < n; ++i)
			cnt[s[i]]++;
		bool flag = true;
		for(auto p : cnt){
			if(p.second > (n + 1) / 2)
				flag = false;
		}
		cout << (flag ? 1 : -1) << '\n';

	}
	
	return 0;
}

DSA03013 - SẮP ĐẶT XÂU KÝ TỰ 2

// created: 2023-05-26 17:54:09
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		int k;	
		cin >> k;
		string s;
		cin >> s;
		int n = s.length();
		bool flag = true;
		unordered_map<char, int> cnt;
		for(char c: s)
			cnt[c]++;
		for(auto p : cnt){
			if(p.second > (n + 1) / k)
				flag = false;
		}
		cout << (flag ? 1 : -1) << '\n';
	}
	
	return 0;
}

DSA03014 - SỐ KHỐI LẬP PHƯƠNG

// created: 2023-05-26 17:59:05
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

unordered_set<ll> st;
string S;
ll res = -1;
void Try(string s = "", int i = 0){

	if(i == S.length()){
		if(s.length() > 0){
			if(st.find(stoll(s)) != st.end()){
				res = max(res, stoll(s));
			}
		}
		return;
	}

	Try(s + S[i], i + 1);
	Try(s, i + 1);
}	

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	for(ll i = 1; i <= 100; ++i){
		st.insert(i * i * i);	
	}

	while(t--){
		res = -1;
		cin >> S;
		Try();	
		cout << res << '\n';
	}

	return 0;
}

DSA03015 - MUA LƯƠNG THỰC

// created: 2023-05-26 17:54:26
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		int a,b,c;
		cin >> a >> b >> c;
	
		int k = b / 7;
		int foods = b * c;
		int buys = a * (b - k);
		if(buys < foods){
			cout << -1;
		}else{
			int res = foods / a;
			if(foods % a != 0)
				++res;
			cout << res;
		}
		cout << '\n';
	}
	
	return 0;
}

DSA03016 - SỐ NHỎ NHẤT

// created: 2023-05-26 17:57:06
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

int s, n;

void solve(){
	vector<int> a(n);

	if(n * 9 < s){
		cout << -1;
		return;
	}
	s -= 1;
	for(int i = n - 1; i >= 1; --i){
		if(s >= 9){
			a[i] = 9;
			s -= 9;
		}else{
			a[i] = s;
			s = 0;
			break;
		}
	}
	a[0] = s + 1;
	for(int i : a){
		cout << i;
	}
}

int main(){
	
	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		cin >> s >> n;
		solve();
		cout << '\n';	
	}

	return 0;
}

DSA03017 - GIÁ TRỊ NHỎ NHẤT CỦA XÂU

// created: 2023-05-26 17:57:19
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		int k;	
		string s;		
		cin >> k >> s;
		unordered_map<char, ll> mp;
		for(char c : s)
			mp[c]++;
		priority_queue<ll> q;
		for(auto p : mp)
			q.push(p.second);
		while(k--){
			ll tp = q.top(); q.pop();
			tp--;
			q.push(tp);
		}
		ll res = 0;
		while(!q.empty()){
			ll tp = q.top(); q.pop();
			res += tp * tp;
		}
		cout << res << '\n';
	}
	return 0;
}

DSA03018 - SỐ MAY MẮN

// created: 2023-05-26 17:57:33
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		int n;
		cin >> n;
		string s = "";
		int k = n % 7;
		int cnt4 = 0, cnt7 = 0;
		int a[7] = {0,8,16,24,4,12,20};
		if(n < a[k]){
			cout << -1;
		}
		else{
			cnt4 += a[k] / 4;
			n -= a[k];
			cnt7 += n / 7;
			for(int i = 0; i < cnt4; ++i){
				cout << 4;
			}
			for(int i = 0; i < cnt7; ++i){
				cout << 7;
			}
		}		
		cout << '\n';
	}
	return 0;
}

DSA03019 - PHÂN SỐ ĐƠN VỊ

// created: 2023-05-26 17:57:50
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

void solve(ll p, ll q){
	if(p == 0 || q == 0){
		return;
	}
	if(q % p == 0){
		cout << "1/"  << q / p;
		return;
	}
	ll k = q / p + 1;
	cout << "1/" << k << " + ";
	solve(p * k - q, q * k);
}

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		ll p, q;
		cin >> p >> q;
		solve(p, q);	
		cout << '\n';
	}

	return 0;
}

DSA03020 - BIỂU THỨC ĐÚNG

// created: 2023-05-26 17:58:07
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;


int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;
	
	while(t--){
		string s;
		cin >> s;
		int n = s.length();	
		int cnt = 0;
		vector<int> pos;
		for(int i = 0; i < n; ++i){
			if(s[i] == '[')
				pos.push_back(i);
		}
		int tmp = 0;
		int it = 0;
		for(int i = 0; i < n; ++i){
			if(s[i] == '[') {
				++tmp;
				++it;
			}
			else
				--tmp;
			
			if(tmp < 0){
				cnt += pos[it] - i;
				swap(s[i], s[pos[it]]);
				it++;
				tmp = 1;
			}	
		}
		cout << cnt << '\n';
	}

	return 0;
}

DSA03021 - TÌM DÃY SỐ

// created: 2023-05-26 17:58:24
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int n;
	cin >> n;

	vector<int > a(n);
	for(int i = 0; i < n; ++i) cin >> a[i];
	int res = 0;
	int k = *min_element(a.begin(), a.end());
	for(int i = k;;--i){
		int tmp = 0;
		for(int j = 0; j < n; ++j){
			bool flag = false;
			for(int x = 1; x <= a[j]; ++x){
				if(a[j] / x == i){
					flag = true;
					tmp += x;
					break;
				}
			}
			if(!flag){
				tmp = 0;
				break;
			}
		}
		if(tmp != 0){
			res = tmp;
			break;
		}
	}
	cout << res;

	return 0;
}

DSA03022 - TÍCH LỚN NHẤT

// created: 2023-05-26 17:54:38
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int n;
	cin >> n;	
	
	vector<ll> a(n);
	for(int i = 0; i < n; ++i)
		cin >> a[i];
	sort(a.begin(), a.end());
	priority_queue<ll> q;
	cout << max(a[n - 1] * a[n - 2] * a[n - 3], max(a[0] * a[1] * a[n - 1], a[n - 1] * a[n - 2]));	
	return 0;
}


DSA03023 - SẮP XẾP VIÊN BI

// created: 2023-05-26 17:58:38
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int n;
	cin >> n;

	string s;
	cin >> s;

	int l = 0;
	int r = 0;	
	for(int i = 0; i < n; ++i){
		if(s[i] == 'X') ++l;
		if(s[i] == 'D') ++r;
	}	
	int cnt = 0, a = 0, b = 0;
	for(int i = 0; i < l; ++i){
		if(s[i] == 'T') ++cnt;
		if(s[i] == 'D') ++a;
	}

	for(int i = n - 1; i >= n - r; --i){
		if(s[i] == 'T') ++cnt;
		if(s[i] == 'X') ++b;
	}

	cout << cnt + max(a,b);

	return 0;
}

DSA03024 - LỰA CHỌN TỐI ƯU

// created: 2023-05-26 17:54:58
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		int n;
		cin >> n;
		vector<pair<ll,ll>> a(n);
		for(int i = 0; i < n; ++i)
			cin >> a[i].first >> a[i].second;
		
		sort(a.begin(), a.end(), [](pair<ll,ll> &p1, pair<ll,ll> &p2){
			if(p1.second == p2.second) return p1.first < p2.first;
			return p1.second < p2.second;
		});

		ll res = 0;
		for(int i = 0; i < n; ++i){

			ll endTime = a[i].second;
			while(i < n && a[i].first < endTime){
				++i;
			}
			--i;
			++res;
		}
		cout << res << '\n';

	}
	return 0;
}


DSA03025 - TRỤC TỌA ĐỘ

// created: 2023-05-26 17:55:17
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		int n;
		cin >> n;
		vector<pair<ll,ll>> a(n);
		for(int i = 0; i < n; ++i)
			cin >> a[i].first >> a[i].second;
		
		sort(a.begin(), a.end(), [](pair<ll,ll> &p1, pair<ll,ll> &p2){
			if(p1.second == p2.second) return p1.first < p2.first;
			return p1.second < p2.second;
		});

		ll res = 0;
		for(int i = 0; i < n; ++i){

			ll endTime = a[i].second;
			while(i < n && a[i].first < endTime){
				++i;
			}
			--i;
			++res;
		}
		cout << res << '\n';

	}
	return 0;
}


DSA03026 - LỰA CHỌN THAM LAM

// created: 2023-05-26 17:58:52
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

int s, n;

void solve(){
	int s1 = s;
	vector<int> a(n);
	if(n * 9 < s || s== 0){
		cout << -1 << ' ' << -1;
		return;
	}
	s -= 1;
	for(int i = n - 1; i >= 1; --i){
		if(s >= 9){
			a[i] = 9;
			s -= 9;
		}else{
			a[i] = s;
			s = 0;
			break;
		}
	}
	a[0] = s + 1;
	for(int i : a){
		cout << i;
	}
	cout << ' ';
	vector<int> b(n);
	for(int i = 0; i < n; ++i){
		if(s1 >= 9){
			b[i] = 9;
			s1-= 9;
		}else{
			b[i] = s1;
			s1 = 0;
		}
	}
	for(int i : b)
		cout << i;
}

int main(){
	
	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	cin >> n >> s;
	solve();

	return 0;
}


DSA03027 - GIÁ TRỊ LỚN NHẤT

// created: 2023-05-26 17:59:25
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int n;
	cin >> n;
	ll sm = 0;
	for(int i = 0; i < n; ++i){
		ll tmp;
		cin >> tmp;
		sm += tmp + abs(tmp);
	}
	cout << sm;
	return 0;
}



DSA03033 - ATM THẾ HỆ MỚI

// created: 2023-05-26 17:59:41
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;
	while(t--){
		ll n, c;
		cin >> n >> c;
		if(n % 1000 != 0){
			cout << 0;
		}else{
			ll cnt = 0;
			ll ex = 1;
			n /= 1000;
			ll tmp = n;
			ll c1 = c;
			while(tmp > 0){
				ll k = tmp % 10;
				if(c1 < 0){
					break;
				}
				if(k == 1 || k == 2 || k == 3 || k == 5){
					++cnt;
				}else if(k == 4 || k == 6 || k == 7 || k == 8){
					cnt += 2;
				}else if(k == 9){
					cnt += 3;
				}
				tmp /= 10;
				c1--;
			}	
			cnt += (tmp << 1);
			while(n > 0){
				if(c == 0)
					break;
				ll e = n % 10;
				if(e == 4 || e == 6)
					ex <<= 1;
				else if(e == 9)
					ex *= 3;
				n /= 10;
				c--;
			}
			if(n < 10){
				if(n == 4 || n == 6)
					ex <<= 1;
				else if(n == 9)
					ex *= 3;
			}else{
				if(n % 5 == 1)
					ex <<= 1;
				else if(n % 5 == 4)
					ex *= 3;
			}
			cout << cnt << ' ' << ex;
		}
		cout << '\n';
	}
	return 0;
}

DSA03034 - DÃY CON CHUNG

// created: 2023-05-26 17:55:31
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		
		int n1,n2,n3;
		cin >> n1 >> n2 >> n3;	
		
		map<int, int> mp1;
		int tmp;
		for(int i = 0; i < n1; ++i){
			cin >> tmp;
			mp1[tmp]++;
		}
		map<int, int> mp2;
		for(int i = 0; i < n2; ++i){
			cin >> tmp;
			mp2[tmp]++;
		}
		map<int,int> mp3;
		for(int i = 0; i < n3; ++i){
			cin >> tmp;
			mp3[tmp]++;
		}
		map<int, int> mpp1;
		for(auto p : mp2){
			if(mp1.find(p.first) != mp1.end()){
				mpp1[p.first] = min(p.second, mp1.find(p.first)->second);
			}
		}
		map<int, int> mpp2;
		for(auto p : mp3){
			if(mpp1.find(p.first) != mpp1.end()){
				mpp2[p.first] = min(p.second, mpp1.find(p.first)->second);
			}
		}
		if(mpp2.size() == 0){
			cout << "NO";
		}else{
			for(auto p: mpp2){
				for(int i = 0; i < p.second; ++i){
					cout << p.first << ' ';
				}
			}
		}
		cout << '\n';
	}
	return 0;
}


DSA03035 - SẮP XẾP ĐƠN GIẢN

// created: 2023-05-26 17:55:47
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int n;
	cin >> n;
	int tmp;
	unordered_map<int,int> mp;
	for(int i = 1; i <= n; ++i){
		cin >> tmp;
		mp[tmp] = i;
	}
	
	vector<int> b(n + 1);
	for(int i = 1; i <= n; ++i){
		b[i] = mp[i];
	}
	int m = 1;
	int msf = 1;
	for(int i = 2; i <= n; ++i){
		if(b[i] < b[i - 1]){
			m = 1;
		}else{
			m++;
		}
		msf = max(msf, m);
		
	}
	cout << n - msf;
	return 0;
}

DSA11001 - CÂY BIỂU THỨC 1

// created: 2023-05-26 23:40:57
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

bool isOperator(char c){
	return c == '+' || c == '-' || c == '*' || c == '/';
}

int main(){
    
	ios_base::sync_with_stdio(false);
	cin.tie(0);	
	
	int t;
	cin >> t;

	while(t--){
		string s;
		cin >> s;
		stack<string> st;
		for(char c: s){
			if(isOperator(c)){
				string op2 = st.top(); st.pop();
				string op1 = st.top(); st.pop();
				st.push(op1 + string(1,c) +  op2);
			}else
				st.push(string(1,c));		
		}
		cout << st.top() << '\n';
	}
	return 0;
}

DSA11002 - CÂY BIỂU THỨC 2

// created: 2023-05-26 23:41:10
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

class Node{
public:
	Node* left = nullptr;
	Node* right = nullptr;
	string val;

	Node();
	Node(string val){
		this->val = val;
	}
};

bool isOperator(string s){
	return s == "+" || s == "-" || s == "*" || s == "/";
}

int n;

int cal(Node* root){
	if(!root) return 0;
	if(!isOperator(root->val))
		return stoi(root->val);	

	int op1 = cal(root->left);
	int op2 = cal(root->right);
	int ans;
	if(root->val == "+")
		ans = op1 + op2;
	else if(root->val == "-")
		ans = op1 - op2;
	else if(root->val == "*")
		ans = op1 * op2;
	else if(root->val == "/")
		ans = op1 / op2;
	return ans;
}

Node* buildTree(vector<string> &tmp, int i = 0){
	
	if(i >= n)
		return nullptr;
	Node* root = new Node(tmp[i]);
	root->left = buildTree(tmp, i * 2 + 1);
	root->right = buildTree(tmp, i * 2 + 2);
	return root;
}
int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		cin >> n;
		vector<string> tmp(n);
		for(int i = 0; i < n; ++i){
			cin >> tmp[i];	
		}	
		Node* root = buildTree(tmp);
		cout << cal(root) << '\n';
	}

	return 0;
}

DSA11003 - DUYỆT CÂY 1

// created: 2023-05-26 23:41:25
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

class Node{
public:
	Node* left = nullptr;
	Node* right = nullptr;
	int val;

	Node();
	Node(int val){
		this->val = val;
	}
};
int n;
vector<int> in;
vector<int> pre;

int cnt = 0;
Node* bld(int l1 = 0, int r1 = n - 1, int l2 = 0){
	if(l1 > r1)
		return nullptr;
	Node* root = new Node(pre[l2]);
	auto it = find(	in.begin(), in.end(), pre[l2]);
	int m = it - in.begin();
	root->left = bld(l1, m - 1, l2 + 1);
	root->right = bld(m + 1, r1, l2 + m - l1 + 1);
	return root;
}

void postOrder(Node* root){
	if(root){
		postOrder(root->left);
		postOrder(root->right);
		cout << root->val << ' ';
	}
}

int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		in.resize(0);
		pre.resize(0);
		cin >> n;
		in.resize(n);
		pre.resize(n);
		
		for(int i = 0; i < n; ++i)
			cin >> in[i];
		for(int i = 0; i < n; ++i){
			cin >> pre[i];
		}
		Node* root = bld();
		postOrder(root);
		cout << '\n';
	}

	return 0;
}


DSA11004 - DUYỆT CÂY THEO MỨC

// created: 2023-05-26 23:41:37
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

class Node{
public:
	Node* left = nullptr;
	Node* right = nullptr;
	int val;

	Node();
	Node(int val){
		this->val = val;
	}
};
int n;

void bld(Node *&root, int a, int b, char c){
	if(!root) return;
	if(root->val == a){
		if(c == 'L'){
			root->left = new Node(b);
		}else if(c == 'R'){
			root->right = new Node(b);
		}
	}	
	bld(root->left,a,b,c);
	bld(root->right,a,b,c);
}

void levelOrder(Node* root){

	queue<Node*> q;
	q.push(root);

	while(!q.empty()){
		while(!q.empty()){
			Node* r = q.front(); q.pop();
			cout << r->val << ' ';
			if(r->left)
				q.push(r->left);
			if(r->right)
				q.push(r->right);				
		
		}
	}

}

int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		cin >> n;
		Node* root = nullptr;
		for(int i = 0; i < n; ++i){
			int a,b;
			char c;
			cin >> a >> b >> c;
			if(!root)
				root = new Node(a);
			bld(root, a,b,c);
		}
		levelOrder(root);
		cout << '\n';
	}

	return 0;
}

DSA11005 - DUYỆT CÂY 2

// created: 2023-05-26 23:41:50
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

class Node{
public:
	Node* left = nullptr;
	Node* right = nullptr;
	int val;
	Node();
	Node(int val){
		this->val = val;
	}	
};

int n;
vector<int> in(n);
vector<int> lv(n);

Node* bld(vector<int> levelOrder = lv, int l = 0, int r = n - 1){
	if(levelOrder.size() == 0){
		return nullptr;
	}
	auto it = find(in.begin(), in.end(), levelOrder[0]);
	int m = it - in.begin();
	unordered_set<int> s;
	for(int i = l; i < m; ++i){
		s.insert(in[i]);
	}
	vector<int> v1;
	vector<int> v2;
	for(int i = 1; i < levelOrder.size(); ++i){
		if(s.find(levelOrder[i]) != s.end()){
			v1.push_back(levelOrder[i]);
		}else{
			v2.push_back(levelOrder[i]);
		}
	}
	Node* root = new Node(levelOrder[0]);

	root->left = bld(v1, l, m - 1);
	root->right = bld(v2, m + 1, r);
	return root;
}

void postOrder(Node* root){
	if(root){
		postOrder(root->left);
		postOrder(root->right);
		cout << root->val << ' ';
	}
}

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);
	
	int t;
	cin >> t;

	while(t--){
		in.resize(0);
		lv.resize(0);
		cin >> n;
		in.resize(n);
		lv.resize(n);
		for(int i = 0; i < n; ++i)
			cin >> in[i];
		for(int i = 0; i < n; ++i)
			cin >> lv[i];

		Node* root = bld();
		postOrder(root);
		cout << '\n';
	}
	return 0;
}

DSA11006 - DUYỆT CÂY KIỂU XOẮN ỐC


// created: 2023-05-26 23:42:15
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

class Node{
public:
	Node* left = nullptr;
	Node* right = nullptr;
	int val;

	Node();
	Node(int val){
		this->val = val;
	}
};
int n;

void bld(Node *&root, int a, int b, char c){
	if(!root) return;
	if(root->val == a){
		if(c == 'L'){
			root->left = new Node(b);
		}else if(c == 'R'){
			root->right = new Node(b);
		}
	}	
	bld(root->left,a,b,c);
	bld(root->right,a,b,c);
}

void levelOrder(Node* root){

	queue<Node*> q;
	q.push(root);
	int cnt = 0;
	while(!q.empty()){
		vector<Node*> a;
		while(!q.empty()){
			a.push_back(q.front()); q.pop();
		}
		for(Node* r: a){
			if(r->left){
				q.push(r->left);
			}
			if(r->right){
				q.push(r->right);
			}
		}
		
		if(cnt & 1){
			for(int i = 0; i < a.size(); ++i)
				cout << a[i]->val << ' ';
		}else{
			for(int i = a.size() - 1; ~i; --i)
				cout << a[i]->val << ' ';
		}		
		++cnt;
	}

}

int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		cin >> n;
		Node* root = nullptr;
		for(int i = 0; i < n; ++i){
			int a,b;
			char c;
			cin >> a >> b >> c;
			if(!root)
				root = new Node(a);
			bld(root, a,b,c);
		}
		levelOrder(root);
		cout << '\n';
	}

	return 0;
}

DSA11008 - KIỂM TRA NODE LÁ

// created: 2023-05-26 23:42:01
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

class Node{
public:
	Node* left = nullptr;
	Node* right = nullptr;
	int val;

	Node();
	Node(int val){
		this->val = val;
	}
};
int n;

void bld(Node *&root, int a, int b, char c){
	if(!root) return;
	if(root->val == a){
		if(c == 'L'){
			root->left = new Node(b);
		}else if(c == 'R'){
			root->right = new Node(b);
		}
	}	
	bld(root->left,a,b,c);
	bld(root->right,a,b,c);
}
unordered_set<int> h;
void qry(Node* root, int height = 0){
	if(!root){
		h.insert(height);
		return;
	}
	qry(root->left, height + 1);
	qry(root->right, height + 1);
}

int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		h.clear();
		cin >> n;
		Node* root = nullptr;
		for(int i = 0; i < n; ++i){
			int a,b;
			char c;
			cin >> a >> b >> c;
			if(!root)
				root = new Node(a);
			bld(root, a,b,c);
		}
		qry(root);
		cout << (h.size() == 1 ? 1 : 0) << '\n';
	}

	return 0;
}

DSA11010 - CÂY NHỊ PHÂN HOÀN HẢO

// created: 2023-05-26 23:42:28
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

class Node{
public:
	Node* left = nullptr;
	Node* right = nullptr;
	int val;

	Node();
	Node(int val){
		this->val = val;
	}
};
int n;

void bld(Node *&root, int a, int b, char c){
	if(!root) return;
	if(root->val == a){
		if(c == 'L'){
			root->left = new Node(b);
		}else if(c == 'R'){
			root->right = new Node(b);
		}
	}	
	bld(root->left,a,b,c);
	bld(root->right,a,b,c);
}

int treeHeight(Node* root){
	if(!root) return 0;
	return max(treeHeight(root->left), treeHeight(root->right)) + 1;
}

int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		cin >> n;
		Node* root = nullptr;
		for(int i = 0; i < n; ++i){
			int a,b;
			char c;
			cin >> a >> b >> c;
		}
		n += 2;
		cout << ( !(n & n - 1) ? "Yes" : "No") << '\n';
	}

	return 0;
}

DSA11011 - CÂY NHỊ PHÂN ĐẦY ĐỦ

// created: 2023-05-26 23:42:42
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

class Node{
public:
	Node* left = nullptr;
	Node* right = nullptr;
	int val;

	Node();
	Node(int val){
		this->val = val;
	}
};
int n;

void bld(Node *&root, int a, int b, char c){
	if(!root) return;
	if(root->val == a){
		if(c == 'L'){
			root->left = new Node(b);
		}else if(c == 'R'){
			root->right = new Node(b);
		}
	}	
	bld(root->left,a,b,c);
	bld(root->right,a,b,c);
}

bool check(Node* root){
	if(!root->left && !root->right)
		return true;
	if(root->left && !root->right || !root->left && root->right)
		return false;
	return check(root->left) && check(root->right);
}

int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		cin >> n;
		Node* root = nullptr;
		for(int i = 0; i < n; ++i){
			int a,b;
			char c;
			cin >> a >> b >> c;
			if(!root)
				root = new Node(a);
			bld(root, a,b,c);
		}
		cout << (check(root) ? 1 : 0) << '\n';
	}

	return 0;
}



DSA11012 - CÂY NHỊ PHÂN BẰNG NHAU

// created: 2023-05-26 23:42:55
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

class Node{
public:
	Node* left = nullptr;
	Node* right = nullptr;
	int val;

	Node();
	Node(int val){
		this->val = val;
	}
};
int n;

void bld(Node *&root, int a, int b, char c){
	if(!root) return;
	if(root->val == a){
		if(c == 'L'){
			root->left = new Node(b);
		}else if(c == 'R'){
			root->right = new Node(b);
		}
	}	
	bld(root->left,a,b,c);
	bld(root->right,a,b,c);
}

bool check(Node* root){
	if(!root->left && !root->right)
		return true;
	if(root->left && !root->right || !root->left && root->right)
		return false;
	return check(root->left) && check(root->right);
}

int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	cin.ignore();
	while(t--){
		string s;
		getline(cin, s);
		//Node* root = nullptr;
		//for(int i = 0; i < n; ++i){
			//int a,b;
			//char c;
			//cin >> a >> b >> c;
			//if(!root)
				//root = new Node(a);
			//bld(root, a,b,c);
		//}
		//cout << (check(root) ? 1 : 0) << '\n';
		string s1;
		getline(cin, s1);
		getline(cin, s);
		string s2;
		getline(cin, s2);
		cout << (s1 == s2 ? 1 : 0) << '\n';
	}

	return 0;
}

DSA11014 - TỔNG NODE LÁ BÊN PHẢI

// created: 2023-05-26 23:43:12
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

class Node{
public:
	Node* left = nullptr;
	Node* right = nullptr;
	int val;

	Node();
	Node(int val){
		this->val = val;
	}
};
int n;

int rightLeafSum(Node* root){
	if(!root)
		return 0;
	int ans = 0;
	if(root->right && !root->right->left && !root->right->right)
		ans += root->right->val;
	ans += rightLeafSum(root->left);
	ans += rightLeafSum(root->right);
	return ans;
}

void bld(Node *&root, int a, int b, char c){
	if(!root) return;
	if(root->val == a){
		if(c == 'L'){
			root->left = new Node(b);
		}else if(c == 'R'){
			root->right = new Node(b);
		}
	}	
	bld(root->left,a,b,c);
	bld(root->right,a,b,c);
}

int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		cin >> n;
		Node* root = nullptr;
		map<int, Node*> mp;
		for(int i = 0; i < n; ++i){
			int a, b;
			char c;
			cin >> a >> b >> c;
			if(mp.find(a) == mp.end()){
				root = new Node(a);
				if(c == 'L'){
					root->left = new Node(b);
					mp[b] = root->left;
				}else{
					root->right = new Node(b);
					mp[b] = root->right;
				}
				mp[a] = root;
			}
			else{
				if(c == 'L'){
					mp[a]->left = new Node(b);
					mp[b] = mp[a]->left;
				}else{
					mp[a]->right = new Node(b);
					mp[b] = mp[a]->right;
				}
			}
		}	
		cout << rightLeafSum(root) << '\n';
	}

	return 0;
}

DSA11015 - TỔNG LỚN NHẤT

// created: 2023-05-26 23:43:46
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

class Node{
public:
	Node* left = nullptr;
	Node* right = nullptr;
	int val;

	Node();
	Node(int val){
		this->val = val;
	}
};
int n;

int rightLeafSum(Node* root){
	if(!root)
		return 0;
	int ans = 0;
	if(root->right && !root->right->left && !root->right->right)
		ans += root->right->val;
	ans += rightLeafSum(root->left);
	ans += rightLeafSum(root->right);
	return ans;
}

void bld(Node *&root, int a, int b, char c){
	if(!root) return;
	if(root->val == a){
		if(c == 'L'){
			root->left = new Node(b);
		}else if(c == 'R'){
			root->right = new Node(b);
		}
	}	
	bld(root->left,a,b,c);
	bld(root->right,a,b,c);
}

int sum(Node* root){
	if(!root) return 0;
	return max(sum(root->left), sum(root->right)) + root->val;
}

int res;
void dfs(Node* root){
	if(root){
		if(root->left && root->right)
			res = max(res, root->val + sum(root->left) + sum(root->right));
		dfs(root->left);
		dfs(root->right);
	}
}

int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		res = INT_MIN;
		cin >> n;
		Node* root = nullptr;
		for(int i = 0; i < n; ++i){
			int a, b;
			char c;
			cin >> a >> b >> c;
			if(!root){
				root = new Node(a);
			}
			bld(root, a,b,c);
		}	
		dfs(root);
		cout << res << '\n';
	}

	return 0;
}

DSA11016 - BIẾN ĐỔI SANG CÂY NHỊ PHÂN TÌM KIẾM

// created: 2023-05-26 23:43:59
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

class Node{
public:
	Node* left = nullptr;
	Node* right = nullptr;
	int val;

	Node();
	Node(int val){
		this->val = val;
	}
};
int n;

void bld(Node *&root, int a, int b, char c){
	if(!root) return;
	if(root->val == a){
		if(c == 'L'){
			root->left = new Node(b);
		}else if(c == 'R'){
			root->right = new Node(b);
		}
	}	
	bld(root->left,a,b,c);
	bld(root->right,a,b,c);
}

int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	cin.ignore();
	while(t--){
		int n;
		cin >> n;
		set<int> s;
		for(int i = 0; i < n; ++i){
			int a, b;
			char c;
			cin >> a >>b >> c;
			s.insert(a);
			s.insert(b);
		}	
		for(int i : s)
			cout << i << ' ';
		cout << '\n';
	}

	return 0;
}

DSA11017 - DUYỆT CÂY NHỊ PHÂN TÌM KIẾM 1

// created: 2023-05-26 23:44:12
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

class Node{
public:
	Node* left = nullptr;
	Node* right = nullptr;
	int val;

	Node();
	Node(int val){
		this->val = val;
	}
};
int n;

void bld(Node *&root, int a, int b, char c){
	if(!root) return;
	if(root->val == a){
		if(c == 'L'){
			root->left = new Node(b);
		}else if(c == 'R'){
			root->right = new Node(b);
		}
	}	
	bld(root->left,a,b,c);
	bld(root->right,a,b,c);
}

void buildBST(Node *& root, int val){
	if(!root){
		root = new Node(val);
		return;
	}
	
	if(val < root->val)
		buildBST(root->left, val);
	else if(val > root->val)
		buildBST(root->right, val);	
}

void postOrder(Node* root){
	if(root){
		postOrder(root->left);
		postOrder(root->right);
		cout << root->val << ' ';
	}
}

int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	cin.ignore();
	while(t--){
		int n;
		cin >> n;
		Node* root = nullptr;
		for(int i = 0; i < n; ++i){
			int tmp;
			cin >> tmp;
			buildBST(root, tmp);
		}
		postOrder(root);
		cout << '\n';
	}

	return 0;
}

DSA11018 - XÂY DỰNG LẠI CÂY NHỊ PHÂN TÌM KIẾM

// created: 2023-05-26 23:44:26
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

class Node{
public:
	Node* left = nullptr;
	Node* right = nullptr;
	int val;

	Node();
	Node(int val){
		this->val = val;
	}
};
int n;

void bld(Node *&root, int a, int b, char c){
	if(!root) return;
	if(root->val == a){
		if(c == 'L'){
			root->left = new Node(b);
		}else if(c == 'R'){
			root->right = new Node(b);
		}
	}	
	bld(root->left,a,b,c);
	bld(root->right,a,b,c);
}

void buildBST(Node *& root, int val){
	
	if(!root){
		root = new Node(val);
		return;
	}
	
	if(val < root->val)
		buildBST(root->left, val);
	else if(val > root->val)
		buildBST(root->right, val);	
}

void postOrder(Node* root){
	if(root){
		cout << root->val << ' ';
		postOrder(root->left);
		postOrder(root->right);
	}
}

int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	cin.ignore();
	while(t--){
		int n;
		cin >> n;
		Node* root = nullptr;
		for(int i = 0; i < n; ++i){
			int tmp;
			cin >> tmp;
			buildBST(root, tmp);
		}
		postOrder(root);
		cout << '\n';
	}

	return 0;
}

DSA11019 - DUYỆT CÂY NHỊ PHÂN TÌM KIẾM 2

// created: 2023-05-26 23:44:40
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

class Node{
public:
	Node* left = nullptr;
	Node* right = nullptr;
	int val;

	Node();
	Node(int val){
		this->val = val;
	}
};
int n;

void bld(Node *&root, int a, int b, char c){
	if(!root) return;
	if(root->val == a){
		if(c == 'L'){
			root->left = new Node(b);
		}else if(c == 'R'){
			root->right = new Node(b);
		}
	}	
	bld(root->left,a,b,c);
	bld(root->right,a,b,c);
}

void buildBST(Node *& root, int val){
	
	if(!root){
		root = new Node(val);
		return;
	}
	
	if(val < root->val)
		buildBST(root->left, val);
	else if(val > root->val)
		buildBST(root->right, val);	
}

void postOrder(Node* root){
	if(root){
		postOrder(root->left);
		postOrder(root->right);
		cout << root->val << ' ';
	}
}

int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	cin.ignore();
	while(t--){
		int n;
		cin >> n;
		Node* root = nullptr;
		for(int i = 0; i < n; ++i){
			int tmp;
			cin >> tmp;
			buildBST(root, tmp);
		}
		postOrder(root);
		cout << '\n';
	}

	return 0;
}

DSA11020 - KIỂM TRA CÂY NHỊ PHÂN TÌM KIẾM

// created: 2023-05-26 23:44:55
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

class Node{
public:
	Node* left = nullptr;
	Node* right = nullptr;
	int val;

	Node();
	Node(int val){
		this->val = val;
	}
};
int n;

void bld(Node *&root, int a, int b, char c){
	if(!root) return;
	if(root->val == a){
		if(c == 'L'){
			root->left = new Node(b);
		}else if(c == 'R'){
			root->right = new Node(b);
		}
	}	
	bld(root->left,a,b,c);
	bld(root->right,a,b,c);
}

void buildBST(Node *& root, int val){
	
	if(!root){
		root = new Node(val);
		return;
	}
	
	if(val < root->val)
		buildBST(root->left, val);
	else if(val > root->val)
		buildBST(root->right, val);	
}

void postOrder(Node* root){
	if(root){
		postOrder(root->left);
		postOrder(root->right);
		cout << root->val << ' ';
	}
}

int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	cin.ignore();
	while(t--){
		int n;
		cin >> n;	
		vector<int> a(n);
		for(int i = 0; i < n; ++i) cin >> a[i];	
		bool flag = true;
		for(int i = 0; i < n - 1; ++i){
			if(a[i] >= a[i + 1]) flag = false;
		}	
		cout << (flag ? 1 : 0) << '\n';
	}

	return 0;
}

DSA11021 - NODE LÁ CỦA CÂY NHỊ PHÂN TÌM KIẾM

// created: 2023-05-26 23:45:07
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

class Node{
public:
	Node* left = nullptr;
	Node* right = nullptr;
	int val;

	Node();
	Node(int val){
		this->val = val;
	}
};
int n;

void bld(Node *&root, int a, int b, char c){
	if(!root) return;
	if(root->val == a){
		if(c == 'L'){
			root->left = new Node(b);
		}else if(c == 'R'){
			root->right = new Node(b);
		}
	}	
	bld(root->left,a,b,c);
	bld(root->right,a,b,c);
}

void buildBST(Node *& root, int val){
	
	if(!root){
		root = new Node(val);
		return;
	}
	
	if(val < root->val)
		buildBST(root->left, val);
	else if(val > root->val)
		buildBST(root->right, val);	
}

void printLeaf(Node* root){
	if(!root) return;
	if(!root->left && !root->right){
		cout << root->val << ' ';
		return;
	}
	printLeaf(root->left);
	printLeaf(root->right);
}

int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	cin.ignore();
	while(t--){
		int n;
		cin >> n;	
		Node* root = nullptr;
		for(int i = 0; i < n; ++i){
			int tmp;
			cin >> tmp;
			buildBST(root, tmp);
		}	
		printLeaf(root);
		cout << '\n';
	}

	return 0;
}


DSA11022 - NODE TRUNG GIAN CỦA CÂY NHỊ PHÂN TÌM KIẾM

// created: 2023-05-26 23:45:19
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

class Node{
public:
	Node* left = nullptr;
	Node* right = nullptr;
	int val;

	Node();
	Node(int val){
		this->val = val;
	}
};
int n;

void bld(Node *&root, int a, int b, char c){
	if(!root) return;
	if(root->val == a){
		if(c == 'L'){
			root->left = new Node(b);
		}else if(c == 'R'){
			root->right = new Node(b);
		}
	}	
	bld(root->left,a,b,c);
	bld(root->right,a,b,c);
}

void buildBST(Node *& root, int val){
	
	if(!root){
		root = new Node(val);
		return;
	}
	
	if(val < root->val)
		buildBST(root->left, val);
	else if(val > root->val)
		buildBST(root->right, val);	
}

int cnt = 0;
void printLeaf(Node* root){
	if(!root) return;
	if(!root->left && !root->right){
		cnt++;
		return;
	}
	printLeaf(root->left);
	printLeaf(root->right);
}

int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	cin.ignore();
	while(t--){
		cnt = 0;
		int	n;
		cin >> n;	
		Node* root = nullptr;
		for(int i = 0; i < n; ++i){
			int tmp;
			cin >> tmp;
			buildBST(root, tmp);
		}	
		printLeaf(root);
		cout << n - cnt << '\n';
	}

	return 0;
}

DSA11023 - ĐỘ SÂU CỦA CÂY NHỊ PHÂN TÌM KIẾM

// created: 2023-05-26 23:46:38
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

class Node{
public:
	Node* left = nullptr;
	Node* right = nullptr;
	int val;

	Node();
	Node(int val){
		this->val = val;
	}
};
int n;

void bld(Node *&root, int a, int b, char c){
	if(!root) return;
	if(root->val == a){
		if(c == 'L'){
			root->left = new Node(b);
		}else if(c == 'R'){
			root->right = new Node(b);
		}
	}	
	bld(root->left,a,b,c);
	bld(root->right,a,b,c);
}

void buildBST(Node *& root, int val){
	
	if(!root){
		root = new Node(val);
		return;
	}
	
	if(val < root->val)
		buildBST(root->left, val);
	else if(val > root->val)
		buildBST(root->right, val);	
}

int treeHeight(Node* root){
	if(!root) return -1;
	return max(treeHeight(root->left), treeHeight(root->right)) + 1;
}

int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	cin.ignore();
	while(t--){
		int	n;
		cin >> n;	
		Node* root = nullptr;
		for(int i = 0; i < n; ++i){
			int tmp;
			cin >> tmp;
			buildBST(root, tmp);
		}	
		cout << treeHeight(root) << '\n';	
	}

	return 0;
}

DSA11024 - CÂY NHỊ PHÂN TÌM KIẾM CÂN BẰNG 1

// created: 2023-05-26 23:46:49
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

class Node{
public:
	Node* left = nullptr;
	Node* right = nullptr;
	int val;

	Node();
	Node(int val){
		this->val = val;
	}
};
int n;

void bld(Node *&root, int a, int b, char c){
	if(!root) return;
	if(root->val == a){
		if(c == 'L'){
			root->left = new Node(b);
		}else if(c == 'R'){
			root->right = new Node(b);
		}
	}	
	bld(root->left,a,b,c);
	bld(root->right,a,b,c);
}

void buildBST(Node *& root, int val){
	
	if(!root){
		root = new Node(val);
		return;
	}
	
	if(val < root->val)
		buildBST(root->left, val);
	else if(val > root->val)
		buildBST(root->right, val);	
}

int treeHeight(Node* root){
	if(!root) return -1;
	return max(treeHeight(root->left), treeHeight(root->right)) + 1;
}

int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	cin.ignore();
	while(t--){
		int	n;
		cin >> n;	
		vector<int> a(n);
		for(int i = 0; i < n; ++i)
			cin >> a[i];
		sort(a.begin(), a.end());
		cout << a[(n - 1) / 2] << '\n';
	}

	return 0;
}

DSA11025 - CÂY NHỊ PHÂN TÌM KIẾM CÂN BẰNG 2

// created: 2023-05-26 23:47:07
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

class Node{
public:
	Node* left = nullptr;
	Node* right = nullptr;
	int val;

	Node();
	Node(int val){
		this->val = val;
	}
};

void bld(Node *&root, int a, int b, char c){
	if(!root) return;
	if(root->val == a){
		if(c == 'L'){
			root->left = new Node(b);
		}else if(c == 'R'){
			root->right = new Node(b);
		}
	}	
	bld(root->left,a,b,c);
	bld(root->right,a,b,c);
}

void buildBST(Node *& root, int val){
	
	if(!root){
		root = new Node(val);
		return;
	}
	
	if(val < root->val)
		buildBST(root->left, val);
	else if(val > root->val)
		buildBST(root->right, val);	
}

vector<int> a;
int n;

Node* buildBSTWithArr(int l = 0, int r = n - 1){
	if(l > r)
		return nullptr;
	int m = l + r >> 1;
	Node* root = new Node(a[m]);
	root->left = buildBSTWithArr(l, m - 1);
	root->right =buildBSTWithArr(m + 1, r);
	return root;
}

void preOrder(Node* root){
	if(root){
		cout << root->val << ' ';
		preOrder(root->left);
		preOrder(root->right);
	}
}

int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	cin.ignore();
	while(t--){
		cin >> n;	
		a.clear();
		a.resize(n);
		for(int i = 0; i < n; ++i) cin >> a[i];
		sort(a.begin(), a.end());
		Node* root = buildBSTWithArr();
		preOrder(root);
		cout << '\n';
	}

	return 0;
}

DSA11026 - DUYỆT SAU CÂY TÌM KIẾM CÂN BẰNG

// created: 2023-05-26 23:47:19
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

class Node{
public:
	Node* left = nullptr;
	Node* right = nullptr;
	int val;

	Node();
	Node(int val){
		this->val = val;
	}
};

void bld(Node *&root, int a, int b, char c){
	if(!root) return;
	if(root->val == a){
		if(c == 'L'){
			root->left = new Node(b);
		}else if(c == 'R'){
			root->right = new Node(b);
		}
	}	
	bld(root->left,a,b,c);
	bld(root->right,a,b,c);
}

void buildBST(Node *& root, int val){
	
	if(!root){
		root = new Node(val);
		return;
	}
	
	if(val < root->val)
		buildBST(root->left, val);
	else if(val > root->val)
		buildBST(root->right, val);	
}

vector<int> a;
int n;

Node* buildBSTWithArr(int l = 0, int r = n - 1){
	if(l > r)
		return nullptr;
	int m = l + r >> 1;
	Node* root = new Node(a[m]);
	root->left = buildBSTWithArr(l, m - 1);
	root->right =buildBSTWithArr(m + 1, r);
	return root;
}

void preOrder(Node* root){
	if(root){
		preOrder(root->left);
		preOrder(root->right);

		cout << root->val << ' ';
	}
}

int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	cin.ignore();
	while(t--){
		cin >> n;	
		a.clear();
		a.resize(n);
		for(int i = 0; i < n; ++i) cin >> a[i];
		sort(a.begin(), a.end());
		Node* root = buildBSTWithArr();
		preOrder(root);
		cout << '\n';
	}

	return 0;
}

DSA11027 - ĐẾM SỐ NODE LÁ CÂY NHỊ PHÂN TÌM KIẾM CÂN BẰNG

// created: 2023-05-26 23:47:31
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

class Node{
public:
	Node* left = nullptr;
	Node* right = nullptr;
	int val;

	Node();
	Node(int val){
		this->val = val;
	}
};

void bld(Node *&root, int a, int b, char c){
	if(!root) return;
	if(root->val == a){
		if(c == 'L'){
			root->left = new Node(b);
		}else if(c == 'R'){
			root->right = new Node(b);
		}
	}	
	bld(root->left,a,b,c);
	bld(root->right,a,b,c);
}

void buildBST(Node *& root, int val){
	
	if(!root){
		root = new Node(val);
		return;
	}
	
	if(val < root->val)
		buildBST(root->left, val);
	else if(val > root->val)
		buildBST(root->right, val);	
}

vector<int> a;
int n;
int cnt;
Node* buildBSTWithArr(int l = 0, int r = n - 1){
	if(l > r)
		return nullptr;
	int m = l + r >> 1;
	Node* root = new Node(a[m]);
	root->left = buildBSTWithArr(l, m - 1);
	root->right =buildBSTWithArr(m + 1, r);
	return root;
}

void leafCount(Node* root){
	if(!root) return;
	if(!root->left && !root->right){
		++cnt;
		return;
	}
	leafCount(root->left);
	leafCount(root->right);
}

int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	cin.ignore();
	while(t--){
		cnt = 0;
		cin >> n;	
		a.clear();
		a.resize(n);
		for(int i = 0; i < n; ++i) cin >> a[i];
		sort(a.begin(), a.end());
		Node* root = buildBSTWithArr();
		leafCount(root);
		cout << cnt << '\n';
	}

	return 0;
}

DSA11028 - ĐỘ CAO CỦA CÂY

// created: 2023-05-26 23:47:45
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

class Node{
public:
	Node* left = nullptr;
	Node* right = nullptr;
	int val;

	Node();
	Node(int val){
		this->val = val;
	}
};

void bld(Node *&root, int a, int b, char c){
	if(!root) return;
	if(root->val == a){
		if(c == 'L'){
			root->left = new Node(b);
		}else if(c == 'R'){
			root->right = new Node(b);
		}
	}	
	bld(root->left,a,b,c);
	bld(root->right,a,b,c);
}

void buildBST(Node *& root, int val){
	
	if(!root){
		root = new Node(val);
		return;
	}
	
	if(val < root->val)
		buildBST(root->left, val);
	else if(val > root->val)
		buildBST(root->right, val);	
}

vector<int> adj[100001];
int n;
int dfs(int u = 1){
	
	if(adj[u].size() == 0) return 0;
	int height = 0;
	for(int v: adj[u]){
		height = max(height, dfs(v));
	}
	return height + 1;

}
int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	cin.ignore();
	while(t--){
		memset(adj, {}, sizeof(adj));	
		cin >> n;
		for(int i = 0; i < n - 1; ++i){
			int u, v;
			cin >> u >> v;
			adj[u].push_back(v);
		}
		cout << dfs() << '\n';
	}

	return 0;
}


DSA11029 - ĐƯỜNG ĐI TỚI NODE LÁ

// created: 2023-05-26 23:47:58
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

class Node{
public:
	Node* left = nullptr;
	Node* right = nullptr;
	int val;

	Node();
	Node(int val){
		this->val = val;
	}
};

void bld(Node *&root, int a, int b, char c){
	if(!root) return;
	if(root->val == a){
		if(c == 'L'){
			root->left = new Node(b);
		}else if(c == 'R'){
			root->right = new Node(b);
		}
	}	
	bld(root->left,a,b,c);
	bld(root->right,a,b,c);
}

void buildBST(Node *& root, int val){
	
	if(!root){
		root = new Node(val);
		return;
	}
	
	if(val < root->val)
		buildBST(root->left, val);
	else if(val > root->val)
		buildBST(root->right, val);	
}

vector<int> adj[1001];
int n;
vector<vector<int>> res;
void dfs(int u = 1, vector<int> tmp = {1}){
	if(adj[u].size() == 0){
		res.push_back(tmp);
		return;
	}
	for(int v: adj[u]){
		tmp.push_back(v);
		dfs(v, tmp);
		tmp.pop_back();
	}	
}
int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	cin.ignore();
	while(t--){
		res.clear();
		memset(adj, {}, sizeof(adj));	
		cin >> n;
		for(int i = 0; i < n - 1; ++i){
			int u, v;
			cin >> u >> v;
			adj[u].push_back(v);
		}
		dfs();
		sort(res.begin(), res.end(), [](vector<int> &v1, vector<int> &v2){
			return v1.back() < v2.back();
		});
		for(vector<int> v: res){
			for(int i : v){
				cout << i << ' ';
			}
			cout << '\n';
		}
	}

	return 0;
}

DSA11030 - KHOẢNG CÁCH GIỮA HAI NODE

// created: 2023-05-26 23:48:40
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const int mxN = 1001;
vector<int> adj[1001];
int anc[mxN][19];
int d[mxN];
int n;


void dfs(int u = 1){
	for(int v: adj[u]){
		if(v == anc[u][0]) continue;
		d[v] = d[u] + 1;

		anc[v][0] = u;

		for(int i = 1; i < 19; ++i)
			anc[v][i] = anc[anc[v][i - 1]][i - 1];
		dfs(v);
	}
}
int lca(int u, int v){
	int dist = 0;
	if(d[u] < d[v]) swap(u, v);
	for(int i = 18; ~i; --i)
		if((1 << i) <= d[u] - d[v]){
			u = anc[u][i];
			dist += (1 << i);
		}
	if(u == v) return dist;
	for(int i = 18; ~i; --i)
		if(anc[u][i] ^ anc[v][i]){
			u = anc[u][i], v = anc[v][i];
			dist += (1 << i + 1);
		}
	return dist + 2;
}

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		memset(adj, {}, sizeof(adj));
		memset(d, 0, sizeof(d));
		cin >> n;
		for(int i = 0; i < n - 1; ++i){
			int u, v;
			cin >> u >> v;
			adj[u].push_back(v);
		}
		dfs();
		int q;
		cin >> q;

		while(q--){
			int u, v;
			cin >> u >> v;
			cout << lca(u,v) << '\n';
		}
	}

	return 0;
}



DSAKT060 - TRUY VẤN ĐỐI XỨNG


// created: 2023-05-26 23:48:26
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const int mxN = 4e5 + 5;
const ll mod = 1e9 + 7;
ll p[mxN];

struct{

	ll fen[mxN];
	void upd(int i, ll n){
		for(;i < mxN; i += i & -i){
			fen[i] += n;
			fen[i] %= mod;
		}
	}

	ll qry(int i){
		ll res = 0;
		for(; i > 0; i -= i & -i){
			res += fen[i];
			res %= mod;
		}
		return res;
	}

}nm, rv;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);
	
	int n, q;
	string tmp;
	string s = " ";
	cin >> tmp;
	n = tmp.size();
	s += tmp;
	p[0] = 1;
	for(int i = 1; i < mxN; ++i){
		p[i] = p[i - 1] * 28032003;
		p[i] %= mod;
	}

	for(int i = 1; i <= n; ++i){
		nm.upd(i, (s[i] - '0' + 1) * p[i] % mod);
		rv.upd(i, (s[i] - '0' + 1) * p[n - i + 1] % mod);
	}
	cin >> q;
	while(q--){
		char type;
		cin >> type;

		if(type == 'c'){
			int k;
			char c;
			cin >> k >> c;
			nm.upd(k, (c - s[k] + mod) * p[k] % mod);
			rv.upd(k, (c - s[k] + mod) * p[n - k + 1] % mod);
			s[k] = c;
		}else if(type == 'q'){
			int l, r;
			cin >> l >> r;
			ll k1 = (nm.qry(r) - nm.qry(l - 1) + mod) % mod;
			ll k2 = (rv.qry(r) - rv.qry(l - 1) + mod) % mod;
			if(k1 * p[n - l + 1] % mod == k2 * p[r] % mod)
				cout << "YES\n";
			else
				cout << "NO\n";
		}
	}

	return 0;
}


CTDL_005 - XÓA DỮ LIỆU TRONG DSLK ĐƠN

// created: 2023-05-26 18:24:03
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int n;
	cin >> n;
	vector<int> a(n);
	for(int i = 0 ;i < n; ++i)
		cin >> a[i];
	int k;
	cin >> k;
	for(int i = 0; i < n; ++i){
		if(a[i] != k)
			cout << a[i] << ' ';
	}
	return 0;
}

CTDL_006 - LỌC DỮ LIỆU TRÙNG TRONG DSLK ĐƠN

// created: 2023-05-26 18:24:19
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int n;
	cin >> n;
	vector<int> a;
	int k;
	unordered_set<int> s;
	for(int i = 0 ;i < n; ++i){
		cin >> k;
		if(s.find(k) == s.end()){
			a.push_back(k);
		}
		s.insert(k);
	}
	for(int i : a)
		cout << i << ' ';
	return 0;
}

DSA06001 - SẮP XẾP XEN KẼ

// created: 2023-05-26 18:24:32
// author: Nguyen Tung Duong

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll mod = 1e9 + 7;
int main()
{

	#ifndef ONLINE_JUDGE
    freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
	#endif

    ios_base::sync_with_stdio(false);
    cin.tie(0);

    int t;
    cin >> t;

    while (t--)
    {
		int n;
		cin >> n;
		vector<int> a(n);
		for(int i = 0; i < n; ++i)
			cin >> a[i];
		sort(a.begin(), a.end());
		int l = 0, r = n - 1;
		while(l < r){
			cout << a[r--] << ' ' << a[l++] << ' ';
		}
		if(l == r) cout << a[l];
		cout << '\n';
	
	}
    return 0;
}


DSA06002 - SẮP XẾP THEO GIÁ TRỊ TUYỆT ĐỐI

// created: 2023-05-26 18:24:43
// author: Nguyen Tung Duong

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll mod = 1e9 + 7;

class Num{
public:
	int idx;
	int val;
};


int main()
{

	#ifndef ONLINE_JUDGE
    freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
	#endif

    ios_base::sync_with_stdio(false);
    cin.tie(0);

    int t;
    cin >> t;

    while (t--)
    {
		int n, x;
		cin >> n >> x;
		vector<Num> a(n);
		for(int i = 0; i < n; ++i){
			cin >> a[i].val;
			a[i].idx = i;
		}
		sort(a.begin(), a.end(), [&](Num a1, Num a2){
			if(abs(a1.val - x) == abs(a2.val - x)) return a1.idx < a2.idx;
		   return abs(a1.val - x) < abs(a2.val - x);	
		});
		for(Num i : a){
			cout << i.val << ' ';
		}	
		cout << '\n';
	
	}
    return 0;
}


DSA06003 - ĐỔI CHỖ ÍT NHẤT

// created: 2023-05-26 18:24:55
// author: Nguyen Tung Duong

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll mod = 1e9 + 7;

int main()
{

	#ifndef ONLINE_JUDGE
    freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
	#endif

    ios_base::sync_with_stdio(false);
    cin.tie(0);

    int t;
    cin >> t;

    while (t--)
    {
		int n;
		cin >> n;
		vector<int> a(n);
		for(int i = 0; i < n; ++i)
			cin >> a[i];
		int cnt = 0;
		for(int i = 0; i < n - 1; ++i){
			int mn = i;
			for(int j = i + 1; j < n; ++j){
				if(a[j] < a[mn]){
					mn = j;
				}
			}
			if(a[mn] < a[i]){
				++cnt;
				swap(a[mn], a[i]);
			}
		}
		cout << cnt << '\n';
	}
    return 0;
}


DSA06004 - HỢP VÀ GIAO CỦA HAI DÃY SỐ 1

// created: 2023-05-26 18:25:29
// author: Nguyen Tung Duong

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll mod = 1e9 + 7;

int main()
{

	#ifndef ONLINE_JUDGE
    freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
	#endif

    ios_base::sync_with_stdio(false);
    cin.tie(0);

    int t;
    cin >> t;

    while (t--)
    {	
		int n, m;
		cin >> n >> m;	
		vector<int> a(n);
		vector<int> b(m);
	
		for(int i = 0; i < n; ++i){
			cin >> a[i];
		}
		for(int i = 0; i < m; ++i)
			cin >> b[i];
	
		set<int> s1;
		set<int> s2;
		for(int i = 0; i < n; ++i){
			s1.insert(a[i]);
			s2.insert(a[i]);
		}
		for(int i = 0; i < m; ++i){
			s1.insert(b[i]);
		}
		for(int i : s1){
			cout << i << ' ';
		}
		cout << '\n';
		for(int i : b){
			if(s2.find(i) != s2.end())
				cout << i << ' ';
		}
		cout << '\n';
	}	
    return 0;
}

DSA06005 - HỢP VÀ GIAO CỦA HAI DÃY SỐ 2

// created: 2023-05-26 18:25:41
// author: Nguyen Tung Duong

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll mod = 1e9 + 7;

int main()
{

	#ifndef ONLINE_JUDGE
    freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
	#endif

    ios_base::sync_with_stdio(false);
    cin.tie(0);

    int t;
    cin >> t;

    while (t--)
    {	
		int n, m;
		cin >> n >> m;	
		vector<int> a(n);
		vector<int> b(m);
	
		for(int i = 0; i < n; ++i){
			cin >> a[i];
		}
		for(int i = 0; i < m; ++i)
			cin >> b[i];
	
		set<int> s1;
		set<int> s2;
		for(int i = 0; i < n; ++i){
			s1.insert(a[i]);
			s2.insert(a[i]);
		}
		for(int i = 0; i < m; ++i){
			s1.insert(b[i]);
		}
		for(int i : s1){
			cout << i << ' ';
		}
		cout << '\n';
		sort(b.begin(), b.end());
		for(int i : b){
			if(s2.find(i) != s2.end())
				cout << i << ' ';
		}
		cout << '\n';
	}	
    return 0;
}


DSA06006 - SẮP XẾP [0 1 2]

// created: 2023-05-26 18:25:58
// author: Nguyen Tung Duong

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll mod = 1e9 + 7;

int main()
{

	#ifndef ONLINE_JUDGE
    freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
	#endif

    ios_base::sync_with_stdio(false);
    cin.tie(0);

    int t;
    cin >> t;

    while (t--)
    {	
		int n;
		cin >> n;
		vector<int> a(n);
		for(int i = 0; i < n; ++i)
			cin >> a[i];
		sort(a.begin(), a.end());
		for(int i : a)
			cout << i << ' ';
		cout << '\n';	
	}	
    return 0;
}

DSA06007 - SẮP XẾP DÃY CON LIÊN TỤC

// created: 2023-05-26 18:26:09
// author: Nguyen Tung Duong

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll mod = 1e9 + 7;

int main()
{

	#ifndef ONLINE_JUDGE
    freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
	#endif

    ios_base::sync_with_stdio(false);
    cin.tie(0);

    int t;
    cin >> t;

    while (t--)
    {	
		int n;
		cin >> n;
				
		vector<int> a(n);
		for(int i = 0; i < n; ++i){
			cin >> a[i];
		}
		
		vector<int> b = a;
		sort(a.begin(), a.end());
		int l = 0, r= n- 1;
		while(a[l] == b[l]) ++l;
		while(a[r] == b[r]) --r;
		cout << l + 1<< ' ' << r + 1<< '\n';

	}	
    return 0;
}

DSA06008 - ĐẾM CẶP

// created: 2023-05-26 18:26:20
// author: Nguyen Tung Duong

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll mod = 1e9 + 7;

int main()
{

	#ifndef ONLINE_JUDGE
    freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
	#endif

    ios_base::sync_with_stdio(false);
    cin.tie(0);

    int t;
    cin >> t;

    while (t--)
    {		
		int n, m;
		cin >> n >> m;
		vector<int> a(n), b(m);
		for(int i = 0; i < n; ++i)
			cin >> a[i];
		vector<int> ex(5);
		for(int i = 0; i < m; ++i){
			cin >> b[i];
			if(b[i] >= 0 && b[i] <= 4)
				ex[b[i]]++;
		}
		sort(b.begin(), b.end());

		ll cnt = 0;
		for(int i = 0; i < n; ++i){
			if(a[i] == 0)
				continue;
			if(a[i] == 1)
				cnt += ex[0];
			else{
				auto it = upper_bound(b.begin(), b.end(), a[i]);
				cnt += b.end() - it;
				cnt += ex[0] + ex[1];
				if(a[i] == 2)
					cnt -= (ex[3] + ex[4]);
				if(a[i] == 3)
					cnt += ex[2];
			}
		}
		cout << cnt << '\n';
		
	}	
    return 0;
}


DSA06009 - CẶP SỐ TỔNG BẰNG K

// created: 2023-05-26 18:26:35
// author: Nguyen Tung Duong

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll mod = 1e9 + 7;

int main()
{

	#ifndef ONLINE_JUDGE
    freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
	#endif

    ios_base::sync_with_stdio(false);
    cin.tie(0);

    int t;
    cin >> t;

    while (t--)
    {		
		int n, k;
		cin >> n >> k;
		vector<int> a(n);
		for(int i = 0; i < n; ++i)
			cin >> a[i];
		int cnt = 0;
		for(int i = 0; i < n - 1; ++i){
			for(int j = i + 1; j < n; ++j){
				if(a[i] + a[j] == k){
					++cnt;
				}
			}
		}
		cout << cnt << '\n';	
	}	
    return 0;
}

DSA06010 - SẮP XẾP CHỮ SỐ

// created: 2023-05-26 18:26:47
// author: Nguyen Tung Duong

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll mod = 1e9 + 7;

int main()
{

	#ifndef ONLINE_JUDGE
    freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
	#endif

    ios_base::sync_with_stdio(false);
    cin.tie(0);

    int t;
    cin >> t;

    while (t--)
    {		
		int n;
		cin >> n;
		vector<string> a(n);
		for(int i = 0; i < n; ++i)
			cin >> a[i];
		set<char> st;
		for(string s: a){
			for(char c : s){
				st.insert(c);
			}
		}
		for(char c: st){
			cout << c << ' ';
		}
		cout << '\n';
	}	
    return 0;
}


DSA06011 - TỔNG GẦN 0 NHẤT

// created: 2023-05-26 18:26:59
// author: Nguyen Tung Duong

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll mod = 1e9 + 7;

int main()
{

	#ifndef ONLINE_JUDGE
    freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
	#endif

    ios_base::sync_with_stdio(false);
    cin.tie(0);

    int t;
    cin >> t;

    while (t--)
    {		
		int n;
		cin >> n;
		vector<int> a(n);
		for(int i = 0; i < n ;++i)
			cin >> a[i];

		int res = INT_MAX;
		int m = INT_MAX;
		for(int i = 0; i < n - 1; ++i){
			for(int j = i + 1; j < n; ++j){
				if(abs(a[i] + a[j]) < m){
					res = a[i] + a[j];
					m = abs(a[i] + a[j]);
				}
			}
		}
		cout << res << '\n';
	}	
    return 0;
}

DSA06012 - PHẦN TỬ LỚN NHẤT

// created: 2023-05-26 18:27:10
// author: Nguyen Tung Duong

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll mod = 1e9 + 7;

int main()
{

	#ifndef ONLINE_JUDGE
    freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
	#endif

    ios_base::sync_with_stdio(false);
    cin.tie(0);

    int t;
    cin >> t;

    while (t--)
    {		
		int n, k;
		cin >> n >> k;
		vector<int> a(n);
		for(int i = 0; i < n; ++i)
			cin >> a[i];	
		sort(a.begin(), a.end());
		for(int i = n - 1; i >= n - k; --i)
			cout << a[i] << ' ';
		cout << '\n';
	}	
    return 0;
}




DSA06013 - SỐ LẦN XUẤT HIỆN

// created: 2023-05-26 18:27:20
// author: Nguyen Tung Duong

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll mod = 1e9 + 7;

int main()
{

	#ifndef ONLINE_JUDGE
    freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
	#endif

    ios_base::sync_with_stdio(false);
    cin.tie(0);

    int t;
    cin >> t;

    while (t--)
    {		
		int n, k;
		cin >> n >> k;
		vector<int> a(n);
		int cnt = 0;
		for(int i = 0; i < n; ++i){
			cin >> a[i];	
			if(a[i] == k) ++cnt;
		}
		cout << (cnt ? cnt : -1) << '\n';
	}	
    return 0;
}


DSA06014 - TỔNG CẶP SỐ NGUYÊN TỐ

// created: 2023-05-26 18:27:35
// author: Nguyen Tung Duong

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll mod = 1e9 + 7;

bool isPrime(int n){
	if(n < 2) return false;
	if(n == 2 || n == 3) return true;
	if(n % 2 == 0 || n % 3 == 0) return false;
	for(int i = 5; i * i <= n; i += 6){
		if(n % i == 0 || n % (i + 2) == 0)
			return false;
	}
	return true;
}

int main()
{

	#ifndef ONLINE_JUDGE
    freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
	#endif

    ios_base::sync_with_stdio(false);
    cin.tie(0);

    int t;
    cin >> t;

    while (t--)
    {	
		int n;
		cin >> n;	
		
		bool flag = true;
		for(int i = 2; i <= n / 2; ++i){
			if(isPrime(i)){
				if(isPrime(n - i)){
					flag = false;
					cout << i << ' ' << n - i;
					break;
				}
			}
		}
		if(flag)
			cout << -1;
		cout << '\n';
	}	
    return 0;
}

DSA06015 - MERGE SORT

// created: 2023-05-26 18:27:56
// author: Nguyen Tung Duong

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;


const ll mod = 1e9 + 7;
int main()
{

	#ifndef ONLINE_JUDGE
    freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
	#endif

    ios_base::sync_with_stdio(false);
    cin.tie(0);

    int t;
    cin >> t;

    while (t--)
    {
		int n;
		cin >> n;
		vector<int> a(n);
		for(int i = 0; i < n; ++i)
			cin >> a[i];
		sort(a.begin(), a.end());
		for(int i : a)
			cout << i << ' ';
		cout << '\n';	
	}	
    return 0;
}

DSA06016 - TÍCH LỚN NHẤT - NHỎ NHẤT

// created: 2023-05-26 18:28:17
// author: Nguyen Tung Duong

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

int main()
{

	#ifndef ONLINE_JUDGE
    freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
	#endif

    ios_base::sync_with_stdio(false);
    cin.tie(0);
	
	int t;
	cin >> t;

	while(t--){
		int n, m;
		cin >> n >> m;
		vector<ll> a(n), b(m);
		for(int i = 0; i < n; ++i)
			cin >> a[i];
		for(int i = 0; i < m; ++i)
			cin >> b[i];
		cout << *max_element(a.begin(), a.end()) * *min_element(b.begin(), b.end()) << '\n';
	}
	
    return 0;
}


DSA06017 - TRỘN HAI DÃY

// created: 2023-05-26 18:28:27
// author: Nguyen Tung Duong

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

int main()
{

	#ifndef ONLINE_JUDGE
    freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
	#endif

    ios_base::sync_with_stdio(false);
    cin.tie(0);
	
	int t;
	cin >> t;

	while(t--){
		int n, m;
		cin >> n >> m;
		vector<int> a(n + m);
		for(int i = 0; i < n + m; ++i)
			cin >> a[i];
		sort(a.begin(), a.end());
		for(int i : a)
			cout << i << ' ';
		cout << '\n';	
	}
	
    return 0;
}

DSA06018 - BỔ SUNG PHẦN TỬ

// created: 2023-05-26 18:28:40
// author: Nguyen Tung Duong

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

int main()
{

	#ifndef ONLINE_JUDGE
    freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
	#endif

    ios_base::sync_with_stdio(false);
    cin.tie(0);
	
	int t;
	cin >> t;

	while(t--){
		int n;
		cin >> n;
		set<int> a;
		for(int i = 0; i < n; ++i){
			int tmp;
			cin >> tmp;
			a.insert(tmp);
		}	
		cout << *a.rbegin() - *a.begin() - a.size() + 1 << '\n';
	}
	
    return 0;
}

DSA06019 - SẮP XẾP THEO SỐ LẦN XUẤT HIỆN

// created: 2023-05-26 18:28:52
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){	
		int n;
		cin >> n;
		vector<int> a(n);
		unordered_map<int, int> cnt;
		for(int i = 0; i < n; ++i){
			cin >> a[i];
			cnt[a[i]]++;
		}
		sort(a.begin(), a.end(), [&](int n1, int n2){
			if(cnt[n1] == cnt[n2])
				return n1 < n2;
			return cnt[n1] > cnt[n2];
		});
		for(int i : a)
			cout << i << ' ';
		cout << '\n';
	}
	return 0;
}

DSA06020 - TÌM KIẾM

// created: 2023-05-26 18:29:05
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;


int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;
	while(t--){
		int n, k;
		cin >> n >> k;
		int tmp;
		bool flag = false;
		for(int i = 0; i < n; ++i){
			cin >> tmp;
			if(tmp == k)
				flag = true;
		}
		cout << (flag ? 1 : -1) << '\n';
		
	}
	return 0;
}

DSA06021 - TÌM KIẾM TRONG DÃY SẮP XẾP VÒNG

// created: 2023-05-26 18:29:17
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){	
		int n, k;
		cin >> n >> k;
		int res = 0;
		vector<int> a(n);
		for(int i = 0; i < n; ++i){
			cin >> a[i];
			if(a[i] == k) 
				res = i;
		}
		cout << res  + 1<< '\n';
	}
	return 0;
}

DSA06022 - SỐ NHỎ NHẤT VÀ NHỎ THỨ HAI

// created: 2023-05-26 18:29:31
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){	
		int n;
		cin >> n;

		set<int> a;
		for(int i = 0; i < n; ++i){
			int tmp;
			cin >> tmp;
			a.insert(tmp);
		}
		if(a.size() == 1){
			cout << -1 << '\n';
		}else{
			int cnt = 0;
			for(int i : a){
				cout << i << ' ';
				++cnt;
				if(cnt == 2)
					break;
			}
		}
		cout << '\n';
	}
	return 0;
}

DSA06023 - SẮP XẾP ĐỔI CHỖ TRỰC TIẾP

// created: 2023-05-26 18:29:48
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);


		int n;
		cin >> n;
		vector<int> a(n);
		for(int i = 0; i < n; ++i)
			cin >> a[i];
		for(int i = 0; i < n - 1; ++i){
			for(int j = i + 1; j < n; ++j){
				if(a[i] > a[j]){
					swap(a[i], a[j]);
				}
			}
			cout << "Buoc " << i + 1 << ": ";
			for(int i : a){
				cout << i << ' ';
			}
			cout << '\n';
		}	

	return 0;
}

DSA06024 - SẮP XẾP CHỌN

// created: 2023-05-26 18:29:59
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);


		int n;
		cin >> n;
		vector<int> a(n);
		for(int i = 0; i < n; ++i)
			cin >> a[i];
		for(int i = 0; i < n - 1; ++i){
			int mn = i;
			for(int j = i + 1; j < n; ++j){
				if(a[j] < a[mn])
					swap(mn, j);
			}
			swap(a[i], a[mn]);
			cout << "Buoc " << i + 1 << ": ";
			for(int i : a){
				cout << i << ' ';
			}
			cout << '\n';
		}	

	return 0;
}


DSA06025 - SẮP XẾP CHÈN

// created: 2023-05-26 18:30:12
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);


		int n;
		cin >> n;
		vector<int> a(n);
		vector<int> b;
		for(int i = 0; i < n; ++i)
			cin >> a[i];
		for(int i = 0; i < n; ++i){
			b.push_back(a[i]);
			sort(b.begin(), b.end());
			cout << "Buoc " << i << ": ";
			for(int i : b){
				cout << i << ' ';
			}
			cout << '\n';
		}	

	return 0;
}


DSA06026 - SẮP XẾP NỔI BỌT

// created: 2023-05-26 18:30:27
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);


		int n;
		cin >> n;
		vector<int> a(n);
		for(int i = 0; i < n; ++i)
			cin >> a[i];
		for(int i = 0; i < n; ++i){
			bool flag = true;
			for(int j = 0; j < n - 1; ++j){
				if(a[j] > a[j + 1]){
					flag = false;
					swap(a[j], a[j + 1]);
				}
			}
			if(!flag){
				cout << "Buoc " << i + 1<< ": ";
				for(int i : a){
					cout << i << ' ';
				}
				cout << '\n';
			}
		}	

	return 0;
}

DSA06027 - SẮP XẾP ĐỔI CHỖ TRỰC TIẾP - LIỆT KÊ NGƯỢC

// created: 2023-05-26 18:30:38
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;
	while(t--){
		int n;
		cin >> n;
		vector<int> a(n);
		vector<vector<int>> res;
		for(int i = 0; i < n; ++i)
			cin >> a[i];
		for(int i = 0; i < n - 1; ++i){
			for(int j = i + 1; j < n; ++j){
				if(a[i] > a[j]){
					swap(a[i], a[j]);
				}
			}
			res.push_back(a);
		}	
		for(int i = res.size() - 1; ~i; --i){
			cout << "Buoc " << i + 1 << ": ";
			for(int j : res[i])
				cout << j << ' ';
			cout << '\n';
		}
	}

	return 0;
}



DSA06028 - SẮP XẾP CHỌN - LIỆT KÊ NGƯỢC

// created: 2023-05-26 18:30:48
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);


		int n;
		cin >> n;
		vector<int> a(n);
		vector<vector<int>> res;
		for(int i = 0; i < n; ++i)
			cin >> a[i];
		for(int i = 0; i < n - 1; ++i){
			int mn = i;
			for(int j = i + 1; j < n; ++j){
				if(a[j] < a[mn])
					swap(mn, j);
			}
			swap(a[i], a[mn]);
			res.push_back(a);
		}	
		for(int i = res.size() - 1; ~i; --i){
			cout << "Buoc " << i + 1 << ": ";
			for(int j : res[i])
				cout << j << ' ';
			cout << '\n';
		}

	return 0;
}



DSA06029 - SẮP XẾP CHÈN - LIỆT KÊ NGƯỢC

// created: 2023-05-26 18:31:03
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);


		int n;
		cin >> n;
		vector<int> a(n);
		vector<int> b;
		vector<vector<int>> res;
		for(int i = 0; i < n; ++i)
			cin >> a[i];
		for(int i = 0; i < n; ++i){
			b.push_back(a[i]);
			sort(b.begin(), b.end());
			res.push_back(b);
		}	
		for(int i = res.size() - 1; ~i; --i){
			cout << "Buoc " << i << ": ";
			for(int j : res[i])
				cout << j << ' ';
			cout << '\n';
		}

	return 0;
}


DSA06030 - SẮP XẾP NỔI BỌT - LIỆT KÊ NGƯỢC

// created: 2023-05-26 18:31:27
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);
	
	int t;
	cin >> t;

	while(t--){
		int n;
		cin >> n;
		vector<int> a(n);
		vector<vector<int>> res;
		for(int i = 0; i < n; ++i)
			cin >> a[i];
		for(int i = 0; i < n; ++i){
			bool flag = true;
			for(int j = 0; j < n - 1; ++j){
				if(a[j] > a[j + 1]){
					flag = false;
					swap(a[j], a[j + 1]);
				}
			}
			if(!flag){
				res.push_back(a);
			}
		}			
		for(int i = res.size() - 1; ~i; --i){
			cout << "Buoc " << i + 1 << ": ";
			for(int j : res[i])
				cout << j << ' ';
			cout << '\n';
		}
	}
	return 0;
}

DSA06031 - PHẦN TỬ LỚN NHẤT TRONG DÃY CON

// created: 2023-05-26 18:31:43
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);
	
	int t;
	cin >> t;

	while(t--){
		int n, k;
		cin >> n >> k;
		vector<int> a(n);
		for(int i = 0; i < n; ++i){
			cin >> a[i];
		}		
		deque<int> q;
		for(int i = 0; i < k; ++i){
			while(!q.empty() && a[q.back()] <= a[i]){
				q.pop_back();
			}
			q.push_back(i);
		}
		cout << a[q.front()] << ' ';
		for(int i = k; i < n; ++i){
			if(i - q.front() == k){
				q.pop_front();
			}
			while(!q.empty() && a[q.back()] <= a[i]){
				q.pop_back();
			}
			q.push_back(i);
			cout << a[q.front()] << ' ';
		}
		cout << '\n';
	   		
	}
	return 0;
}


DSA06032 - BỘ BA SỐ CÓ TỔNG NHỎ HƠN K

// created: 2023-05-26 18:31:54
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);
	
	int t;
	cin >> t;

	while(t--){
		int n;
		ll k;
		cin >> n >> k;
		vector<ll> a(n);
		for(int i = 0; i < n; ++i)
			cin >> a[i];	
	   	ll cnt = 0;
		sort(a.begin(), a.end());
		for(int i = 0; i < n - 2; ++i){
			ll target = k - a[i];
			int l = i + 1;
			int r = n - 1;
			while(l < r){
				ll sum = a[l] + a[r];
				if(sum >= target){
					r--;
				}else{
					cnt = cnt + (r - l);
					++l;
				}
			}
		}
		cout << cnt << '\n';
	}
	return 0;
}

DSA06033 - KHOẢNG CÁCH XA NHẤT

// created: 2023-05-26 18:32:06
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);
	
	int t;
	cin >> t;

	while(t--){
		int n;
		cin >> n;
		
		vector<int> a(n);
		for(int i = 0; i < n; ++i){
			cin >> a[i];
		}
		vector<int> pre(n);
		vector<int> suf(n);
		pre[0] = a[0];
		for(int i = 1; i < n; ++i){
			pre[i] = min(pre[i - 1], a[i]);
		}
		suf[n - 1] = a[n - 1];
		for(int i = n - 2; ~i; --i){
			suf[i] = max(suf[i + 1], a[i]);
		}
		int l = 0;
		int r = 0;

		int res = -1;
		while(l < n && r < n){
			if(suf[r] > pre[l]){
				res = max(res, r - l);
				r++;
			}else{
				l++;
			}
		}
		cout << res << '\n';
	}
	return 0;
}


DSA06034 - CẶP SỐ CÓ TỔNG BẰNG K

// created: 2023-05-26 18:32:18
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);
	
	int t;
	cin >> t;

	while(t--){
		int n;
		ll k;
		cin >> n >> k;
			
		vector<ll> a(n);
		unordered_map<ll, int> cnt;
		for(int i = 0; i < n; ++i){
			cin >> a[i];
		}
		ll count = 0;
		for(int i = 0; i < n; ++i){
			ll target = k - a[i];
			if(cnt.find(target) != cnt.end()){
				count += cnt[target];
			}
			cnt[a[i]]++;
		}
		cout << count << '\n';
	}
	return 0;
}


DSA06035 - DÃY TAM GIÁC DÀI NHẤT

// created: 2023-05-26 18:32:33
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);
	
	int t;
	cin >> t;

	while(t--){
		int n;
		cin >> n;
		vector<int> a(n);
		for(int i = 0; i < n; ++i)
			cin >> a[i];
			
		vector<int> b;
		bool check1 = true;
		bool check2 = true;
		bool check3 = true;
		for(int i = 0; i < n - 1; ++i){
			if(a[i] < a[i + 1]){
				b.push_back(1);
				check1 = false;
			}else if(a[i] > a[i + 1]){
				b.push_back(-1);
				check2 = false;
			}else{
				b.push_back(0);
				check3 = false;
			}
		}
		int res = 0;
		if(check3){
			if(check1 || check2){
				cout << n << '\n';
				continue;
			}
		}
		for(int i = 0; i < n - 2; ++i){
			if(b[i] == 1 && b[i + 1] == -1){
				int l = i;
				int r = i + 1;
				while(b[l] == 1 && l >= 0)
					--l;
				while(b[r] == -1 && r < n - 2)
					++r;
				if(b[l] != 1) ++l;
				if(b[r] != -1) --r;
				res = max(res, r - l + 2);
			}
		}	
		cout << res << '\n';
	}
	return 0;
}


DSA06036 - BỘ BA SỐ BẰNG K

// created: 2023-05-26 18:32:49
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);
	
	int t;
	cin >> t;

	while(t--){
		int n;
		ll k;
		cin >> n >> k;
			
		vector<ll> a(n);
		unordered_map<ll, int> cnt;
		for(int i = 0; i < n; ++i){
			cin >> a[i];
		}
		sort(a.begin(), a.end());
		bool flag = false;
		for(int i = 0; i < n - 2; ++i){
			ll target = k - a[i];
			int l = i + 1;
			int r = n - 1;

			while(l < r){
				if(a[l] + a[r] == target){
					flag = true;
					break;
				}else{
					if(a[l] + a[r] < target){
						l++;
					}else
						r--;
				}
			}
			if(flag)
				break;
		}
		cout << (flag ? "YES" : "NO") << '\n';
	}
	return 0;
}

DSA06037 - SẮP XẾP ĐOẠN CON

// created: 2023-05-26 18:34:52
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;
	while(t--){
		int n;
		cin >> n;

		vector<int> a(n);
		for(int i = 0; i < n; ++i)
			cin >> a[i];
		vector<int> l(n), r(n);
		l[0] = a[0];
		r[n - 1] = a[n - 1];
		for(int i = 1; i < n; ++i)
			l[i] = max(a[i], l[i - 1]);
		for(int i = n - 2; ~i; --i)
			r[i] = min(a[i], r[i + 1]); 
		vector<int> res;
		for(int i = 0; i < n - 1; ++i){
			if(l[i] <= r[i + 1])
				res.push_back(i);
		}	
		cout << res.size() << '\n';
		for(int i: res)
			cout << i + 1 << ' ';
		cout << '\n';
	}
	return 0;
}

DSA06038 - CẶP SỐ

// created: 2023-05-26 18:35:10
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
int n;
vector<int> a;
const int mxN = 1e5 + 5;

ll bit[mxN];

void upd(int i){
	for(;i < mxN; i += i & -i) ++bit[i];
}

ll qry(int i){
	ll res = 0;
	for(;i > 0; i -= i & -i) res += bit[i];
	return res;
}

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	memset(bit, 0, sizeof(bit));
	
	cin >> n;
	a.resize(n);
	for(int i = 0; i < n; ++i) cin >> a[i];
	
	ll res = 0;	
	int last = n;
	for(int i = n - 1; ~i; --i){
		if(a[i] & 1){
			for(int j = i + 1; j < last; ++j)
				upd(a[j]);
			last = i; 
		}
		else
			res += qry(a[i] - 1);
	}	
	cout << res;

	return 0;
}

DSA06039 - SỐ ĐẦU TIÊN BỊ LẶP

// created: 2023-05-26 18:33:02
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);
	
	int t;
	cin >> t;

	while(t--){
		int n;
		cin >> n;
		vector<int> a(n);
		for(int i = 0; i < n; ++i)
			cin >> a[i];
		int res = -1;
		unordered_set<int> s;
		for(int i = n - 1; ~i; --i){
			if(s.find(a[i]) != s.end()){
				res = a[i];
			}
			s.insert(a[i]);
		}
		if(res == -1){
			cout << "NO";
		}else
			cout << res;
		cout << '\n';
	}
	return 0;
}



DSA06040 - GIAO CỦA BA DÃY SỐ

// created: 2023-05-26 18:33:20
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);
	
	int t;
	cin >> t;

	while(t--){
		int n1, n2, n3;
		cin >> n1 >> n2 >> n3;
		int x = 0;
		int y = 0;
		int z = 0;	

		vector<ll> a1(n1), a2(n2), a3(n3);
		for(int i = 0; i < n1; ++i)
			cin >> a1[i];
		for(int i = 0; i < n2; ++i)
			cin >> a2[i];
		for(int i = 0; i < n3; ++i)
			cin >> a3[i];
		vector<ll> res;
		while(x < n1 && y < n2 && z < n3){
			if(a1[x] == a2[y] && a2[y] == a3[z]){
				res.push_back(a1[x]);
				x++;
				y++;
				z++;
			}else if(a1[x] < a2[y]){
				x++;
			}else if(a2[y] < a3[z]){
				y++;
			}else
				z++;
		}
		if(res.size() == 0)
			cout << -1;
		else{
			for(ll i : res)
				cout << i << ' ';
		}	
		cout << '\n';
	}
	return 0;
}

DSA06041 - SỐ XUẤT HIỆN NHIỀU NHẤT

// created: 2023-05-26 18:33:36
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;


int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;
	while(t--){
		int n;
		cin >> n;


		int tmp;
		unordered_map<int, int> cnt;
		for(int i = 0; i < n; ++i){
			cin >> tmp;
			cnt[tmp]++;
		}
		bool flag = false;
		int k = n / 2;

		int res;
		for(auto p : cnt){
			if(p.second > k){
				flag = true;
				res = p.first;
			}
		}
		if(flag){
			cout << res;
		}else
			cout << "NO";
		cout << '\n';

	}
	return 0;
}


DSA06043 - ĐIỂM CÂN BẰNG

// created: 2023-05-26 18:33:48
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);
	
	int t;
	cin >> t;

	while(t--){
		int n;
		cin >> n;
		ll s = 0;
		vector<ll> a(n);
		vector<ll> prf(n);
		for(int i = 0; i < n; ++i){
			cin >> a[i];
			s += a[i];
			prf[i] = s;
		}	
		int res = -1;
		for(int i = 1; i < n - 1; ++i){
			ll tmp = s - a[i];
			if(tmp % 2 == 0){
				if(prf[i - 1] == tmp / 2){
					res = i + 1;
					break;
				}
			}
		}
		cout << res << '\n';
	}
	return 0;
}


DSA06044 - SẮP XẾP CHẴN LẺ

// created: 2023-05-26 18:35:26
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);
	
	int n;
	cin >> n;
	vector<int> a(n);
	for(int i = 0; i < n; ++i)
		cin >> a[i];
	vector<int> a1;
	vector<int> a2;
	for(int i = 0; i < n; i += 2){
		a1.push_back(a[i]);
	}
	for(int i = 1; i < n; i += 2){
		a2.push_back(a[i]);
	}

	sort(a1.begin(), a1.end());
	sort(a2.begin(), a2.end(), greater<int>());
	int k = 0;
	while(k < a1.size() && k < a2.size()){
		cout << a1[k] << ' ' << a2[k] << ' ';
		++k;
	}

	while(k < a1.size()){
		cout << a1[k] << ' ';
		k++;
	}
	while(k < a2.size()){
		cout << a2[k] << ' ';
		k++;
	}

	return 0;
}



DSA06045 - XÂU TỐT

// created: 2023-05-26 18:35:41
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);
	
	ll n;
	cin >> n;
	string s;
	cin >> s;
	ll cnt = 0;
	for(int i = 0; i < n - 1; ++i){
		if(s[i] != s[i + 1]){
			++cnt;
			int it1 = i;
			int it2 = i + 1;
			while(it1 > 0 && s[it1] == s[it1 - 1]) {
				++cnt;
				--it1;
			}
			while(it2 < n - 1&& s[it2] == s[it2 + 1]){
				++cnt;
				++it2;
			}
		}
	}
	cout << n * (n - 1) / 2 - cnt; 

	return 0;
}

DSA06046 - CHÊNH LỆCH NHỎ NHẤT

// created: 2023-05-26 18:34:00
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);
	
	int t;
	cin >> t;

	while(t--){
		int n;
		cin >> n;
		vector<ll> a(n);	
		ll res = LLONG_MAX;	
		for(int i = 0; i < n; ++i){
			cin >> a[i];
		}	
		sort(a.begin(), a.end());
		for(int i = 0; i < n - 1; ++i){
			res = min(res, a[i + 1] - a[i]);
		}
		cout << res << '\n';
	}
	return 0;
}


DSA06047 - BỘ BA SỐ PYTAGO

// created: 2023-05-26 18:34:13
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);
	
	int t;
	cin >> t;

	while(t--){
		int n;
		cin >> n;
		vector<ll> a(n);	
		ll res = LLONG_MAX;	
		for(int i = 0; i < n; ++i){
			cin >> a[i];
			a[i] *= a[i];
		}	
		bool flag = false;
		sort(a.begin(), a.end(), greater<ll>());
		for(int i = 0; i < n - 2; ++i){
			
			int l = i + 1;
			int r = n - 1;
			
			while(l < r){
				if(a[l] + a[r] == a[i]){
					flag = true;
					break;
				}else if(a[l] + a[r] < a[i]){
					r--;
				}else{
					l++;
				}
			}
		}
		cout << (flag ? "YES" : "NO") << '\n';	
	}
	return 0;
}

DSA06048 - SỐ LẦN QUAY VÒNG

// created: 2023-05-26 18:34:26
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);
	
	int t;
	cin >> t;

	while(t--){
		int n;
		cin >> n;
		vector<ll> a(n);
		for(int i = 0; i < n; ++i){
			cin >> a[i];
		}
		int k = 0;
		while(a[k] < a[k + 1] && k < n - 1)
			++k;
		if(k == n - 1){
			cout << 0;
		}else{
			if(a[0] == a[n - 1]){
				cout << 0;
			}else{
				cout << k + 1;
			}
		}
		cout << '\n';
	}
	return 0;
}

DSA06049 - ĐẾM CẶP

// created: 2023-05-26 18:34:38
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main()
{

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;
	
	while(t--){
		int n, k;
		cin >> n >> k;
		vector<int> a(n);
		for(int i = 0; i < n; ++i) cin >> a[i];
		sort(a.begin(), a.end());
		ll res = 0;
		for(int i = 0; i < n - 1; ++i){
			int l = i + 1;
			int r = n - 1;
			int idx = i;
			while(l <= r){
				int m = l + r >> 1;
				if(a[m] - a[i] < k){
					idx = m;
					l = m + 1;
				}else
					r = m - 1;
			}
			res += idx - i;
		}
		cout << res << '\n';
	}	

	return 0;
}


DSA05001 - XÂU CON CHUNG DÀI NHẤT

// created: 2023-05-26 18:10:35
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll mod = 1e9 + 7;


int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		string s1, s2;
		cin >> s1 >> s2;
		int n1 = s1.length();
		int n2 = s2.length();
		int dp[1001][1001];
		for(int i = 1; i <= n1; ++i){
			for(int j = 1; j <= n2; ++j){
				if(s1[i - 1] == s2[j - 1]){
					dp[i][j] = dp[i - 1][j - 1] + 1;
				}else
					dp[i][j] = max(dp[i - 1][j], dp[i][j - 1]);
			}
		}
		cout << dp[n1][n2] << '\n';

	}
	return 0;
}

DSA05003 - DÃY CON CHUNG DÀI NHẤT CỦA BA XÂU

// created: 2023-05-26 18:14:20
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		int n1, n2, n3;
		cin >> n1 >> n2 >> n3;
		string s1, s2, s3;
		cin >> s1 >> s2 >> s3;
		int dp[101][101][101];
		memset(dp, 0, sizeof(dp));
		for(int i = 1; i <= n1; ++i){
			for(int j = 1; j <= n2; ++j){
				for(int k = 1; k <= n3; ++k){
					if(s1[i - 1] == s2[j - 1] && s2[j - 1] == s3[k - 1])
						dp[i][j][k] = dp[i - 1][j - 1][k - 1] + 1;
					else
						dp[i][j][k] = max(dp[i - 1][j][k], max(dp[i][j - 1][k], dp[i][j][k - 1]));
				}
			}
		}
		cout << dp[n1][n2][n3] << '\n';
	}
	return 0;	
}

DSA05004 - DÃY CON TĂNG DÀI NHẤT

// created: 2023-05-26 18:10:51
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int n;
	cin >> n;

	vector<int> a(n);
	for(int i = 0; i < n; ++i)
		cin >> a[i];
	
	vector<int> res;
	res.push_back(a[0]);
	for(int i = 1; i < n; ++i){
		if(res.back() < a[i]){
			res.push_back(a[i]);
		}else{
			int l = 0;
			int r = res.size() - 1;
			int idx = r;
			while(l <= r){
				int m = l + r >> 1;
				if(res[m] >= a[i]){
					idx = m;
					r = m - 1;
				}else
					l = m + 1;
			}
			res[idx] = a[i];
		}
	}
	cout << res.size() << '\n';

	return 0;	
}

DSA05005 - SỐ BƯỚC ÍT NHẤT

// created: 2023-05-26 18:11:13
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll mod = 1e9 + 7;


int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;	
	cin >> t;

	while(t--){
		int n;
		cin >> n;
		vector<int> a(n);
		for(int i = 0; i < n; ++i){
			cin >> a[i];
		}	
		vector<int> dp(n);
		dp[0] = 1;
		for(int i = 0; i < n; ++i){
			dp[i] = 1;
			for(int j = 0; j < i; ++j){
				if(a[j] <= a[i])
					dp[i] = max(dp[i], dp[j] + 1);
			}
		}
		int m = 1;
		for(int i = 0; i < n; ++i){
			m = max(m, dp[i]);
		}
		cout << n - m << '\n';
	}	
	return 0;
}

DSA05006 - TỔNG LỚN NHẤT CỦA DÃY CON TĂNG DẦN

// created: 2023-05-26 18:14:33
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll mod = 1e9 + 7;


int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;	

	while(t--){
		int n;
		cin >> n;
		vector<ll> a(n);
		for(int i = 0; i < n; ++i)
			cin >> a[i];
		vector<ll> dp = a;
		for(int i = 1; i < n; ++i){
			ll mx = a[i];
			for(int j = 0; j < i; ++j){
				if(a[i] > a[j]){
					mx = max(mx, dp[i] + dp[j]);
				}
			}
			dp[i] = mx;
		}
		ll res = dp[0];
		for(int i = 0; i < n; ++i)
			res = max(res, dp[i]);
		cout << res << '\n';
	}	

	return 0;
}

DSA05007 - TỔNG LỚN NHẤT CỦA DÃY CON KHÔNG KỀ NHAU

// created: 2023-05-26 18:14:55
// author: Nguyen Tung Duong

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll mod = 1e9 + 7;
int main()
{

	#ifndef ONLINE_JUDGE
    freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
	#endif

    ios_base::sync_with_stdio(false);
    cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		int n;
		cin >> n;
		vector<ll> a(n);
		for(int i = 0; i < n; ++i){
			cin >> a[i];
		}	
		vector<ll> dp(n);
		dp[0] = a[0];
		dp[1] = max(a[0], a[1]);
		for(int i = 2; i < n; ++i){
			dp[i] = max(dp[i - 1], a[i] + dp[i - 2]);
		}
		cout << dp[n - 1] << '\n';
	}	

    return 0;
}


DSA05008 - DÃY CON CÓ TỔNG BẰNG S

// created: 2023-05-26 18:11:35
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll mod = 1e9 + 7;


int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;	
	cin >> t;

	while(t--){
		int n, k;
		cin >> n >> k;
		vector<int> a(n);
		for(int i = 0; i < n; ++i)
			cin >> a[i];
		bool dp[201][40001];
		for(int i = 1; i <= n; ++i){
			for(int j = 0; j <= k; ++j){
				if(j == 0){
					dp[i][j] = true;
				}else{
					dp[i][j] = dp[i - 1][j] || dp[i - 1][j - a[i - 1]]; 
				}
			}
		}	
		cout << (dp[n][k] ? "YES" : "NO") << '\n';
	}	
	return 0;
}

DSA05010 - DÃY CON DÀI NHẤT CÓ TỔNG CHIA HẾT CHO K

// created: 2023-05-26 18:21:02
// author: Nguyen Tung Duong

#include<iostream>
#include<map>
#include<vector>
#include<climits>
#include<algorithm>
#include<stack>
#include<queue>
#include<cstring>
using namespace std;
typedef long long ll;
	
int main(int argc, char *argv[])
{
	int t;
	cin >> t; 
	
	while(t--){
		int n, k;
		cin >> n >> k;
		
		vector<int> a(n);
		for(int i = 0; i < n; ++i)
			cin >> a[i];
		int dp[1001][51];
		memset(dp, 0, sizeof(dp));
		for(int i = 1; i <= n; ++i){
			for(int j = 0; j < k; ++j){
					int m = (k -(a[i - 1] % k) + j)% k;
					if(dp[i - 1][m] == 0 && dp[i - 1][j] == 0){
						if(a[i - 1] % k == j){
							dp[i][j] = 1;
						}
					}else{
						dp[i][j] = max(dp[i-1][j], dp[i - 1][m] + 1);
					}
			}
			
		}
		cout << dp[n][0] << '\n';
	}

}



DSA05011 - SỐ CÓ TỔNG CHỮ SỐ BẰNG K

// created: 2023-05-26 18:21:18
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const int mod = 1e9 + 7;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		int n, k;
		cin >> n >> k;
		vector<vector<int>> dp(n + 1, vector<int>(k + 1));
		dp[0][0] = 1;
		for(int i = 1; i <= n; ++i){
			for(int j = 1; j <= k; ++j){
				for(int x = 0; x <= min(j, 9); ++x){
					dp[i][j] += dp[i - 1][j - x];
					dp[i][j] %= mod;
				}
			}
		}
		cout << dp[n][k] << '\n';
	}

	return 0;
}


DSA05012 - TỔ HỢP C(n, k)

// created: 2023-05-26 18:11:48
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const int mod = 1e9 + 7;

ll C[1001][1001];

void cal(){
	C[0][0] = 1;
	for(int n = 1; n <= 1000; ++n){
		for(int k = 0; k <= n; ++k){
			if(k == 0)
				C[n][k] = 1;
			else{
				C[n][k] = C[n - 1][k - 1] + C[n - 1][k];
				C[n][k] %= mod;
			}

		}
	}

}

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	cal();
	int t;
	cin >> t;

	while(t--){
		int n, k;
		cin >> n >> k;
		cout << C[n][k] << '\n';
	}

	return 0;
}


DSA05013 - BẬC THANG

// created: 2023-05-26 18:12:05
// author: Nguyen Tung Duong

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll mod = 1e9 + 7;
int main()
{

	#ifndef ONLINE_JUDGE
    freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
	#endif

    ios_base::sync_with_stdio(false);
    cin.tie(0);

    int t;
    cin >> t;

    while (t--)
    {
		int n, k;	
    	cin >> n >> k;
		ll dp[100001];
		memset(dp, 0, sizeof(dp));
		dp[0] = 1;
		for(int i = 1; i <= n; ++i){
			for(int j = i - min(i, k); j < i; ++j){
				dp[i] += dp[j];
				dp[i] %= mod;
			}
		}	
		cout << dp[n] << '\n';
	}
    return 0;
}

DSA05015 - TÍNH P(N, K)

// created: 2023-05-26 18:15:56
// author: Nguyen Tung Duong

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll mod = 1e9 + 7;

ll Pow(ll n, ll k){
	ll res = 1;
	while(k){
		if(k & 1){
			res *= n;
			res %= mod;
		}
		n *= n;
		n %= mod;
		k >>= 1;
	}
	return res;
}

ll inverseMod(ll n){
	return Pow(n, mod - 2);
}

ll f(ll n){
	ll res = 1;
	for(ll i = 2; i<= n; ++i){
		res *= i;
		res %= mod;
	}
	return res;
}

ll C(ll n, ll k){
	return f(n) * inverseMod(f(n - k)) % mod;
}

int main()
{

    ios_base::sync_with_stdio(false);
    cin.tie(0);

    int t;
    cin >> t;

    while (t--)
    {
		ll n, k;
		cin >> n >> k;
		cout << C(n, k) % mod << '\n';		
    }
    return 0;
}


DSA05016 - SỐ UGLY

// created: 2023-05-26 18:16:10
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		ll n;
		cin >> n; n--; 
		priority_queue<ll, vector<ll>, greater<ll>> q;
		q.push(1);
		unordered_set<ll> st;
		while(n--){
			ll top = q.top(); q.pop();
			if(st.find(top * 2) == st.end()){
				q.push(top * 2);
				st.insert(top * 2);
			}
			if(st.find(top * 3) == st.end()){
				q.push(top * 3);
				st.insert(top * 3);
			}
			if(st.find(top * 5) == st.end()){
				q.push(top * 5);
				st.insert(top * 5);
			}
		}	
		cout << q.top() << '\n';
	}

	return 0;
}

DSA05017 - DÃY SỐ BI-TONIC

// created: 2023-05-26 18:16:23
// author: Nguyen Tung Duong

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll mod = 1e9 + 7;

int main()
{

    ios_base::sync_with_stdio(false);
    cin.tie(0);

    int t;
    cin >> t;
	
	while(t--){
		int n;
		cin >> n;
		vector<ll> a(n);
		for(int i = 0; i < n; ++i){
			cin >> a[i];
		}
		vector<ll> pre = a;
		vector<ll> suf = a;
		for(int i = 1; i < n; ++i){
			ll mx = pre[i];
			for(int j = 0; j < i; ++j){
				if(a[i] > a[j]){
					mx = max(mx, pre[i] + pre[j]);
				}
			}
			pre[i] = mx;
		}
		for(int i = n - 2; ~i; --i){
			ll mx = suf[i];
			for(int j = n - 1; j > i; --j){
				if(a[i] > a[j]){
					mx = max(mx, suf[i] + suf[j]);
				}
			}
			suf[i] = mx;
		}

		ll res = LLONG_MIN;
		for(int i = 0; i < n; ++i){
			res = max(res, pre[i] + suf[i] - a[i]);
		}
		cout << res << '\n';
	}
    return 0;
}

DSA05018 - XÂU CON ĐỐI XỨNG DÀI NHẤT

// created: 2023-05-26 18:16:35
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int longestPalindrome(string s) {
    int left, right;
    int count;
	int max = 0;
	int left_ans, right_ans;
	
	for(int i = 0; i < s.length(); i++){
	   left = i;
	   right = i;
	while(left >= 0 && right < s.length() && s[left] == s[right]){
		count = right - left + 1;
		right++;
		left--;
}
		if(count > max){
			max = count;
			left_ans = left + 1;
			right_ans = right - 1;
		}
		}
	for(int i = 0; i < s.length() - 1; i++){
		left = i;
		right = i + 1;
		
		while(left >= 0 && right < s.length() && s[left] == s[right]){
			count = right - left + 1;
			right++;
			left--;
			}
		if(count > max){
			max = count;
			left_ans = left + 1;
			right_ans = right - 1;
			}
		}
	string ans = "";
	for(int i = left_ans; i <= right_ans; i++){
		ans += s[i];
		}
	
	return ans.length();
	
}
int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		string s;
		cin >> s;
		cout << longestPalindrome(s) << '\n';
	}

	return 0;
}


DSA05019 - HÌNH VUÔNG LỚN NHẤT

// created: 2023-05-26 18:16:46
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){

		int n, m;
		cin >> n >> m;
		vector<vector<int>> a(n, vector<int>(m));
		for(int i = 0; i < n; ++i){
			for(int j = 0; j < m; ++j){
				cin >> a[i][j];
			}
		}
		int res = 0;
		vector<vector<int>> dp(n, vector<int>(m));
		for(int i = n - 1; ~i; --i){
			for(int j = m - 1; ~j; --j){
				if(i == n - 1 || j == m - 1){
					if(a[i][j] == 1){
						dp[i][j] = 1;
					}
				}else{
					if(a[i][j] == 1){
						int a1 = dp[i + 1][j];
						int a2 = dp[i][j + 1];
						int a3 = dp[i + 1][j + 1];
						dp[i][j] = min(a1, min(a2,a3)) + 1;
					}
				}
				res = max(res, dp[i][j]);
			}
		}

		cout << res << '\n';
	}

	return 0;
}

DSA05020 - ĐƯỜNG ĐI NHỎ NHẤT

// created: 2023-05-26 18:17:01
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){

		int n, m;
		cin >> n >> m;
		vector<vector<int>> a(n, vector<int>(m));
		for(int i = 0; i < n; ++i){
			for(int j = 0; j < m; ++j){
				cin >> a[i][j];
			}
		}
		for(int i = m - 2; ~i; --i){
			a[n - 1][i] += a[n - 1][i + 1];
		}

		for(int i = n - 2; ~i; --i){
			a[i][m - 1] += a[i + 1][m - 1];
		}

		for(int i = n - 2; ~i; --i){
			for(int j = m - 2; ~j; --j){
				a[i][j] += min(a[i + 1][j + 1], min(a[i + 1][j], a[i][j + 1]));
			}
		}

		cout << a[0][0] << '\n';
	}

	return 0;
}


DSA05021 - CẶP SỐ

// created: 2023-05-26 18:21:33
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		int n;
		cin >> n;
		vector<pair<int,int>> a(n);

		for(int i = 0; i < n; ++i){
			cin >> a[i].first >> a[i].second;
		}

		sort(a.begin(), a.end());

		vector<int> dp(n, 0);
		dp[0] = 1;

		for(int i = 1; i < n; ++i){
			dp[i] = 1;
			for(int j = 0; j < i; ++j){
				if(a[i].first > a[j].second){
					dp[i] = max(dp[i], dp[j] + 1);
				}
			}

		}
		int res = INT_MIN;
		for(int i = 0; i < n; ++i)
			res = max(res, dp[i]);
		cout << res << '\n';
	}
	
	return 0;
}

DSA05022 - KÝ TỰ GIỐNG NHAU

// created: 2023-05-26 18:17:19
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);
	
	int t;
	cin >> t;
	
	while(t--){
		int n, x, y, z;
		cin >> n >> x >> y >> z;
		// insert, delete, copy
		// 0 -> 1 -> 2 -> 4 -> 8 -> 9
		int dp[101];
		memset(dp, 0, sizeof(dp));
		dp[1] = x;
		for(int i = 2; i <= n; ++i){
			if(i & 1)
				dp[i] = min(dp[i - 1] + x, dp[i + 1 >> 1] + z + y);
			else
				dp[i] = min(dp[i >> 1] + z, dp[i - 1] + x);
		}
		cout << dp[n] << '\n';
	}

	return 0;
}


DSA05023 - TỔNG CÁC XÂU CON

// created: 2023-05-26 18:17:40
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll mod = 1e9 + 7;
int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	int t;
	cin >> t;
	
	while(t--){
	
		string s;
		cin >> s;
			
		ll res = 0;
		int n  = s.length();
		for(int i = 0; i < n; ++i){
			string s1 = "";
			for(int j = i; ~j; --j){
				s1 = s[j] + s1;
				res += stoll(s1);
			}
		}
		cout << res << '\n';
	}
	return 0;
}

DSA05024 - TỔNG BẰNG K

// created: 2023-05-26 18:17:54
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll mod = 1e9 + 7;
int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	int t;
	cin >> t;
	
	while(t--){
		
		int n, k;
		cin >> n >> k;
		vector<ll> a(n);
		for(int i = 0; i < n; ++i){
			cin >> a[i];	
		}
		vector<ll> dp(k + 1, 0);
		dp[0] = 1;
		for(int i = 1; i <= k; ++i){
			for(int j = 0; j < n; ++j){
				if(i - a[j] >= 0){
					dp[i] += dp[i - a[j]];
					dp[i] %= mod;	
				}
			}
		}

		cout << dp[k] << '\n';
	}
	return 0;
}

DSA05025 - CON ẾCH

// created: 2023-05-26 18:12:17
// author: Nguyen Tung Duong

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll mod = 1e9 + 7;
int main()
{

	#ifndef ONLINE_JUDGE
    freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
	#endif

    ios_base::sync_with_stdio(false);
    cin.tie(0);

    int t;
    cin >> t;

    while (t--)
    {
		int n;
		cin >> n;
		ll dp[100];
		memset(dp, 0, sizeof(dp));	
		dp[1] = 1;
		dp[2] = 2;
		dp[3] = 4;

		for(int i = 4; i <= n; ++i){
			dp[i] = dp[i - 1] + dp[i - 2] + dp[i - 3];
		}
		cout << dp[n] << '\n';
	}
    return 0;
}

DSA05026 - XEM PHIM

// created: 2023-05-26 18:12:29
// author: Nguyen Tung Duong

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll mod = 1e9 + 7;
int main()
{

	#ifndef ONLINE_JUDGE
    freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
	#endif

    ios_base::sync_with_stdio(false);
    cin.tie(0);

	ll c, n;
	cin >> c >> n;
	vector<ll> a(n);

	for(int i = 0; i < n; ++i)
		cin >> a[i];
	
	ll dp[25001];
	memset(dp, 0, sizeof(dp));
	for(int i = 0; i < n; ++i){
		for(int j = c; j >= a[i]; --j){
			dp[j] = max(dp[j], dp[j - a[i]] + a[i]);
		}
	}
	cout << dp[c];

    return 0;
}

DSA05027 - CÁI TÚI

// created: 2023-05-26 18:12:41
// author: Nguyen Tung Duong

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll mod = 1e9 + 7;
int main()
{

	#ifndef ONLINE_JUDGE
    freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
	#endif

    ios_base::sync_with_stdio(false);
    cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		int n, w;
		cin >> n >> w;
		vector<int> a(n);
		vector<int> c(n);
		for(int i = 0; i < n; ++i)
			cin >> a[i];
		for(int i = 0; i < n; ++i)
			cin >> c[i];
		vector<int> dp(w + 1);
		for(int i = 0; i < n; ++i){
			for(int j = w; j >= a[i]; --j){
				dp[j] = max(dp[j], dp[j - a[i]] + c[i]);
			}
		}
		cout << dp[w] << '\n';
	}	

    return 0;
}


DSA05028 - BIẾN ĐỔI XÂU

// created: 2023-05-26 18:18:07
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);
	
	int t;
	cin >> t;
	
	while(t--){
		string s1, s2;
		cin >> s1 >> s2;
		int dp[101][101];
		memset(dp, 0, sizeof(dp));
		int n1 = s1.length();
		int n2 = s2.length();
		for(int i = 0; i <= n1; ++i){
			for(int j = 0; j <= n2; ++j){
				if(i == 0){
					dp[i][j] = j;
				}else if(j == 0){
					dp[i][j] = i;
				}else{
					if(s1[i - 1] == s2[j - 1]){
						dp[i][j] = dp[i - 1][j - 1];
					}else
						dp[i][j] = min(dp[i - 1][j], min(dp[i][j - 1], dp[i - 1][j - 1])) + 1;
				}
			}
		}
		cout << dp[n1][n2] << '\n';	
	}

	return 0;
}


DSA05029 - GIẢI MÃ


// created: 2023-05-26 18:12:56
// author: Nguyen Tung Duong

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll mod = 1e9 + 7;

int main()
{

#ifndef ONLINE_JUDGE
    freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
#endif

    ios_base::sync_with_stdio(false);
    cin.tie(0);

    int t;
    cin >> t;

    while (t--)
    {
		string s;
		cin >> s;
		int n = s.length();
		vector<int> dp(n + 1);
		dp[n] = 1;
		dp[n - 1] = s[n - 1] != '0' ? 1 : 0;
		for(int i = n - 2; i >= 0; --i){
			if(s[i] == '0'){
				dp[i] = 0;
				continue;
			}
			dp[i] += dp[i + 1];
			if(s[i] == '1' || s[i] == '2' && s[i + 1] <= '6' && s[i + 1] >= '0'){
				dp[i] += dp[i + 2];
			}
		}

		cout << dp[0] << '\n';
    }
    return 0;
}

DSA05030 - DI CHUYỂN VỀ GỐC TỌA ĐỘ

// created: 2023-05-26 18:21:50
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;


int main(){
	
	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	ll dp[26][26];

	for(int i = 0; i < 26; ++i){
		dp[0][i] = 1;
		dp[i][0] = 1;
	}
	for(int i = 1; i < 26; ++i){
		for(int j = 1; j < 26; ++j){
			dp[i][j] = dp[i - 1][j] + dp[i][j - 1];
		}

	}
	
	int t;
	cin >> t;

	while(t--){
		ll a, b;
		cin >> a >> b;	
		cout << dp[a][b] << '\n';
	}

	return 0;
}



DSA05031 - TỔNG BÌNH PHƯƠNG

// created: 2023-05-26 18:18:20
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		int n;
		cin >> n;
		vector<int> dp(n + 1);
		iota(dp.begin(), dp.end(), 0);
		for(int i = 1; i <= n; ++i){
			for(int j = 1; j * j <= i; ++j){
				dp[i] = min(dp[i], dp[i - j * j] + 1);
			}
		}
		cout << dp[n] << '\n';
	}
	return 0;	
}



DSA05032 - XÂU ĐỐI XỨNG 1

// created: 2023-05-26 18:22:02
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const int mod = 1e9 + 7;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		string s;
		cin >> s;
		int n = s.length();
		int dp[101][101] = {};
		for(int i = n - 2; ~i; --i){
			for(int j = i + 1; j < n; ++j){
				if(j == i + 1){
					if(s[i] != s[j]) dp[i][j] = 1;
				}else{
					if(s[i] == s[j])
						dp[i][j] = dp[i + 1][j - 1];
					else
						dp[i][j] = min(dp[i + 1][j], dp[i][j - 1]) + 1;
				}
			}
		}
		cout << dp[0][n - 1] << '\n';
	}

	return 0;
}




DSA05033 - XÂU ĐỐI XỨNG 2

// created: 2023-05-26 18:22:12
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const int mod = 1e9 + 7;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		string s;
		cin >> s;
		int n = s.length();
		int dp[101][101] = {};
		for(int i = n - 2; ~i; --i){
			for(int j = i + 1; j < n; ++j){
				if(j == i + 1){
					if(s[i] != s[j]) dp[i][j] = 1;
				}else{
					if(s[i] == s[j])
						dp[i][j] = dp[i + 1][j - 1];
					else
						dp[i][j] = min(dp[i + 1][j], dp[i][j - 1]) + 1;
				}
			}
		}
		cout << dp[0][n - 1] << '\n';
	}

	return 0;
}




DSA05034 - TỔNG SỐ CÁCH DI CHUYỂN


// created: 2023-05-26 18:13:11
// author: Nguyen Tung Duong

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll mod = 1e9 + 7;
int main()
{

	#ifndef ONLINE_JUDGE
    freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
	#endif

    ios_base::sync_with_stdio(false);
    cin.tie(0);

    int t;
    cin >> t;

    while (t--)
    {
		int n, k;	
    	cin >> n >> k;
		ll dp[100001];
		memset(dp, 0, sizeof(dp));
		dp[0] = 1;
		for(int i = 1; i <= n; ++i){
			for(int j = i - min(i, k); j < i; ++j){
				dp[i] += dp[j];
				dp[i] %= mod;
			}
		}	
		cout << dp[n] << '\n';
	}
    return 0;
}



DSA05035 - CHỮ SỐ SẮP XẾP TĂNG DẦN

// created: 2023-05-26 18:18:37
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const int mod = 1e9 + 7;
int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		int n;
		cin >> n;
		int dp[101][10];
		memset(dp, 0, sizeof(dp));
		for(int i = 0; i <= 9; ++i){
			dp[1][i] = 1;
		}
		for(int i = 2; i <= n; ++i){
			for(int j = 0; j <= 9; ++j){
				for(int k = 0; k <= j; ++k){
					dp[i][j] += dp[i - 1][k];
					dp[i][j] %= mod;
				}
			}
		}
		int res = 0;
		for(int i = 0; i <= 9; ++i){
			res += dp[n][i];
			res %= mod;
		}
		cout << res << '\n';
	}
	return 0;	
}




DSA05036 - TĂNG - GIẢM

// created: 2023-05-26 18:18:49
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		int n;
		cin >> n;

		vector<pair<double, double>> a(n);
		for(int i = 0; i < n; ++i){
			cin >> a[i].first >> a[i].second;
		}

		int dp[1000] = {};
		dp[0] = 1;
		int res = 1;
		for(int i = 1; i < n; ++i){
			dp[i] = 1;
			for(int j = 0; j < i; ++j){
				if(a[j].first < a[i].first && a[j].second > a[i].second){
					dp[i] = max(dp[i], dp[j] + 1);
				}
			}
			res = max(res, dp[i]);
		}
		cout << res << '\n';
	}

	return 0;
}


DSA05037 - CHỮ SỐ SẮP XẾP TĂNG DẦN

// created: 2023-05-26 18:19:02
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const int mod = 1e9 + 7;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		int n;
		cin >> n;

		int dp[101][10] = {};
		for(int i = 0; i <= 9; ++i){
			dp[1][i] = 1;
		}
		for(int i = 2; i <= n; ++i){
			for(int j = 0; j <= 9; ++j){
				for(int k = 0; k <= j; ++k){
					dp[i][j] += dp[i - 1][k];
					dp[i][j] %= mod;
				}
			}	
		}	
		int res = 0;
		for(int i = 0; i <= 9; ++i){
			res += dp[n][i];
			res %= mod;
		}
		cout << res << '\n';
	}

	return 0;
}


DSA05038 - DÃY CON TĂNG DÀI NHẤT 2 CHIỀU

// created: 2023-05-26 18:19:17
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

vector<map<int,int>> dp(100001);

void upd(int idx, int x, int y){
	map<int,int>::iterator it = dp[idx].lower_bound(x);
	while(it != dp[idx].end()){
		if(it->second <= y)
			break;
		dp[idx].erase(it);	
		it = dp[idx].lower_bound(x);
	}
	dp[idx].insert({x,y});
}

bool check(int m, int x, int y){
	auto it = dp[m].lower_bound(x);	
	if(it == dp[m].begin()) return false;
	--it;
	return y > it->second;
}

int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int n;
	cin >> n;

	int res = 0;
	for(int i = 0; i < n; ++i){
		int x, y;
		cin >> x >> y;
		int l = 1;
		int r = res;
		int tmp = 0;
		while(l <= r){
			int m = l + r >> 1;
			if(check(m, x, y)){
				l = m + 1;
				tmp = max(m, tmp);
			}else
				r = m - 1;
		}
		upd(tmp + 1, x, y);
		res = max(res, tmp + 1);
	}
	cout << res;
	return 0;
}


DSA05039 - TỔNG CHỮ SỐ

// created: 2023-05-26 18:22:23
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

bool cmp(string &s1, string &s2){
	if(s1.length() != s2.length()) return s1.length() < s2.length();
	return s1 < s2;
}

string make_str(string s, int k){
	string res;
	if(s == "0")
		res = to_string(k);
	else
		res = s + to_string(k);
	sort(res.begin(), res.end());
	return res;
}

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);
	
	int t;
	cin >> t;
	while(t--){
			
		int a, b;
		cin >> a >> b;
		string INF(100, '9');
		vector<vector<string>> dp(a + 1, vector<string>(b + 1, INF));
		dp[0][0] = "0";
		for(int i = 1; i <= a; ++i){
			for(int j = 1; j <= b; ++j){
				for(int k = 1; k * k <= min(i * i, min(j, 81)); ++k){
					if(dp[i - k][j - k * k] != INF){
						string tmp = make_str(dp[i - k][j - k * k], k);

						if(cmp(tmp, dp[i][j]))
							dp[i][j] = tmp;
					}
				}
			}
		}	
		if(dp[a][b] == INF)
			cout << -1;
		else
			cout << dp[a][b];
		cout << '\n';
	}

	return 0;
}


DSA05040 - DÃY TAM GIÁC DÀI NHẤT

// created: 2023-05-26 18:19:32
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);
	
	int t;
	cin >> t;

	while(t--){
		int n;
		cin >> n;
		vector<int> a(n);
		for(int i = 0; i < n; ++i)
			cin >> a[i];
			
		vector<int> b;
		bool check1 = true;
		bool check2 = true;
		bool check3 = true;
		for(int i = 0; i < n - 1; ++i){
			if(a[i] < a[i + 1]){
				b.push_back(1);
				check1 = false;
			}else if(a[i] > a[i + 1]){
				b.push_back(-1);
				check2 = false;
			}else{
				b.push_back(0);
				check3 = false;
			}
		}
		int res = 0;
		if(check3){
			if(check1 || check2){
				cout << n << '\n';
				continue;
			}
		}
		for(int i = 0; i < n - 2; ++i){
			if(b[i] == 1 && b[i + 1] == -1){
				int l = i;
				int r = i + 1;
				while(b[l] == 1 && l >= 0)
					--l;
				while(b[r] == -1 && r < n - 2)
					++r;
				if(b[l] != 1) ++l;
				if(b[r] != -1) --r;
				res = max(res, r - l + 2);
			}
		}	
		cout << res << '\n';
	}
	return 0;
}


DSA05041 - BIẾN ĐỔI VỀ XÂU ĐỐI XỨNG


// created: 2023-05-26 18:19:45
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const int mod = 1e9 + 7;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		string s;
		cin >> s;
		int n = s.length();
		int dp[101][101] = {};
		for(int i = n - 2; ~i; --i){
			for(int j = i + 1; j < n; ++j){
				if(j == i + 1){
					if(s[i] != s[j]) dp[i][j] = 1;
				}else{
					if(s[i] == s[j])
						dp[i][j] = dp[i + 1][j - 1];
					else
						dp[i][j] = min(dp[i + 1][j], dp[i][j - 1]) + 1;
				}
			}
		}
		cout << dp[0][n - 1] << '\n';
	}

	return 0;
}


DSA05042 - DÃY CON LIÊN TIẾP TỔNG BẰNG K

// created: 2023-05-26 18:20:04
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;


int main()
{

	ios_base::sync_with_stdio(false);
	cin.tie(0);
	int t;
	cin >> t;

	while(t--){
		int n;
		ll k;
		cin >> n >> k;	
		vector<ll> a(n + 1);
		vector<ll> pref(n + 1);
		for(int i = 1; i <= n; ++i){
			cin >> a[i];
			pref[i] = pref[i - 1] + a[i];
		}
		bool flag = false;
		unordered_set<ll> s;	
		for(int i = 0; i <= n; ++i){
			if(s.find(pref[i] - k) != s.end()){
				flag = true;
			}
			s.insert(pref[i]);
		}
		cout << (flag ? "YES" : "NO") << '\n';
	}	
}

DSA05043 - SỐ THUẬN NGHỊCH

// created: 2023-05-26 18:20:19
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int longestPalindrome(string s) {
    int left, right;
    int count;
	int max = 0;
	int left_ans, right_ans;
	
	for(int i = 0; i < s.length(); i++){
	   left = i;
	   right = i;
	while(left >= 0 && right < s.length() && s[left] == s[right]){
		count = right - left + 1;
		right++;
		left--;
}
		if(count > max){
			max = count;
			left_ans = left + 1;
			right_ans = right - 1;
		}
		}
	for(int i = 0; i < s.length() - 1; i++){
		left = i;
		right = i + 1;
		
		while(left >= 0 && right < s.length() && s[left] == s[right]){
			count = right - left + 1;
			right++;
			left--;
			}
		if(count > max){
			max = count;
			left_ans = left + 1;
			right_ans = right - 1;
			}
		}
	string ans = "";
	for(int i = left_ans; i <= right_ans; i++){
		ans += s[i];
		}
	
	return ans.length();
	
}
int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		string s;
		cin >> s;
		cout << longestPalindrome(s) << '\n';
	}

	return 0;
}

DSA05045 - BÀI TOÁN CÁI TÚI KHÔNG NGUYÊN

// created: 2023-05-26 18:23:05
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const int mod = 1e9 + 7;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		int n;
		double w;
		cin >> n >> w;
		vector<pair<double, double>> a(n);
		for(int i = 0; i < n; ++i)
			cin >> a[i].first >> a[i].second;
		sort(a.begin(), a.end(), [](pair<double, double> p1, pair<double, double> p2){
			return p1.first / p1.second > p2.first / p2.second;
		});

		double res = 0;
		for(int i = 0; i < n; ++i){
			if(w <= a[i].second){
				res += a[i].first * w / a[i].second;
				break;
			}else{
				res += a[i].first;
				w -= a[i].second;
			}
		}
		cout << fixed << setprecision(2) << res << '\n';
	}

	return 0;
}

DSA05046 - LŨY THỪA BẬC K

// created: 2023-05-26 18:22:39
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

ll C[1004][1004];

ll MulMod(ll a, ll b){
	return (a % mod * b % mod) % mod;
}

ll Pow(ll n, ll k){
	ll res = 1;
	while(k){
		if(k & 1){
			res *= n;
			res %= mod;
		}
		n *= n;
		n %= mod;
		k >>= 1;
	}
	return res;
}

ll inverseMod(ll n){
	return Pow(n, mod - 2);
}

int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	C[0][0] = 1;

	for(int i = 1; i <= 1001; ++i){
		for(int j = 0; j <= i; ++j){
			C[i][j] = C[i - 1][j] + C[i - 1][j - 1];
			C[i][j] %= mod;
		}
	}

	int t;
	cin >> t;
	
	while(t--){
		ll n, k;
		cin >> n >> k;
		
		vector<ll> dp(k + 1);
		dp[0] = n % mod;
		for(int i = 1; i <= k; ++i){
			dp[i] = Pow((n + 1) % mod, i + 1);
			dp[i] = (dp[i] - 1 + mod) % mod;
			for(int j = 0; j <= i - 1; ++j){
				dp[i] = dp[i] - MulMod(C[i + 1][j], dp[j]) + mod;
				dp[i] %= mod;
			}
			dp[i] = MulMod(dp[i], inverseMod(i + 1));
		}	
		cout << dp[k] << '\n';
		
	}
	return 0;
}



DSA05047 - CHỌN Ô

// created: 2023-05-26 18:20:30
// author: Nguyen Tung Duong

#include<iostream>
#include<map>
#include<vector>
#include<climits>
#include<algorithm>
#include<stack>
#include<queue>
#include<cstring>
using namespace std;
typedef long long ll;
int cnt = 0;
int n;


const ll mod = 1e9 + 7;
int main()
{


    ios_base::sync_with_stdio(false);
    cin.tie(0);

    int t;
    cin >> t;

    while (t--)
    {
    int n;
	cin >> n;

	int a[4][10000];

	int res = INT_MIN;
	
	for(int i = 0; i < 4; ++i){
		for(int j = 0; j < n; ++j){
			cin >> a[i][j];
			res = max(a[i][j], res);
		}
	}
	int ans = 0;

// 0000, 0001, 0010, 0011, 0100, 0101, 0110, 0111, 1000, 1001, 1010, 1011, 1100, 1101, 1110, 1111

	bool ok[16] = {true, true, true, false, true, true, false, false, true, true, true, false, false, false, false, false};
	int dp[10000][16];
	memset(dp, 0, sizeof(dp));
	for(int i = 0; i < n; ++i){
		for(int j = 0; j < 16; ++j){
			if(ok[j]){
				
				int s = 0;
				int tmp = j;
				for(int k = 0; k < 4; ++k){
					if(tmp & 1)
						s += a[k][i];
					tmp >>= 1;
				}
		
				if(i == 0){
					dp[i][j] = max(dp[i][j], s);
					continue;
				}
				for(int k = 0; k < 16; ++k){

					if(ok[k] && (k & j) == 0){
						dp[i][j] = max(dp[i][j], dp[i - 1][k] + s);
						ans = max(ans, dp[i][j]);
					}
				}

			}
		}
	}

	
	if(ans)
		cout << ans;
	else
		cout << res;

	cout << '\n';
	}	
    return 0;

}


DSAKT053 - SỐ NGUYÊN LỚN

// created: 2023-05-26 18:13:31
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll mod = 1e9 + 7;


int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		string s1, s2;
		cin >> s1 >> s2;
		int n1 = s1.length();
		int n2 = s2.length();
		int dp[1001][1001];
		for(int i = 1; i <= n1; ++i){
			for(int j = 1; j <= n2; ++j){
				if(s1[i - 1] == s2[j - 1]){
					dp[i][j] = dp[i - 1][j - 1] + 1;
				}else
					dp[i][j] = max(dp[i - 1][j], dp[i][j - 1]);
			}
		}
		cout << dp[n1][n2] << '\n';

	}
	return 0;
}

DSAKT055 - BÀI TOÁN CÁI TÚI 0-1

// created: 2023-05-26 18:13:50
// author: Nguyen Tung Duong

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll mod = 1e9 + 7;
int main()
{

	#ifndef ONLINE_JUDGE
    freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
	#endif

    ios_base::sync_with_stdio(false);
    cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		int n, w;
		cin >> n >> w;
		vector<int> a(n);
		vector<int> c(n);
		for(int i = 0; i < n; ++i)
			cin >> a[i];
		for(int i = 0; i < n; ++i)
			cin >> c[i];
		vector<int> dp(w + 1);
		for(int i = 0; i < n; ++i){
			for(int j = w; j >= a[i]; --j){
				dp[j] = max(dp[j], dp[j - a[i]] + c[i]);
			}
		}
		cout << dp[w] << '\n';
	}	

    return 0;
}

DSAKT110 - NHÀ KHÔNG KỀ NHAU

// created: 2023-05-26 18:14:05
// author: Nguyen Tung Duong

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll mod = 1e9 + 7;
int main()
{

	#ifndef ONLINE_JUDGE
    freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
	#endif

    ios_base::sync_with_stdio(false);
    cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		int n;
		cin >> n;
		vector<ll> a(n);
		for(int i = 0; i < n; ++i){
			cin >> a[i];
		}	
		vector<ll> dp(n);
		dp[0] = a[0];
		dp[1] = max(a[0], a[1]);
		for(int i = 2; i < n; ++i){
			dp[i] = max(dp[i - 1], a[i] + dp[i - 2]);
		}
		cout << dp[n - 1] << '\n';
	}	

    return 0;
}

DSA04001 - LŨY THỪA

// created: 2023-05-26 18:02:02
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

ll Pow(ll n, ll k){

	ll res = 1;
	while(k){
		if(k & 1){
			res *= n;
			res %= mod;
		}
		n *= n;
		n %= mod;
		k/=2;
	}
	return res;
}

int main(){
	
	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		ll n, k;
		cin >> n >> k;
		cout << Pow(n, k) << '\n';
	}

	return 0;
}


DSA04002 - LŨY THỪA ĐẢO

// created: 2023-05-26 18:02:30
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;
/*
ll Pow(ll n, ll k){

	ll res = 1;
	while(k){
		if(k & 1){
			res *= n;
			res %= mod;
		}
		n *= n;
		n %= mod;
		k /= 2;
	}
	return res;
}
*/

ll Pow(ll n, ll k){
	if(k == 0) return 1;
	if(k == 1) return n;
	ll tmp = Pow(n, k / 2);
	if(k & 1)
		return tmp % mod * tmp % mod * n % mod;
	return tmp % mod * tmp % mod;
}
int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		string n;
		cin >> n;
		string s = n;
		reverse(s.begin(), s.end());
		cout << Pow(stoll(n), stoll(s)) % mod<< endl;
	
	}
	return 0;
}

DSA04003 - ĐẾM DÃY

// created: 2023-05-26 18:02:49
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll mod = 123456789;

ll Pow(ll n, ll k){
	ll res = 1;
	while(k){
		if(k&1){
			res *= n;
			res %= mod;
		}
		n *= n;
		n %= mod;
		k >>= 1;
	}
	return res;
}

int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		ll n;
		cin >> n;
		cout << Pow(2, n - 1) << '\n';
	}	
	return 0;
}

DSA04004 - GẤP ĐÔI DÃY SỐ


// created: 2023-05-26 18:03:05
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		ll n, k;
		cin >> n >> k;
		ll tmp = 1;
		for(int i = 1; i <= 50; ++i){
			if((k - tmp) % (2 * tmp) == 0){
				cout << i << '\n';
				break;
			}
			tmp <<= 1;
		}
	}	
	return 0;
}


DSA04005 - DÃY XÂU FIBONACI

// created: 2023-05-26 18:03:23
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	ll fib[93];
	fib[1] = 1;
	fib[2] = 1;
	for(int i = 3; i <= 92; ++i){
		fib[i] = fib[i - 1] + fib[i - 2];
	}
	int t;
	cin >> t;

	while(t--){
		ll n, k;
		cin >> n >> k;
		while(n > 2){
			if(k <= fib[n - 2]){
				n -= 2;
			}else{
				k -= fib[n - 2];
				n -= 1;
			}
		}
		if(n == 1)
			cout << 'A';
		else if(n == 2)
			cout << 'B';
		cout << '\n';
	}	
	return 0;
}


DSA04006 - ĐẾM SỐ BÍT 1


// created: 2023-05-26 18:09:10
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

ll n, l, r;
vector<ll> pos;

ll solve(ll k, ll N = n, int idx = pos.size() - 1){
	if(k & 1) return 1;
	if(k < pos[idx]) 
		return solve(k, N / 2, idx - 1);
	if(k == pos[idx])
		return N % 2;
	return solve(pos[idx] * 2 - k, N / 2, idx - 1);
}

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		pos.clear();
		cin >> n >> l >> r;

		ll tmp = n;
		ll x = 2;
		while(tmp >>= 1){
			pos.push_back(x);
			x <<= 1;
		}

		ll cnt = 0;
		for(ll i = l; i <= r; ++i){
			cnt += solve(i);
		}
		cout << cnt << '\n';
	}

	return 0;
}

DSA04007 - HỆ CƠ SỐ K

// created: 2023-05-26 18:07:11
// author: Nguyen Tung Duong

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

int main()
{

	#ifndef ONLINE_JUDGE
    freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
	#endif

    ios_base::sync_with_stdio(false);
    cin.tie(0);
	
	int t;
	cin >> t;

	while(t--){
	
		int k;
		cin >> k;
		string a,b;
		cin >> a >> b;
		vector<int> n1, n2;
		for(int i = 0; i < a.length(); ++i){
			n1.push_back(a[i] - '0');
		}	
		for(int j = 0; j < b.length(); ++j){
			n2.push_back(b[j] - '0');
		}
		int k1 = n1.size() - 1;
		int k2 = n2.size() - 1;
		int mem = 0;
		vector<int> res;
		while(k1 >= 0 && k2 >= 0){
			int tmp = n1[k1--] + n2[k2--] + mem;
			if(tmp >= k){
				mem = 1;
				tmp %= k;
			}else
				mem = 0;
			res.push_back(tmp);
		}

		while(k1 >= 0){
			int tmp = n1[k1--] + mem;
			if(tmp >= k){
				mem = 1;
				tmp %= k;
			}else
				mem = 0;
			res.push_back(tmp);
		}
		while(k2 >= 0){
			int tmp = n2[k2--] + mem;
			if(tmp >= k){
				mem = 1;
				tmp %= k;
			}else
				mem = 0;
			res.push_back(tmp);
		}
		if(mem == 1)
			res.push_back(1);
		for(int i = res.size() - 1; i >= 0; --i){
			cout << res[i];
		}
		cout << '\n';
	}
	
    return 0;
}

DSA04008 - SỐ FIBONACCI THỨ N

// created: 2023-05-26 18:07:24
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

unordered_map<ll, ll> f;

ll fib(ll n){
	if(f.find(n) != f.end())
		return f[n] % mod;
	if(n == 1 || n == 2) return 1;
	return f[n] = (fib((n - 1) / 2) * fib(n / 2) % mod + fib((n + 1) / 2) * fib((n + 2) / 2) % mod) % mod; 	
}

int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		ll n; 
		cin >> n;
		cout << fib(n) << '\n';
	}
	return 0;
}


DSA04009 - LŨY THỪA MA TRẬN 1


// created: 2023-05-26 18:07:38
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

ll n, k;
const ll mod = 1e9 + 7;
vector<vector<ll>> a;
vector<vector<ll>> Mul(vector<vector<ll>> &v1, vector<vector<ll>> &v2){
	
	vector<vector<ll>> res(n, vector<ll>(n));
	for(int i = 0; i < n; ++i){
		for(int j = 0; j < n; ++j){
			for(int k = 0; k < n; ++k){
				res[i][j] += v1[i][k] * v2[k][j];
				res[i][j] %= mod;
			}
		}
	}
	return res;
}

vector<vector<ll>> Pow(){
	vector<vector<ll>> res(n, vector<ll>(n));
	for(int i = 0; i < n; ++i){
		res[i][i] = 1;
	}
	while(k){
		if(k & 1){
			res = Mul(res, a);
		}
		a = Mul(a, a);
		k >>= 1;
	}
	return res;
}

int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		a.resize(0,vector<ll>(0));
		cin >> n >> k;
		a.resize(n, vector<ll>(n));
		for(int i = 0; i < n; ++i){
			for(int j = 0; j < n; ++j){
				cin >> a[i][j];
			}
		}
		vector<vector<ll>> res = Pow();

		for(int i = 0; i < n; ++i){
			for(int j = 0; j < n; ++j){
				cout << res[i][j] << ' ';
			}
			cout << '\n';
		}
	}	
	return 0;
}

DSA04010 - DÃY CON LIÊN TIẾP CÓ TỔNG LỚN NHẤT


// created: 2023-05-26 18:03:36
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		int n;
		cin >> n;		
		vector<int> a(n);
		for(int i = 0; i < n; ++i)
			cin >> a[i];
		int res = INT_MIN;
		int tmp = 0;
		for(int i = 0; i < n; ++i){
			tmp += a[i];
			res = max(res, tmp);
			if(tmp < 0)
				tmp = 0;
		}
		cout << res << '\n';
	}	
	return 0;
}

DSA04011 - TÍCH HAI SỐ NHỊ PHÂN


// created: 2023-05-26 18:07:50
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;


int main()
{

	ios_base::sync_with_stdio(false);
	cin.tie(0);
	int t;
	cin >> t;

	while(t--){
		string s1 ,s2;
		cin >> s1 >> s2;
		ll n1 = 0, n2 = 0;
		ll tmp = 1;
		for(int i = s1.length() - 1; ~i; --i){
			if(s1[i] == '1')
				n1 += tmp;
			tmp <<= 1;
		}
		tmp = 1;
		for(int i = s2.length() - 1; ~i; --i){
			if(s2[i] == '1')
				n2 += tmp;
			tmp <<= 1;
		}	
		cout << n1 * n2 << '\n';
	}	
}


DSA04012 - TÍCH ĐA THỨC

// created: 2023-05-26 18:08:10
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;
	
	while(t--){
		int n, m;
		cin >> n >> m;
		vector<int> a(n), b(m);
		for(int i = 0; i < n; ++i)
			cin >> a[i];
		for(int i = 0; i < m; ++i)
			cin >> b[i];
		vector<int> res(n + m);
		for(int i = 0; i < n; ++i){
			for(int j = 0; j < m; ++j){
				res[i + j] += a[i] * b[j];
			}
		}
		for(int i = 0; i < n + m - 1; ++i){
			cout << res[i] << ' ';
		}
		cout << '\n';
	}

	return 0;
}

DSA04013- SẮP XẾP KANGURU

// created: 2023-05-26 18:08:23
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);
	
	int t;
	cin >> t;
	while(t--){
		int n;
		cin >> n;		
		vector<int> a(n);
		for(int i = 0; i < n; ++i) cin >> a[i];
		sort(a.begin(), a.end());
		int l = n / 2 - 1;
		int r = n - 1;
		int res = n;
		while(~l){
			if(a[l] * 2 <= a[r]){
				res--;
				l--;
				r--;
			}else
				l--;
		}	
		cout << res << '\n';
	}

	return 0;
}


DSA04014 - CẶP NGHỊCH THẾ


// created: 2023-05-26 18:08:37
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const int mxN = 1e5 + 5;
ll fen[mxN];

void compress(vector<int>& a){
	int n = a.size();
	vector<pair<int, int>> pairs(n);
	for(int i = 0; i < n; ++i) {
		pairs[i] = {a[i], i};
	}
	sort(pairs.begin(), pairs.end());
	int nxt = 1;
	for(int i = 0; i < n; ++i) {
		if(i > 0 && pairs[i-1].first != pairs[i].first) nxt++;
		a[pairs[i].second] = nxt;		
	}	
}

void upd(int i){
	for(; i < mxN; i += i & -i) fen[i]++;
}

ll qry(int i){
	ll res = 0;
	for(;i > 0; i -= i & -i) res += fen[i];
	return res;
}

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;
	while(t--){
		memset(fen, 0, sizeof(fen));
		int n;
		cin >> n;
		vector<int> a(n);
		for(int i = 0; i < n; ++i)
			cin >> a[i];
		compress(a);
		ll cnt = 0;
		for(int i = n - 1; i >= 0; --i){
			cnt += qry(a[i] - 1);
			upd(a[i]);
		}
		cout << cnt << '\n';
		
	}
	return 0;
}

DSA04015 - TÍNH FLOOR(X)

// created: 2023-05-26 18:03:50
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		int n, k;
		cin >> n >> k;	
		vector<int> a(n);
		for(int i = 0; i < n; ++i){
			cin >> a[i];
		}
		auto it = upper_bound(a.begin(), a.end(), k);
		if(it == a.begin()){
			cout << -1;
		}else{
			cout << it - a.begin();
		}
		cout << '\n';
	}	
	return 0;
}


DSA04016 - PHẦN TỬ THỨ K

// created: 2023-05-26 18:04:06
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		int n, m, k;
		cin >> n >> m >> k;
		vector<int> a(n + m);	
		
		for(int i = 0; i < n + m; ++i){
			cin >> a[i];
		}
		sort(a.begin(), a.end());
		cout << a[k - 1] << '\n';
	}	
	return 0;
}


DSA04017 - PHẦN TỬ KHÁC NHAU

// created: 2023-05-26 18:04:18
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		int n;
		cin >> n;
			
		vector<int> a(n), b(n - 1);
		for(int i = 0; i < n; ++i)
			cin >> a[i];
		for(int i = 0; i < n - 1; ++i)
			cin >> b[i];
		bool flag= true;
		for(int i = 0; i < n - 1; ++i){
			if(a[i] != b[i]){
				cout << i + 1;
				flag = false;
				break;
			}
		}
		if(flag){
			cout << n;
		}
		cout << '\n';
	}	
	return 0;
}

DSA04018 - ĐẾM SỐ 0

// created: 2023-05-26 18:04:29
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		
		int n;
		cin >> n;
		vector<int> a(n);
		for(int i = 0; i < n; ++i)
			cin >> a[i];
		auto it = upper_bound(a.begin(), a.end(), 0);
		if(it == a.end()){
			cout << n;
		}else{
			cout << it - a.begin();
		}
		cout << '\n';
	}	
	return 0;
}


DSA04019 - CẶP ĐIỂM GẦN NHẤT

// created: 2023-05-26 18:09:25
// author: Nguyen Tung Duong


#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

struct Point{
	ll x, y;

	bool operator<(const Point &p){
		if(x != p.x) return x < p.x;
		return y < p.y;
	}
};

ll dist(Point a, Point b){
	return (a.x - b.x) * (a.x - b.x) + (a.y - b.y) * (a.y - b.y);
}

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		int n;
		cin >> n;
		vector<Point> points(n);
		for(int i = 0; i < n; ++i)
			cin >> points[i].x >> points[i].y;
		
		auto cmp = [](Point p1, Point p2){
			if(p1.y != p2.y) return p1.y < p2.y;
			return p1.x < p2.x;
		};
		set<Point, decltype(cmp)> st(cmp);
		
		sort(points.begin(), points.end());		
		ll res = dist(points[0], points[1]);
		for(Point p : points){
			
			ll d = sqrt(res);
			Point tmp = {-10000, p.y - d};	
			while(true){
				auto it = st.upper_bound(tmp);
				if(it == st.end()) break;
				tmp = *it;
				if(tmp.y > p.y + d) break;
				if(tmp.x < p.x - d){
					st.erase(it);
					continue;
				}
				res = min(res, dist(tmp, p));
			}
			st.insert(p);
		}	
		cout << fixed << setprecision(6) << sqrt(res) << '\n';
		
	}

	return 0;
}

DSA04020 - TÌM KIẾM NHỊ PHÂN

// created: 2023-05-26 18:04:41
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		
		int n, k;
		cin >> n  >> k;
		vector<int> a(n);
		for(int i = 0; i < n; ++i)
			cin >> a[i];
		auto it = lower_bound(a.begin(), a.end(), k);
		if(it == a.end()){
			cout << "NO";
		}else{
			if(*it == k){
				cout << it - a.begin() + 1;
			}else{
				cout << "NO";
			}
		}
		
		cout << '\n';
	}	
	return 0;
}


DSA04021 - DÃY XÂU NHỊ PHÂN

// created: 2023-05-26 18:04:58
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	ll fib[93];
	fib[1] = 1;
	fib[2] = 1;
	for(int i = 3; i <= 92; ++i){
		fib[i] = fib[i - 1] + fib[i - 2];
	}
	int t;
	cin >> t;

	while(t--){
		ll n, k;
		cin >> n >> k;
		while(n > 2){
			if(k <= fib[n - 2]){
				n -= 2;
			}else{
				k -= fib[n - 2];
				n -= 1;
			}
		}
		if(n == 1)
			cout << '0';
		else if(n == 2)
			cout << '1';
		cout << '\n';
	}	
	return 0;
}


DSA04022 - KÝ TỰ THỨ K TRONG XÂU

// created: 2023-05-26 18:06:08
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		ll n, k;
		cin >> n >> k;
		ll m = 1;	
		ll tmp = 1;
		for(int i = 1; i <= 50; ++i){
			if((k - tmp) % (2 * tmp) == 0){
				cout << (char) (i + 'A' - 1) << '\n';
				break;
			}
			tmp <<= 1;
		}
	}	
	return 0;
}


DSA04023 - KHOẢNG CÁCH NHỎ HƠN K

// created: 2023-05-26 18:08:58
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main()
{

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;
	
	while(t--){
		int n, k;
		cin >> n >> k;
		vector<int> a(n);
		for(int i = 0; i < n; ++i) cin >> a[i];
		sort(a.begin(), a.end());
		ll res = 0;
		for(int i = 0; i < n - 1; ++i){
			int l = i + 1;
			int r = n - 1;
			int idx = i;
			while(l <= r){
				int m = l + r >> 1;
				if(a[m] - a[i] < k){
					idx = m;
					l = m + 1;
				}else
					r = m - 1;
			}
			res += idx - i;
		}
		cout << res << '\n';
	}	

	return 0;
}



DSA04024 - LŨY THỪA MA TRẬN 2

// created: 2023-05-26 18:06:29
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

ll n, k;
const ll mod = 1e9 + 7;
vector<vector<ll>> a;
vector<vector<ll>> Mul(vector<vector<ll>> &v1, vector<vector<ll>> &v2){
	
	vector<vector<ll>> res(n, vector<ll>(n));
	for(int i = 0; i < n; ++i){
		for(int j = 0; j < n; ++j){
			for(int k = 0; k < n; ++k){
				res[i][j] += v1[i][k] * v2[k][j];
				res[i][j] %= mod;
			}
		}
	}
	return res;
}

vector<vector<ll>> Pow(){
	vector<vector<ll>> res(n, vector<ll>(n));
	for(int i = 0; i < n; ++i){
		res[i][i] = 1;
	}
	while(k){
		if(k & 1){
			res = Mul(res, a);
		}
		a = Mul(a, a);
		k >>= 1;
	}
	return res;
}

int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		a.resize(0,vector<ll>(0));
		cin >> n >> k;
		a.resize(n, vector<ll>(n));
		for(int i = 0; i < n; ++i){
			for(int j = 0; j < n; ++j){
				cin >> a[i][j];
			}
		}
		vector<vector<ll>> res = Pow();
		ll ans = 0;
		for(int i = 0; i < n; ++i){
			ans += res[i][n - 1];
			ans %= mod;
		}
		cout << ans << '\n';

	}	
	return 0;
}



DSA04025 - DÃY SỐ VÔ HẠN

// created: 2023-05-26 18:06:44
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

unordered_map<ll, ll> f;

ll fib(ll n){
	if(f.find(n) != f.end())
		return f[n] % mod;
	if(n == 1 || n == 2) return 1;
	return f[n] = (fib((n - 1) / 2) * fib(n / 2) % mod + fib((n + 1) / 2) * fib((n + 2) / 2) % mod) % mod; 	
}

int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		f.clear();
		ll n; 
		cin >> n;
		cout << fib(n) << '\n';
	}
	return 0;
}



DSA04030 - SỐ TRIBONACCI

// created: 2023-05-26 18:09:50
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
ll n;
vector<vector<ll>> a = {{1,1,1,1}, {0,1,1,1}, {0,1,0,0}, {0,0,1,0}};
const ll mod = 1e15 + 7;

ll MulMod(ll a, ll b){
	ll res = 0;
	while(b){
		if(b & 1){
			res += a;
			res %= mod;
		}
		a *= 2;
		a %= mod;
		b /= 2;
	}
	return res;
}

vector<vector<ll>> Mul(vector<vector<ll>> &v1, vector<vector<ll>> &v2){
	vector<vector<ll>> res(4, vector<ll>(4));
	for(int i = 0; i < 4; ++i){
		for(int j = 0; j < 4; ++j){
			ll tmp = 0;
			for(int k = 0; k < 4; ++k){
				tmp = tmp % mod + MulMod(v1[i][k],v2[k][j]);
				tmp %= mod;
			}
			res[i][j] = tmp;
		}
	}
	return res;
}

vector<vector<ll>> Pow(vector<vector<ll>> v, ll k){
	vector<vector<ll>> res = {{1,0,0,0},{0,1,0,0},{0,0,1,0},{0,0,0,1}};
	while(k){
		if(k & 1){
			res = Mul(res, v);
		}
		k /= 2;
		v = Mul(v, v);
	}
	return res;
}

void solve(){
	vector<vector<ll>> res = Pow(a, n);
	cout << res[0][2] << '\n';
}

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		cin >> n;
		solve();
	}

	return 0;
}




DSA04035 - TÍNH LŨY THỪA


// created: 2023-05-26 18:06:59
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll mod = 1e9 + 7;

ll Pow(ll n, ll k){
	ll res = 1;
	while(k){
		if(k & 1){
			res *= n;
			res %= mod;
		}
		n *= n;
		n %= mod;
		k >>= 1;
	}
	return res;
}

int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	ll a, b;
	while(cin >> a >> b){
		if(a == 0 && b == 0)
			break;
		cout << Pow(a, b) << '\n';
	}
	return 0;
}

DSA07001 - NGĂN XẾP 1

// created: 2023-05-26 18:36:19
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;
int main(){
	
	vector<int> st;
	string s;
	while(getline(cin, s)){
		stringstream ss(s);
		string tmp;
		vector<string> a;
		while(ss >> tmp){
			a.push_back(tmp);
		}
		if(a.size() == 1){
			if(a[0] == "show"){
				if(st.size() > 0){
					for(int i : st){
						cout << i << ' ';
					}
				}else{
					cout << "empty";
				}
				cout << '\n';
			}else if(a[0] == "pop"){
				st.pop_back();
			}
		}else{
			int k = stoi(a[1]);
			if(a[0] == "push"){
				st.push_back(k);
			}
		}
	}	
	
	return 0;
}

DSA07002 - NGĂN XẾP 2

// created: 2023-05-26 18:36:31
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;
int main(){
	
	vector<int> st;
	string s;
	int q;
	cin >> q;
	cin.ignore();
	while(q--){
		getline(cin, s);
		stringstream ss(s);
		string tmp;
		vector<string> a;
		while(ss >> tmp){
			a.push_back(tmp);
		}
		if(a.size() == 1){
			if(a[0] == "PRINT"){
				if(st.size() > 0){
					cout << st.back();	
				}else{
					cout << "NONE";
				}
				cout << '\n';
			}else if(a[0] == "POP"){
				if(st.size() > 0)
					st.pop_back();
			}
		}else{
			int k = stoi(a[1]);
			if(a[0] == "PUSH"){
				st.push_back(k);
			}
		}
	}	
	
	return 0;
}

DSA07003 - KIỂM TRA BIỂU THỨC SỐ HỌC

// created: 2023-05-26 18:36:43
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main()
{

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	cin.ignore();	
	while(t--){
		string s;
		getline(cin, s);	
		stack<char> st;
		bool flag = false;
		for(int i = 0; i < s.length(); ++i){
			if(st.empty()){
				st.push(s[i]);
				continue;
			}
			if(s[i] == '(' || s[i] == '+' || s[i] == '-' || s[i] == '/' || s[i] == '*'){
				st.push(s[i]);
			}else if(s[i] == ')'){
				if(st.top() == '('){
					flag = true;
				}else{
					while(st.top() != '(')
						st.pop();
					st.pop();
				}
			}
		}
		if(flag){
			cout << "Yes";
		}else
			cout << "No";
		cout << '\n';
	}	

	return 0;
}


DSA07004 - ĐẾM SỐ DẤU NGOẶC ĐỔI CHIỀU

// created: 2023-05-26 18:36:54
// author: Nguyen Tung Duong


#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll INF = 9999999999;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		string s;
		cin >> s;
		int n = s.length();
		int cnt = 0;
		int tmp = 0;
		for(int i = 0; i < n; ++i){
			if(tmp == 0){
				if(s[i] == ')'){
					++cnt;
					++tmp;
				}else{
					tmp++;
				}
				continue;
			}

			if(s[i] == '('){
				tmp++;
			}else{
				tmp--;
			}

		}
		cout << cnt + tmp / 2 << '\n';
	}

	return 0;
}


DSA07005 - BIỂU THỨC TƯƠNG ĐƯƠNG

// created: 2023-05-26 18:41:29
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		string s;
		cin >> s;
		stack<int> st;
		for(int i = s.length() - 1; ~i; --i){
			if(s[i] == ')'){
				st.push(i);
			}
			if(s[i] == '('){
				int k = st.top(); st.pop();
				if(s[i - 1] == '-'){
					for(int j = i; j < k; ++j){
						if(s[j] == '-') s[j] = '+';
						else if(s[j] == '+') s[j] = '-';
					}
				}
			}
		}
		for(int i = 0; i < s.length(); ++i){
			if(s[i] != '(' && s[i] != ')')
				cout << s[i];
		}
		cout << '\n';
	}

	return 0;
}

DSA07006 - XÓA DẤU NGOẶC

// created: 2023-05-26 18:41:42
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

string s;
vector<pair<int,int>> pos;
set<string> res;

void Try(int i = 0, string k = ""){

	if(i == pos.size()){
		if(k == string(pos.size(),'0')) return;
		unordered_set<int> st;
		for(int j = 0; j < pos.size(); ++j){
			if(k[j] == '1'){
				st.insert(pos[j].first);
				st.insert(pos[j].second);
			}
		}

		string tmp = "";
		for(int j = 0; j < s.length(); ++j){
			if(st.find(j) == st.end()){
				tmp += s[j];
			}
		}
		res.insert(tmp);
		return;
	}

	Try(i + 1, k + "0");
	Try(i + 1, k + "1");	
}

int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	cin >> s;

	stack<int> st;

	for(int i = 0; i < s.length(); ++i){
		if(s[i] == '(')
			st.push(i);
		if(s[i] == ')'){
			pos.push_back({st.top(), i});
			st.pop();
		}
	}

	Try();
	for(string i: res){
		cout << i << '\n';
	}
	return 0;
}


DSA07007 - SO SÁNH BIỂU THỨC

// created: 2023-05-26 18:41:55
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		string s1, s2;
		cin >> s1 >> s2;
		for(int i = 1; i < s1.length(); ++i){
			if(s1[i] == '(' && s1[i - 1] == '-'){
				for(int j = i + 1;; ++j){
					if(s1[j] == ')'){
						i = j;
						break;
					}	
					if(s1[j] == '-') s1[j] = '+';
					else if(s1[j] == '+') s1[j] = '-';
				}
			}
		}
		string s = "";
		for(int i = 0; i < s1.length(); ++i){
			if(s1[i] != '(' && s1[i] != ')')
				s += s1[i];
		}
		for(int i = 1; i < s2.length(); ++i){
			if(s2[i] == '(' && s2[i - 1] == '-'){
				for(int j = i + 1;; ++j){
					if(s2[j] == ')'){
						i = j;
						break;
					}	
					if(s2[j] == '-') s2[j] = '+';
					else if(s1[j] == '+') s2[j] = '-';
				}
			}
		}
		string ss = "";
		for(int i = 0; i < s2.length(); ++i){
			if(s2[i] != '(' && s2[i] != ')')
				ss += s2[i];
		}

		cout << (s == ss ? "YES" : "NO") << '\n';
	}

	return 0;
}


DSA07008 - BIẾN ĐỔI TRUNG TỐ - HẬU TỐ

// created: 2023-05-26 18:38:56
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

bool isOperator(char c){
	return c == '+' || c == '-' || c == '*' || c == '/' || c == '^';
}

int main(){
    
	ios_base::sync_with_stdio(false);
	cin.tie(0);	
	
	int t;
	cin >> t;

	unordered_map<char, int> priority;
	priority['+'] = priority['-'] = 1;
	priority['*'] = priority['/'] = 2;
	priority['^'] = 3;

	while(t--){
		string s;
		cin >> s;
		stack<char> st;
		string res = "";
		
		for(char c : s){
			if(c == '('){
				st.push(c);
			}else if(c == ')'){
				while(!st.empty() && st.top() != '('){
					res += st.top();
					st.pop();
				}
				st.pop();
			}else if(isOperator(c)){
				while(!st.empty() && isOperator(st.top()) && priority[st.top()] >= priority[c]){
					res += st.top();
					st.pop();
				}
				st.push(c);
			}else{
				res += c;
			}
		}
		while(!st.empty()){
			char top = st.top();
			if(isOperator(top))
				res += top;
			st.pop();
		}	
		cout << res << '\n';
	}
	return 0;
}


DSA07009 - BIẾN ĐỔI TIỀN TỐ - TRUNG TỐ

// created: 2023-05-26 18:37:08
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

bool isOperator(char c){
	return c == '+' || c == '-' || c == '*' || c == '/';
}

int main(){
    
	ios_base::sync_with_stdio(false);
	cin.tie(0);	
	
	int t;
	cin >> t;

	while(t--){
		string s;
		cin >> s;
		stack<string> st;
		reverse(s.begin(), s.end());
		for(char c: s){
			if(isOperator(c)){
				string op1 = st.top(); st.pop();
				string op2 = st.top(); st.pop();
				st.push("(" + op1 + string(1, c) + op2 + ")");
			}else
				st.push(string(1,c));		
		}
		cout << st.top() << '\n';
	}
	return 0;
}


DSA07010 - BIẾN ĐỔI TIỀN TỐ - HẬU TỐ

// created: 2023-05-26 18:37:23
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

bool isOperator(char c){
	return c == '+' || c == '-' || c == '*' || c == '/';
}

int main(){
    
	ios_base::sync_with_stdio(false);
	cin.tie(0);	
	
	int t;
	cin >> t;

	while(t--){
		string s;
		cin >> s;
		stack<string> st;
		reverse(s.begin(), s.end());
		for(char c: s){
			if(isOperator(c)){
				string op1 = st.top(); st.pop();
				string op2 = st.top(); st.pop();
				st.push(op1 + op2 + string(1, c));
			}else
				st.push(string(1,c));		
		}
		cout << st.top() << '\n';
	}
	return 0;
}


DSA07011 - BIẾN ĐỔI HẬU TỐ - TIỀN TỐ

// created: 2023-05-26 18:39:16
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

bool isOperator(char c){
	return c == '+' || c == '-' || c == '*' || c == '/';
}

int main(){
    
	ios_base::sync_with_stdio(false);
	cin.tie(0);	
	
	int t;
	cin >> t;

	while(t--){
		string s;
		cin >> s;
		stack<string> st;
		for(char c: s){
			if(isOperator(c)){
				string op2 = st.top(); st.pop();
				string op1 = st.top(); st.pop();
				st.push(string(1,c) + op1 + op2);
			}else
				st.push(string(1,c));		
		}
		cout << st.top() << '\n';
	}
	return 0;
}

DSA07012 - BIẾN ĐỔI HẬU TỐ - TRUNG TỐ

// created: 2023-05-26 18:39:32
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

bool isOperator(char c){
	return c == '+' || c == '-' || c == '*' || c == '/';
}

int main(){
    
	ios_base::sync_with_stdio(false);
	cin.tie(0);	
	
	int t;
	cin >> t;

	while(t--){
		string s;
		cin >> s;
		stack<string> st;
		for(char c: s){
			if(isOperator(c)){
				string op2 = st.top(); st.pop();
				string op1 = st.top(); st.pop();
				st.push("(" + op1 + string(1,c) +  op2 + ")");
			}else
				st.push(string(1,c));		
		}
		cout << st.top() << '\n';
	}
	return 0;
}


DSA07013 - TÍNH GIÁ TRỊ BIỂU THỨC HẬU TỐ

// created: 2023-05-26 18:37:35
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

bool isOperator(char c){
	return c == '+' || c == '-' || c == '*' || c == '/';
}

int main(){
    
	ios_base::sync_with_stdio(false);
	cin.tie(0);	
	
	int t;
	cin >> t;

	while(t--){
		string s;
		cin >> s;
		stack<string> st;
		for(char c: s){
			if(isOperator(c)){
				string op2 = st.top(); st.pop();
				string op1 = st.top(); st.pop();
				int tmp;
				if(c == '+'){
					tmp = stoi(op1) + stoi(op2);
				}else if(c == '-')
					tmp = stoi(op1) - stoi(op2);
				else if(c == '/')
					tmp = stoi(op1) / stoi(op2);
				else if(c == '*')
					tmp = stoi(op1) * stoi(op2);
				st.push(to_string(tmp));
			}else
				st.push(string(1,c));		
		}
		cout << st.top() << '\n';
	}
	return 0;
}

DSA07014 - TÍNH GIÁ TRỊ BIỂU THỨC TIỀN TỐ

// created: 2023-05-26 18:37:47
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

bool isOperator(char c){
	return c == '+' || c == '-' || c == '*' || c == '/';
}

int main(){
    
	ios_base::sync_with_stdio(false);
	cin.tie(0);	
	
	int t;
	cin >> t;

	while(t--){
		string s;
		cin >> s;
		stack<string> st;
		reverse(s.begin(), s.end());
		for(char c: s){
			if(isOperator(c)){
				string op1 = st.top(); st.pop();
				string op2 = st.top(); st.pop();
				int tmp;
				if(c == '+'){
					tmp = stoi(op1) + stoi(op2);
				}else if(c == '-')
					tmp = stoi(op1) - stoi(op2);
				else if(c == '/')
					tmp = stoi(op1) / stoi(op2);
				else if(c == '*')
					tmp = stoi(op1) * stoi(op2);
				st.push(to_string(tmp));
			}else
				st.push(string(1,c));		
		}
		cout << st.top() << '\n';
	}
	return 0;
}


DSA07015 - TÍNH TOÁN GIÁ TRỊ BIỂU THỨC TRUNG TỐ

#include<iostream>
#include<string>
#include<stack>
#include<vector>
using namespace std;
vector<string> A,S;
long long tinh(long long a, long long b, string c) {
	if (c == "+")return a + b;
	if (c == "-")return a - b;
	if (c == "*")return a * b;
	if (c == "/")return a / b;
}
int xxx(string x) {
	if (x == "+" || x == "-")return 1;
	if (x == "/" || x == "*")return 2;
	return 0;
}
void biendoi() {
	stack<string> x;
	for (int i = 0; i < S.size(); i++) {
		if (S[i] == "(")x.push(S[i]);
		else if (S[i] == ")") {
			while (x.size() && x.top() != "(") {
				A.push_back(x.top());
				x.pop();
			}
			x.pop();
		}
		else if (S[i] == "+" || S[i] == "-" || S[i] == "*" || S[i] == "/") {
			while (x.size() && xxx(x.top()) >= xxx(S[i])) {
				A.push_back(x.top());
				x.pop();
			}
			x.push(S[i]);
		}
		else A.push_back(S[i]);
	}
	while (x.size()) {
		if (x.top() == "(")x.pop();
		else {
			A.push_back(x.top());
			x.pop();
		}
	}
}
int main() {
	int t; cin >> t;
	while (t--) {
		string s; cin >> s;
		A.clear(); S.clear();
		for (int i = 0; i < s.length(); i++) {
			if (s[i] >= '0' && s[i] <= '9') {
				string a;
				for (int j = i; j < s.length(); j++) {
					if (s[j] >= '0' && s[j] <= '9')a += s[j];
					else break;
				}
				i += a.length() - 1;
				S.push_back(a);
			}
			else S.push_back(string(1, s[i]));
		}
		biendoi();
		stack<long long> X;
		for (int i = 0; i < A.size(); i++) {
			if (A[i] == "+" || A[i] == "-" || A[i] == "*" || A[i] == "/") {
				long long  a = X.top(); X.pop();
				long long  b = X.top(); X.pop();
				X.push(tinh(b, a, A[i]));
			}
			else X.push(stoll(A[i]));
		}
		cout << X.top() << endl;
	}
}

DSA07016 - BIỂU THỨC TĂNG GIẢM

// created: 2023-05-26 18:39:49
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		string s;
		cin >> s;
		stack<int> st;
		int cur = 1;
		for(int i = 0; i < s.length(); ++i){
			if(s[i] == 'D'){
				st.push(cur);
				++cur;
			}else{
				cout << cur;
				while(!st.empty()){
					cout << st.top();
					st.pop();
				}
				++cur;
			}
		}
		cout << cur;
		while(!st.empty()){
			cout << st.top(); st.pop();
		}	
		cout << '\n';
	}

	return 0;
}

DSA07017 - PHẦN TỬ BÊN PHẢI NHỎ HƠN

// created: 2023-05-26 18:40:04
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);
	
	int t;
	cin >> t;
	while(t--){
		int n;
		cin >> n;
		vector<int> a(n);
		for(int i = 0; i < n; ++i){
			cin >> a[i];
		}	
		stack<int> st1;
		vector<int> b(n);
		for(int i = 0; i < n; ++i){
			while(!st1.empty() && a[st1.top()] < a[i]){
				int top = st1.top(); st1.pop();
				b[top] = i;	
			}
			st1.push(i);
		}
		while(!st1.empty()){
			int top = st1.top(); st1.pop();
			b[top] = -1;
		}
		stack<int> st2;
		vector<int> c(n);
		for(int i = 0; i < n; ++i){
			while(!st2.empty() && a[st2.top()] > a[i]){
				int top = st2.top(); st2.pop();
				c[top] = i;
			}
			st2.push(i);
		}	
		while(!st2.empty()){
			int top = st2.top(); st2.pop();
			c[top] = -1;
		}
		for(int i = 0; i < n; ++i){
			if(b[i] != -1){
				if(c[b[i]] != -1){
					cout << a[c[b[i]]] << ' ';
				}else
					cout << -1 << ' ';
			}
			else 
				cout << -1 << ' ';
		}
		cout << '\n';

	}

	return 0;
}

DSA07018 - TỔNG ĐA THỨC

// created: 2023-05-26 18:42:12
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	cin.ignore();
	while(t--){
		string s1, s2;
		getline(cin, s1);
		getline(cin, s2);
		map<int,int> mp;
		string tmp = "";
		int last;
		for(int i = 0; i < s1.length(); ++i){
			if(s1[i] == '*'){
				last = stoi(tmp);
				tmp = "";
			}
			if(s1[i] == ' ' && tmp.size() > 0){
				mp[stoi(tmp)] += last;
				tmp = "";
			}
			if(s1[i] >= '0' && s1[i] <= '9'){
				tmp += s1[i];
			}	
		}
		mp[stoi(tmp)] += last;
		for(int i = 0; i < s2.length(); ++i){
			if(s2[i] == '*'){
				last = stoi(tmp);
				tmp = "";
			}
			if(s2[i] == ' ' && tmp.size() > 0){
				mp[stoi(tmp)] += last;
				tmp = "";
			}
			if(s2[i] >= '0' && s2[i] <= '9'){
				tmp += s2[i];
			}	
		}
		mp[stoi(tmp)] += last;
		int k = 0;
		for(auto it = mp.rbegin(); it != mp.rend(); ++it){
			k++;
			cout << it->second << "*x^" << it->first;
			if(k < mp.size())
				cout << " + ";
		}

		cout << '\n';
	}

	return 0;
}

DSA07019 - HÌNH CHỮ NHẬT LỚN NHẤT

// created: 2023-05-26 18:40:20
// author: Nguyen Tung Duong

#include<iostream>
#include<map>
#include<vector>
#include<climits>
#include<algorithm>
#include<stack>
#include<queue>
using namespace std;
typedef long long ll;
	
int main(int argc, char *argv[])
{
	int t;
	cin >> t; 
	
	while(t--){
		ll m;
		cin >> m;
		ll res = 0;
		vector<int> a(m);
		for(int i = 0; i < m; ++i)
			cin >> a[i];
			stack<ll> st;
			for(ll j = 0; j < m; ++j){
				
				while(!st.empty() && a[j] <= a[st.top()]){
					ll top = st.top(); st.pop();
					ll l = st.empty() ? -1 : st.top();
				  	res = max(res, (j - l - 1) * a[top]);	
				}
				st.push(j);	
			}
		while(!st.empty()){
					ll top = st.top(); st.pop();
					ll l = st.empty() ? -1 : st.top();
				  	res = max(res, (m - l - 1) * a[top]);	
				}
		cout << res << '\n';
	}

}


DSA07021 - DÃY NGOẶC ĐÚNG DÀI NHẤT

// created: 2023-05-26 18:38:00
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main()
{

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	cin.ignore();	
	while(t--){
		string s;
		cin >> s;	

		int n = s.length();
		stack<int> st;
		int res = 0;
		for(int i = 0; i < n; ++i){
			if(st.empty()){
				st.push(i);
				continue;	
			}
			if(s[i] == '('){
				st.push(i);
			}else{
				if(s[st.top()] == '('){
					st.pop();
					int l = st.empty() ? -1 : st.top();
					res = max(res, i - l);
				}else
					st.push(i);
			}
		}
		cout << res << '\n';	
	}	

	return 0;
}

DSA07022 - PHẦN TỬ CÓ SỐ LẦN XUẤT HIỆN NHIỀU HƠN BÊN PHẢI

// created: 2023-05-26 18:43:14
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;
	while(t--){
		int n;
		cin >> n;		

		vector<int> a(n);
		vector<int> freq(n);
		unordered_map<int,int> cnt;
		for(int i = 0; i < n; ++i){
			cin >> a[i];	
			cnt[a[i]]++;
		}
		for(int i = 0; i < n; ++i){
			freq[i] = cnt[a[i]];
		}
		stack<int> st;
		vector<int> res(n);
		for(int i = 0; i < n; ++i){
			if(st.empty()){
				st.push(i);
				continue;
			}
			while(!st.empty() && freq[st.top()] < freq[i]){
				res[st.top()] = a[i];	
				st.pop();
			}
			st.push(i);
		}
		while(!st.empty()){
			res[st.top()] = -1;
			st.pop();
		}
		for(int i = 0; i < n; ++i)
			cout << res[i] << ' ';
		cout << '\n';
	}
	return 0;	
}

DSA07023 - ĐẢO TỪ

// created: 2023-05-26 18:38:15
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;
int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin>> t;

	cin.ignore();
	while(t--){
		string s;
		getline(cin, s);
		stringstream ss(s);
		string tmp;
		vector<string> a;
		while(ss >> tmp){
			a.push_back(tmp);
		}
		for(int i = a.size() - 1; ~i; --i){
			cout << a[i] << ' ';
		}
		cout << '\n';
	}	
	
	return 0;
}

DSA07024 - GHÉP VÁN GỖ

// created: 2023-05-26 18:42:23
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		int n;
		cin >> n;
		vector<ll> a(n);
		for(int i = 0; i < n; ++i)
			cin >> a[i];
		stack<ll> st;
		ll res = 0;
		for(int i = 0; i < n; ++i){

			while(!st.empty() && a[st.top()] >= a[i]){
				ll top = st.top(); st.pop();
				ll l = st.empty() ? -1 : st.top();
				if(a[top] <= i - l - 1){
					res = max(res, a[top]);
				}
			}
			st.push(i);
		}

		while(!st.empty()){
			ll top = st.top(); st.pop();
			ll l = st.empty() ? -1 : st.top();
			if(a[top] <= n - l - 1)
				res = max(res, a[top]);
		}
		cout << res << '\n';
	}
	return 0;	
}


DSA07027 - PHẦN TỬ BÊN PHẢI ĐẦU TIÊN LỚN HƠN

// created: 2023-05-26 18:38:29
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main()
{

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	cin.ignore();	
	while(t--){
		int n;
		cin >> n;
		vector<int> a(n);
		stack<int> st;
		for(int i = 0; i < n; ++i) cin >> a[i];
		vector<int> res(n);
		for(int i = 0; i < n; ++i){
			while(!st.empty() && a[st.top()] < a[i]){
				res[st.top()] = a[i];
				st.pop();
			}
			st.push(i);
		}	
		while(!st.empty()){
			res[st.top()] = -1;
			st.pop();
		}
		for(int i: res)
			cout << i << ' ';
		cout << '\n';
	}	

	return 0;
}


DSA07028 - NHỊP CHỨNG KHOÁN

// created: 2023-05-26 18:40:39
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const int mod = 1e9 + 7;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		int n;
		cin >> n;

		vector<int> a(n);	
		for(int i = 0; i < n; ++i) cin >> a[i];
		stack<int> st;
		vector<int> res(n);
		for(int i = 0; i < n; ++i){
			while(!st.empty() && a[st.top()] <= a[i]){
				int top = st.top(); st.pop();
				int l = st.empty() ? -1 : st.top();
				res[top] = top - l;	
			}
			st.push(i);
		}	
		while(!st.empty()){
			int top = st.top(); st.pop();
			int l = st.empty() ? -1 : st.top();
			res[top] = top - l;
		}
		for(int i: res)
			cout << i << ' ';
		cout << '\n';
	}

	return 0;
}

DSA07029 - GIẢI MÃ XÂU KÝ TỰ

// created: 2023-05-26 18:40:51
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		
		string s;
		cin >> s;
		stack<string> st;

		for(int i = 0; i < s.length(); ++i){
			if(s[i] >= '0' && s[i] <= '9'){
				if(st.empty()){
					st.push(string(1, s[i]));
				}else if(st.top()[0] >= '0' && st.top()[0] <= '9'){
					string top = st.top(); st.pop();
					st.push(top + string(1, s[i]));
				}else{
					st.push(string(1, s[i]));
				}
			}else if(s[i] != '[' && s[i] != ']'){
				if(st.empty()){
					st.push(string(1, s[i]));
				}
				else if(st.top()[0] < '0' || st.top()[0] > '9'){
					string top = st.top(); st.pop();	
					st.push(top + string(1, s[i]));
				}else{
					st.push(string(1, s[i]));
				}
			}
			if(s[i] == ']'){
				string s1 = st.top(); st.pop();
				int k;
				if(st.empty()){
					k = 1;
				}else{
					k = stoi(st.top()); st.pop();
				}
				string tmp = "";
				while(k--){
					tmp += s1;
				}
				if(!st.empty()){
					string top = st.top(); st.pop();
					st.push(top + tmp);
				}else
					st.push(tmp);
			}
		}
		cout << st.top() << '\n';
	}
	return 0;
}


DSA07030 - HÌNH CHỮ NHẬT 0 - 1

// created: 2023-05-26 18:42:37
// author: Nguyen Tung Duong

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

int main()
{

	#ifndef ONLINE_JUDGE
    freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
	#endif

    ios_base::sync_with_stdio(false);
    cin.tie(0);
	
	int t;
	cin >> t;

	while(t--){
		int n, m;
		cin >> n >> m;
	
		vector<vector<int>> mat(n, vector<int>(m));
		for(int i = 0; i < n; ++i){
			for(int j = 0; j < m; ++j){
				cin >> mat[i][j];
			}
		}
		for(int i = 1; i < n; ++i){
			for(int j = 0; j < m; ++j){
				if(mat[i][j] != 0)
					mat[i][j] += mat[i - 1][j];
			}
		}
		int res = 0;
	
		for(int i = 0; i < n; ++i){
			stack<int> st;
			for(int j = 0; j < m; ++j){
				
				while(!st.empty() && mat[i][j] <= mat[i][st.top()]){
					int top = st.top(); st.pop();
					int l = st.empty() ? -1 : st.top();
				  	res = max(res, (j - l - 1) * mat[i][top]);	
				}
				st.push(j);	
			}
		}
		cout << res << '\n';
	}
	
    return 0;
}


DSA07041 - BIỂU THỨC ĐÚNG DÀI NHẤT

// created: 2023-05-26 18:41:10
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;
	
	while(t--){
		string s;
		cin >> s;
	    int n = s.length();
        stack<char> st;
        for(int i = 0; i < n; ++i){
            if(!st.empty()){
                char c = st.top();
                if(c == '('){
                    if(s[i] == ')'){
                        st.pop();
                    }else{
                        st.push(s[i]);
                    }
                }else{
                    st.push(s[i]);
                }
            }else{
                st.push(s[i]);
            }
        }
        cout <<  n - st.size() << '\n';		
	}	

	return 0;
}



DSA07045 - GÕ BÀN PHÍM

// created: 2023-05-26 18:43:26
// author: Nguyen Tung Duong

#include<iostream>
#include<map>
#include<vector>
#include<climits>
#include<algorithm>
#include<stack>
#include<queue>
using namespace std;
typedef long long ll;
	
int main(int argc, char *argv[])
{

		string s;
		cin >> s;
		string res = "";
		stack<char> st;
		for(char c : s){
			if(c == '<'){
				if(res.length() != 0){
					st.push(res.back());
					res.pop_back();
				}
			
			}else if(c == '>'){
				if(st.size() != 0){
					res += st.top();
					st.pop();
				}
			}else if(c == '-'){
				if(res.length() != 0){
					res.pop_back();
				}
			}else
				res += c;
				
			
		}
		while(!st.empty()){
			res += st.top();
			st.pop();
		}
		cout << res;
	
}






DSA07110 - KIỂM TRA DÃY NGOẶC ĐÚNG

// created: 2023-05-26 18:38:42
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;
int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin>> t;

	unordered_map<char, char> rules;
	rules.insert({')', '('});
	rules.insert({'}', '{'});
	rules.insert({']', '['});
	while(t--){
		string s;
		cin >> s;
		stack<char> st;
		for(int i = 0; i < s.length(); ++i){
			if(st.empty()){
				st.push(s[i]);
			}else{
				if(s[i] == '{' || s[i] == '(' || s[i] == '['){
					st.push(s[i]);
				}
				else if(rules[s[i]] == st.top())
					st.pop();
			}
		}
		cout << (st.empty() ? "YES" : "NO") << '\n';
	}	
	
	return 0;
}


DSA08001 - CẤU TRÚC DỮ LIỆU HÀNG ĐỢI 1

// created: 2023-05-26 23:17:29
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main()
{

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		int n;	
		cin >> n;
		deque<int> q;
		while(n--){
			int choice;
			cin >> choice;
			if(choice == 1){
				cout << q.size() << '\n';
			}else if(choice == 2){
				cout << (q.empty() ? "YES" : "NO") << '\n';
			}else if(choice == 3){
				int k;
				cin >> k;
				q.push_back(k);
			}else if(choice == 4){
				if(!q.empty()) q.pop_front();
			}else if(choice == 5){
				cout << (!q.empty() ? q.front() : -1) << '\n';
			}else if(choice == 6){
				cout << (!q.empty() ? q.back() : -1) << '\n';
			}
		}
	}	

	return 0;
}

DSA08002 - CẤU TRÚC DỮ LIỆU HÀNG ĐỢI 2

// created: 2023-05-26 23:17:47
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main()
{

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	deque<int> q;
	while(t--){
		string choice;
		cin >> choice;
		if(choice == "PUSH"){
			int x;
			cin >> x;
			q.push_back(x);	
		}else if(choice == "PRINTFRONT"){
			if(!q.empty()){
				cout << q.front() << '\n';
			}else
				cout << "NONE" << '\n';
		}else if(choice == "POP"){
			if(!q.empty()) q.pop_front();
		}
	}
	return 0;
}


DSA08003 - HÀNG ĐỢI HAI ĐẦU (DEQUEUE)

// created: 2023-05-26 23:18:00
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main()
{

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	deque<int> q;
	while(t--){
		string choice;
		cin >> choice;
			
		if(choice == "PUSHFRONT"){
			int x;
			cin >> x;
			q.push_front(x);
		}else if(choice == "PRINTFRONT"){
			if(!q.empty())
				cout << q.front() << '\n';
			else
				cout << "NONE" << '\n';	
		}else if(choice == "POPFRONT"){
			if(!q.empty())
				q.pop_front();
		}else if(choice == "PUSHBACK"){
			int x;
			cin >> x;
			q.push_back(x);
		}else if(choice == "PRINTBACK"){
			if(!q.empty())
				cout << q.back() << '\n';
			else
				cout << "NONE" << '\n';
		}else if(choice == "POPBACK"){
			if(!q.empty())
				q.pop_back();
		}	
	}
	return 0;
}

DSA08004 - GIÁ TRỊ NHỎ NHẤT CỦA XÂU

// created: 2023-05-26 23:20:41
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const int mod = 1e9 + 7;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		int k;
		cin >> k;	
		string s;
		cin >> s;
		unordered_map<char,int> mp;
		for(char c: s)
			mp[c]++;
		priority_queue<ll> q;
		for(auto p : mp)
			q.push(p.second);
		ll res = 0;
		while(k--){
			ll top = q.top(); q.pop();
			top--; q.push(top);
		}
		while(!q.empty()){
			res += q.top() * q.top(); q.pop();
		}
		cout << res << '\n';
	}

	return 0;
}


DSA08005 - SỐ NHỊ PHÂN TỪ 1 ĐẾN N


// created: 2023-05-26 23:18:17
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;
int main(){
	

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		int n;
		cin >> n;
			
		queue<string> q;
		q.push("1");
		while(n--){
			string fr = q.front(); q.pop();
			cout << fr << ' ';
				q.push(fr + "0");
				q.push(fr + "1");
		}
		cout << '\n';
	}
	return 0;
}


DSA08006 - SỐ 0 VÀ SỐ 9

// created: 2023-05-26 23:18:36
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;
int main(){
	

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		int n;
		cin >> n;
			
		queue<string> q;
		q.push("9");
		while(!q.empty()){
			string fr = q.front(); q.pop();
			if(stoll(fr) % n == 0){
				cout << fr;
				break;
			}
			q.push(fr + "0");
			q.push(fr + "9");
		}
		cout << '\n';
	}
	return 0;
}


DSA08007 - SỐ BDN 1

// created: 2023-05-26 23:19:04
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;
int main(){
	

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		ll n;
		cin >> n;
		int cnt = 0;
		queue<string> q;
		q.push("1");
		while(!q.empty()){
			string fr = q.front(); q.pop();

			if(stoll(fr) > n){
				break;
			}
			++cnt;
			q.push(fr + "0");
			q.push(fr + "1");
		}
		cout << cnt <<'\n';
	}
	return 0;
}




DSA08008 - SỐ BDN 2


// created: 2023-05-26 23:19:20
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;
int main(){
	

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		ll n;
		cin >> n;
		queue<string> q;
		q.push("1");
		while(!q.empty()){
			string fr = q.front(); q.pop();

			if(stoll(fr) % n == 0){
				cout << fr;
				break;
			}
			q.push(fr + "0");
			q.push(fr + "1");
		}
		cout <<'\n';
	}
	return 0;
}


DSA08009 - BIẾN ĐỔI S - T

// created: 2023-05-26 23:20:55
// author: Nguyen Tung Duong

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

int main()
{

	#ifndef ONLINE_JUDGE
    freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
	#endif

    ios_base::sync_with_stdio(false);
    cin.tie(0);
	
	int t;
	cin >> t;

	while(t--){
		int S, T;
		cin >> S >> T;

		queue<pair<int,int>> q;
		q.push({S, 0});

		bool visited[1 << 19];
		memset(visited, false, sizeof(visited));

		while(!q.empty()){
			pair<int,int> fr = q.front(); q.pop();
			visited[fr.first] = true;
			if(fr.first == T){
				cout << fr.second << '\n';
				break;
			}
			if(!visited[fr.first * 2])
			if(fr.first * 2 <= 100000)
			q.push({fr.first * 2, fr.second + 1});
			if(!visited[fr.first - 1])
			if(fr.first != 0)
				q.push({fr.first - 1, fr.second + 1});
			
		}
			
	}
	
    return 0;
}



DSA08010 - BIẾN ĐỔI SỐ TỰ NHIÊN

// created: 2023-05-26 23:21:27
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);
	
	int t;
	cin >> t;

	while(t--){
		int n;
		cin >> n;

		unordered_set<int> visited;	
		visited.insert(n);

		queue<pair<int,int>> q;
		q.push({n, 0});
		while(!q.empty()){
			pair<int,int> front = q.front(); q.pop();
			int x = front.first;
			int y = front.second;
			if(x == 1){
				cout << y << '\n';
				break;
			}
			if(x - 1 == 1){
				cout << y + 1 << '\n';
				break;
			}
			if(visited.find(x - 1) == visited.end()){
				q.push({x - 1, y + 1});
				visited.insert(x - 1);
			}
			
			for(int i = 2; i * i <= x; ++i){
				if(x % i == 0){
					if(visited.find(x / i) == visited.end()){
						q.push({x / i, y + 1});
						visited.insert(x / i);
						if(x / i == 1){
							cout << y + 1 << '\n';
							break;
						}
					}
				}
			}
		}
	}	

	return 0;
}


DSA08011 - KHOẢNG CÁCH XÂU KÝ TỰ

// created: 2023-05-26 23:22:36
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

string S, T;
set<string> st;

int dfs(){

	queue<pair<string,int>> q;
	q.push({S, 1});
	st.erase(S);
	while(!q.empty()){
		pair<string,int> fr = q.front(); q.pop();
		string s = fr.first;
		int cnt = fr.second;
		if(s == T) return cnt;
		for(int i = 0; i < s.length(); ++i){
			for(char j = 'A'; j <= 'Z'; ++j){
				string tmp = s;
				tmp[i] = j;
				if(st.find(tmp) != st.end()){
					q.push({tmp, cnt + 1});
					st.erase(tmp);
					if(tmp == T){
						return cnt + 1;
					}
				}
			}
		}
	}
	return 0;
}

int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	
	int t;
	cin >> t;

	while(t--){
		int n;
		cin >> n >> S >> T;
		for(int i = 0; i < n; ++i){
			string tmp;
			cin >> tmp;
			st.insert(tmp);
		}
		cout << dfs() << '\n';
	}
	return 0;
}



DSA08012 - TÌM SỐ K THỎA MÃN ĐIỀU KIỆN

// created: 2023-05-26 23:21:42
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	vector<int> a = {0};
	queue<string> q;
	q.push("1");
	q.push("2");
	q.push("3");
	q.push("4");
	q.push("5");
	while(!q.empty()){
		string front = q.front(); q.pop();
		if(front.size() == 6) break;
		a.push_back(stoi(front));	
		for(char c = '0'; c <= '5'; ++c){
			if(front.find(c) == -1){
				q.push(front + c);
			}
		}
	}
	int t;
	cin >> t;

	while(t--){
		int l, r;
		cin >> l >> r;
		int k1 = lower_bound(a.begin(), a.end(), l) - a.begin();
		int k2 = upper_bound(a.begin(), a.end(), r) - a.begin() - 1;	
		cout << k2 - k1 + 1 << '\n';
	}	

	return 0;
}


DSA08013 - DI CHUYỂN TRÁNH VẬT CẢN

// created: 2023-05-26 23:22:54
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int n;
int dx[4] = {0,0,1,-1};
int dy[4] = {1,-1,0,0};
vector<string> a;
int x1, _y1, x2, y2;
void bfs(){

	queue<pair<pair<int,int>,pair<int,int>>> q;
	for(int i = 0; i < 4; ++i){
		int x = x1 + dx[i];
		int y = _y1 + dy[i];
		if(x < n && y < n && x >= 0 && y >= 0 && a[x][y] == '.'){
			a[x][y] = 'X';
			q.push({{x, y}, {1, i}});
		}
	}
	a[x1][_y1] = 'X';
	while(!q.empty()){
		pair<pair<int,int>, pair<int,int>> fr = q.front(); q.pop();
		int x = fr.first.first;
		int y = fr.first.second;
		int step = fr.second.first;
		int dir = fr.second.second;
		if(x == x2 && y == y2){
			cout << step << '\n';
			return;
		}
		for(int i = 0; i < 4; ++i){
			int xx = x + dx[i];
			int yy = y + dy[i];
			while(xx >= 0 && yy >= 0 && xx < n && yy < n && a[xx][yy] == '.'){
				a[xx][yy] = 'X';
				q.push({{xx, yy}, {i == dir ? step : step + 1, i}});
				xx += dx[i];
				yy += dy[i];
			}
		}
	}	
}

int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		cin >> n;
		a.clear();
		a.resize(n);
		for(int i = 0; i < n; ++i) cin >> a[i];
		cin >> x1 >> _y1 >> x2 >> y2;
		if(x1 == x2 && _y1 == y2){
			cout << 0 << '\n';
		}else
			bfs();	
	}
	return 0;
}


DSA08014 - GIEO MẦM

// created: 2023-05-26 23:23:07
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int dx[4] = {0, 0, 1, -1};
int dy[4] = {1, -1, 0 , 0};

int n, m;
int a[501][501];
int res;

void bfs(){
	queue<pair<pair<int,int>, int>> q;
	for(int i = 0; i < n; ++i){
		for(int j = 0; j < m; ++j){
			if(a[i][j] == 2){
				q.push({{i,j}, 0});
			}
		}
	}
	while(!q.empty()){
		pair<pair<int,int>, int> fr = q.front(); q.pop();
		int x = fr.first.first;
		int y = fr.first.second;
		int step = fr.second;
		res = max(res, step);
		for(int i = 0; i < 4; ++i){
			int xx = x + dx[i];
			int yy = y + dy[i];
			if(xx >= 0 && yy >= 0 && xx < n && yy < m && a[xx][yy] == 1){
				a[xx][yy] = 2;
				q.push({{xx, yy}, step + 1});
			}	
		}	
	}
	for(int i = 0; i < n; ++i){
		for(int j = 0; j < m; ++j){
			if(a[i][j] == 1){
				res = -1;
				break;
			}
		}
	}
}

int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		res = 0;
		cin >> n >> m;
		for(int i = 0; i < n; ++i){
			for(int j = 0; j < m; ++j){
				cin >> a[i][j];
			}
		}	
		bfs();		
		cout << res << '\n';
	}
	return 0;
}

DSA08015 - DI CHUYỂN TRONG KHÔNG GIAN

// created: 2023-05-26 23:23:20
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int A, B, C;
char a[31][31][31];
vector<int> S;
vector<int> E;

int dx[6] = {1, -1, 0, 0, 0, 0};
int dy[6] = {0, 0, 1, -1, 0, 0};
int dz[6] = {0, 0, 0, 0, 1, -1};

void bfs(){
	queue<pair<vector<int>,int>> q;	
	q.push({S, 0});
	while(!q.empty()){
		pair<vector<int>, int> fr = q.front(); q.pop();
		int x = fr.first[0];
		int y = fr.first[1];
		int z = fr.first[2];
		int step = fr.second;
		if(x == E[0] && y == E[1] && z == E[2]){
			cout << step << '\n';
			return;
		}
		for(int i = 0; i < 6; ++i){
			int xx = x + dx[i];
			int yy = y + dy[i];
			int zz = z + dz[i];
			if(xx < A && yy < B && zz < C && xx >= 0 && yy >= 0 && zz >= 0 && a[xx][yy][zz] == '.'){	
				a[xx][yy][zz] = '#';
				q.push({{xx, yy, zz}, step + 1});
			}
		}
	}	
	cout << -1 << '\n';
}

int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		cin >> A >> B >> C;
		for(int i = 0; i < A; ++i){
			for(int j = 0; j < B; ++j){
				for(int k = 0; k < C; ++k){
					cin >> a[i][j][k];
					if(a[i][j][k] == 'S'){
						S = {i,j,k};
						a[i][j][k] = '#';
					}else if(a[i][j][k] == 'E'){
						E = {i, j, k};
						a[i][j][k] = '.';
					}
				}
			}
		}
		bfs();		
	}
	return 0;
}


DSA08016 - HEXGAME

// created: 2023-05-26 23:24:32
// author: Nguyen Tung Duong

#include <bits/stdc++.h>
using namespace std;

string a(10, '0');
int r1[10] = {3, 0, 2, 7, 4, 1, 6, 8, 5, 9};
int r2[10] = {0, 4, 1, 3, 8, 5, 2, 7, 9, 6};
int l1[10] = {1, 5, 2, 0, 4, 8, 6, 3, 7, 9};
int l2[10] = {0, 2, 6, 3, 1, 5, 9, 7, 4, 8};
string solved = "1238004765";

unordered_map<string, int> cnt;

void solve()
{
    queue<pair<string, int>> q1;
    pair<string, int> p;
    p.first = a;
    p.second = 0;
    q1.push(p);
    while (!q1.empty())
    {
        pair<string, int> fr = q1.front();
        q1.pop();
        if (cnt.find(fr.first) != cnt.end())
        {
            cout << fr.second + cnt[fr.first] << '\n';
            return;
        }

        if (fr.second == 13)
            break;
        string s1(10, '0');
        string s2(10, '0');
        for (int i = 0; i < 10; ++i)
        {
            s1[i] = fr.first[r1[i]];
        }
        for (int i = 0; i < 10; ++i)
        {
            s2[i] = fr.first[r2[i]];
        }
        q1.push({s1, fr.second + 1});
        q1.push({s2, fr.second + 1});
    }
}

int main()
{

    ios_base::sync_with_stdio(false);
    cin.tie(0);

    pair<string, int> p;
    queue<pair<string, int>> q2;
    p.first = solved;
    p.second = 0;
    q2.push(p);

    while (!q2.empty())
    {
        pair<string, int> fr = q2.front();
        q2.pop();
        cnt.insert(fr);
        if (fr.second == 15)
            break;
        string s1(10, '0');
        string s2(10, '0');
        for (int i = 0; i < 10; ++i)
            s1[i] = fr.first[l1[i]];
        for (int i = 0; i < 10; ++i)
            s2[i] = fr.first[l2[i]];
        q2.push({s1, fr.second + 1});
        q2.push({s2, fr.second + 1});
    }
    int t;
    cin >> t;

    while (t--)
    {
        for (int i = 0; i < 10; ++i)
            cin >> a[i];
        solve();
    }
    return 0;
}


DSA08017 - SỐ LỘC PHÁT 1

// created: 2023-05-26 23:19:34
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int n;
vector<string> res;
void backtrack(string s = "", int i = 0){
	res.push_back(s);
	if(i == n){
		return;
	}
	backtrack(s + "6", i + 1);
	backtrack(s + "8", i + 1);

}	

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);
	
	int t;
	cin >> t;

	while(t--){
		res.resize(0);
		cin >> n;

		backtrack();
		sort(res.begin(), res.end(), [](string s1, string s2){
			if(s1.length() != s2.length()) return s1.length() > s2.length();
			return s1 > s2;
		});
		for(string i : res)	
			cout << i << ' ';
		cout << '\n';	
	}
	return 0;
}


DSA08018 - SỐ LỘC PHÁT 2

// created: 2023-05-26 23:19:46
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int n;
vector<string> res;
void backtrack(string s = "", int i = 0){
	res.push_back(s);
	if(i == n){
		return;
	}
	backtrack(s + "6", i + 1);
	backtrack(s + "8", i + 1);

}	

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);
	
	int t;
	cin >> t;

	while(t--){
		res.resize(0);
		cin >> n;

		backtrack();
		sort(res.begin(), res.end(), [](string s1, string s2){
			if(s1.length() != s2.length()) return s1.length() < s2.length();
			return s1 < s2;
		});
		cout << res.size() - 1 << '\n';
		for(string i : res)	
			cout << i << ' ';
		cout << '\n';	
	}
	return 0;
}



DSA08019 - SỐ LỘC PHÁT 3


// created: 2023-05-26 23:19:58
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int n;
vector<string> res;
void backtrack(string s = "", int i = 0){
	res.push_back(s);
	if(i == n){
		return;
	}
	backtrack(s + "6", i + 1);
	backtrack(s + "8", i + 1);

}	

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);
	
	int t;
	cin >> t;

	while(t--){
		res.resize(0);
		cin >> n;

		backtrack();
		sort(res.begin(), res.end(), [](string s1, string s2){
			if(s1.length() != s2.length()) return s1.length() > s2.length();
			return s1 > s2;
		});
		cout << res.size() - 1 << '\n';
		for(string i : res)	
			cout << i << ' ';
		cout << '\n';	
	}
	return 0;
}

DSA08020 - BIẾN ĐỔI SỐ NGUYÊN TỐ

// created: 2023-05-26 23:21:54
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	vector<bool> sieve(10000, true);
	for(int i = 2; i * i <= 10000; ++i){
		if(sieve[i]){
			for(int j = i * i; j <= 10000; j += i){
				sieve[j] = false;
			}
		}
	}

	int t;
	cin >> t;

	while(t--){
		string s1, s2;
		cin >> s1 >> s2;
		queue<pair<string,int>> q;
		q.push({s1, 0});
		bool flag = false;
		set<string> visited;
		visited.insert(s1);
		while(!q.empty()){
			if(flag)
				break;
			pair<string,int> front = q.front(); q.pop();
			string x = front.first;
			int y = front.second;

			if(x == s2){
				cout << y << '\n';
				break;	
			}
			for(int i = 0; i < 4; ++i){
				for(char c = '0'; c <= '9'; ++c){
					if(i == 0 && c == '0') continue;
					if(c != x[i]){
						string tmp = x;
						tmp[i] = c;
						if(visited.find(tmp) == visited.end() && sieve[stoi(tmp)]){
							visited.insert(tmp);
							q.push({tmp, y + 1});
							if(tmp == s2){
								cout << y + 1 << '\n';
								flag = true;
							}
						}
					}
				}
			}	
		}	
	}	

	return 0;
}



DSA08021 - DI CHUYỂN TRONG MA TRẬN

// created: 2023-05-26 23:20:28
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);
	
	int t;
	cin >> t;

	while(t--){
		int n, m;
		cin >> n >> m;
		vector<vector<int>> a(n, vector<int>(m));
		for(int i = 0; i < n; ++i){
			for(int j = 0; j < m; ++j)
				cin >> a[i][j];
		}
		vector<vector<int>> visited(n, vector<int>(m, false));
		queue<pair<pair<int,int>,int>> q;
		q.push({{0,0}, 0});
		visited[0][0] = true;
		int res = -1;
		while(!q.empty()){
			pair<pair<int,int>,int> fr = q.front(); q.pop();
			int x = fr.first.first;
			int y = fr.first.second;
			if(x == n - 1 && y == m - 1){
				res = fr.second;
				break;
			}
			int x1 = x + a[x][y];
			int y1 = y + a[x][y];
			if(x1 < n && x1 != x && !visited[x1][y]){
				visited[x1][y] = true;
				q.push({{x1, y}, fr.second + 1});
			}
			if(y1 < m && y1 != y && !visited[x][y1]){
				visited[x][y1] = true;
				q.push({{x, y1}, fr.second + 1});
			}
		}
		cout << res << '\n';
	}	

	return 0;
}



DSA08022 - BỘI SỐ LỚN NHẤT CỦA 3

// created: 2023-05-26 23:22:08
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		int n;
		cin >> n;
		vector<vector<int>> a(3);
		int sum = 0;
		for(int i = 0; i < n; ++i){
			int tmp; cin >> tmp;
			if(tmp % 3 == 0){
				a[0].push_back(tmp);
			}else if(tmp % 3 == 1){
				a[1].push_back(tmp);
			}else
				a[2].push_back(tmp);
			sum += tmp;
		}	
		sort(a[1].begin(), a[1].end(), greater<int>());
		sort(a[2].begin(), a[2].end(), greater<int>());
		if(sum % 3 == 1){
			if(a[1].size() == 0 && a[2].size() < 2){
				cout << -1 << '\n';
				continue;
			}
			if(a[1].size() > 0){
				a[1].pop_back();
			}else{
				a[2].pop_back();
				a[2].pop_back();
			}
		}else if(sum % 3 == 2){
			if(a[1].size() < 2 && a[2].size() == 0){
				cout << -1 << '\n';
				continue;
			}
			if(a[2].size() > 0){
				a[2].pop_back();
			}else{
				a[1].pop_back();
				a[1].pop_back();
			}
		}
		for(int i : a[1]){
			a[0].push_back(i);
		}
		for(int i: a[2]){
			a[0].push_back(i);
		}
		if(a[0].size() == 0){
			cout << - 1<< '\n';
			continue;
		}
		sort(a[0].begin(), a[0].end(), greater<int>());
		for(int i : a[0])
			cout << i;
		cout << '\n';
		
	}
	return 0;
}

DSA08025 - QUÂN MÃ

// created: 2023-05-26 23:21:13
// author: Nguyen Tung Duong

#include<iostream>
#include<map>
#include<vector>
#include<climits>
#include<algorithm>
#include<queue>
using namespace std;
typedef long long ll;
int dx[8] = {-2,-2,-1,1,2,2,-1,1};
int dy[8] = {-1,1,2,2,1,-1,-2,-2};
int main(int argc, char *argv[])
{
	int t;
	cin >> t;
	
	while(t--){
		string s1, s2;
		cin >> s1 >> s2;
		queue<pair<string, int>> q;
		
		q.push({s1, 0});
		
		while(!q.empty()){
	    	pair<string,int> fr = q.front(); q.pop();
	    	if(fr.first == s2){
	    		cout << fr.second <<  '\n';
	    		break;
	    	}
	    	for(int i = 0; i < 8; ++i){
	        	char c1 = fr.first[0] + dx[i];
	        	char c2 = fr.first[1] + dy[i];
	        	if(c1 <= 'h' && c1 >= 'a' && c2 >= '1' && c2 <= '8'){
	        	  	 string v(2,'0');
	        	  	 v[0] = c1; v[1] = c2;
	        	  	 q.push({v, fr.second + 1});
	        	  }
	    	}
		}
	}
	
}

DSA08029 - QUAY HÌNH VUÔNG

// created: 2023-05-26 23:22:22
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

// 123456
// 413526
int l[6] = {3,0,2,4,1,5};
// 123456
// 152463
int r[6] = {0,4,1,3,5,2};

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		string s1 = "", s2 = "";
		for(int i = 0; i < 6; ++i){
			int tmp;
			cin >> tmp;
			s1 += tmp + '0';
		}
		
		for(int i = 0; i < 6; ++i){
			int tmp;
			cin >> tmp;
			s2 += tmp + '0';
		}
		queue<pair<string,int>> q;
		q.push({s1,0});
		while(!q.empty()){
			pair<string,int> top = q.front(); q.pop();
			if(top.first == s2){
				cout << top.second << '\n';
				break;
			}	
			string ss(6,'0');
			for(int i = 0; i < 6; ++i)
				ss[i] = top.first[l[i]]; 
			q.push({ss, top.second + 1});
			for(int i = 0; i < 6; ++i)
				ss[i] = top.first[r[i]];
			q.push({ss, top.second + 1});
		}
	}

	return 0;
}



DSA08045 - HÀNG RÀO

// created: 2023-05-26 23:24:05
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const int mxN = 2501;
int n, m;
vector<int> a,b;

int adj[mxN][mxN];
bool visited[mxN][mxN];
int mx;

int dx[4] = {0,0,1,-1};
int dy[4] = {1,-1,0,0};

void compress(vector<int> &arr){
	vector<pair<int,int>> tmp(arr.size());
	for(int i = 0; i < arr.size(); ++i){
		tmp[i] = {arr[i], i};
	}	
	sort(tmp.begin(), tmp.end());
	int nxt = 2;

	for(int i = 0; i < arr.size(); ++i){
		if(i > 0 && tmp[i].first != tmp[i - 1].first) nxt += 2;
		arr[tmp[i].second] = nxt;	
		mx = max(mx,nxt + 5);
	}
	
}

int bfs(int x, int y){
	queue<pair<int,int>> q;
	q.push({x, y});
	int cnt = 0;
	visited[x][y] = true;
	while(!q.empty()){
		pair<int,int> fr = q.front(); q.pop();
		int x1 = fr.first;
		int y1 = fr.second;	
		if(adj[x1][y1] == -1){
			++cnt;
		}
		for(int i = 0; i < 4; ++i){
			int xx = x1 + dx[i];
			int yy = y1 + dy[i];
			if(xx >= 0 && yy >= 0 && xx < mx && yy < mx && !visited[xx][yy] && adj[xx][yy] != 1){
				visited[xx][yy] = true;
				q.push({xx, yy});
			}	
		}
	}
	return cnt;
}

int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		memset(adj, 0, sizeof(adj));
		memset(visited, false, sizeof(visited));
		cin >> n >> m;
		a.clear();
		b.clear();
		for(int i = 0; i < n; ++i){
			int x1, y1, x2, y2;
			cin >> x1 >> y1 >> x2 >> y2;
			a.push_back(x1);
			a.push_back(x2);
			b.push_back(y1);
			b.push_back(y2);
		}
		for(int i = 0; i < m; ++i){
			int x, y;
			cin >> x >> y;
			a.push_back(x);
			b.push_back(y);
		}
		compress(a);
		compress(b);
		for(int i = 0; i < 2 * n; i += 2){
			int x1 = a[i];
			int x2 = a[i + 1];
			int y1 = b[i];
			int y2 = b[i + 1];
			if(x1 == x2){
				if(y1 > y2) swap(y1, y2);
				for(int y = y1;  y <= y2; ++y){
					adj[x1][y] = 1;
				}
			}else{
				if(x1 > x2) swap(x1, x2);
					for(int x = x1; x <= x2; ++x)
					adj[x][y1] = 1;
			}
		}		
		for(int i = 2 * n; i < a.size(); ++i){
			adj[a[i]][b[i]] = -1;
		}
		int res = 0;
		for(int i = 2 * n; i < a.size(); ++i){
			int x = a[i];
			int y = b[i];
			if(!visited[x][y]){
				res = max(res, bfs(x, y));
			}
		}	
		cout << res << '\n';	
	}

	return 0;
}


DSA09001

// created: 2023-05-26 23:25:52
// author: Nguyen Tung Duong

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

const int mxN = 1001;

class Edge{
	public:
		int u, v;
};

const ll mod = 1e9 + 7;
int main()
{

	#ifndef ONLINE_JUDGE
    freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
	#endif

    ios_base::sync_with_stdio(false);
    cin.tie(0);

    int t;
    cin >> t;

    while (t--)
    {
		int V, E;
		cin >> V >> E;
		
		vector<Edge> edges(E);

		for(int i = 0; i < E; ++i){
			cin >> edges[i].u >> edges[i].v;
		}
		vector<int> adj[mxN];
		for(Edge e : edges){
			adj[e.u].push_back(e.v);
			adj[e.v].push_back(e.u);
		}
		int cnt = 1;
		for(int i = 1; i <= V; ++i){
			cout << cnt++ << ": ";
			for(int v : adj[i]){
				cout << v << ' ';
			}
			cout << '\n';
		}
	}	
    return 0;
}

DSA09002

// created: 2023-05-26 23:26:06
// author: Nguyen Tung Duong

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

const int mxN = 1001;

class Edge{
	public:
		int u, v;
};

const ll mod = 1e9 + 7;
int main()
{

	#ifndef ONLINE_JUDGE
    freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
	#endif

    ios_base::sync_with_stdio(false);
    cin.tie(0);

	int n;	
	cin >> n;
	cin.ignore();

	vector<int> a[51];	
	for(int i = 1; i <= n; ++i){
		string s;
		getline(cin, s);
		stringstream ss(s);
		int tmp;
		while(ss >> tmp){
			a[i].push_back(tmp);

		}

	}

	for(int i = 1; i <= n; ++i){
		for(int j : a[i]){
			if(i < j){
				cout << i << ' ' << j << '\n';
			}
		}
	}

    return 0;

}

DSA09003

// created: 2023-05-26 23:26:18
// author: Nguyen Tung Duong

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

const int mxN = 1001;

class Edge{
	public:
		int u, v;
};

const ll mod = 1e9 + 7;
int main()
{

	#ifndef ONLINE_JUDGE
    freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
	#endif

    ios_base::sync_with_stdio(false);
    cin.tie(0);

    int t;
    cin >> t;

    while (t--)
    {
		int V, E;
		cin >> V >> E;
		
		vector<Edge> edges(E);

		for(int i = 0; i < E; ++i){
			cin >> edges[i].u >> edges[i].v;
		}
		vector<int> adj[mxN];
		for(Edge e : edges){
			adj[e.u].push_back(e.v);
		}
		int cnt = 1;
		for(int i = 1; i <= V; ++i){
			cout << cnt++ << ": ";
			for(int v : adj[i]){
				cout << v << ' ';
			}
			cout << '\n';
		}
	}	
    return 0;
}

DSA09004

// created: 2023-05-26 23:26:32
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const int mxN = 1001;
vector<int> adj[mxN];
bool visited[mxN];

int V, E, U;
void dfs(int u = U){
	cout << u << ' ';
	visited[u] = true;
	for(int v : adj[u]){
		if(!visited[v]){
			dfs(v);
		}
	}	
}

int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;
	while(t--){
		memset(adj, {}, sizeof(adj));
		memset(visited, false, sizeof(visited));
		cin >> V >> E >> U;
			
		int a, b;
		for(int i = 0; i < E; ++i){
			cin >> a >> b;
			adj[a].push_back(b);
			adj[b].push_back(a);
		}
		dfs();
		cout << '\n';

	
	}
	return 0;
}


DSA09005

// created: 2023-05-26 23:26:43
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const int mxN = 1001;
vector<int> adj[mxN];
bool visited[mxN];

int V, E, U;
void dfs(int u = U){
	cout << u << ' ';
	visited[u] = true;
	for(int v : adj[u]){
		if(!visited[v]){
			dfs(v);
		}
	}	
}

void bfs(){
	queue<int> q;
	q.push(U);
	visited[U] = true;
	while(!q.empty()){
		int fr = q.front(); q.pop();
		cout << fr << ' ';
		for(int v: adj[fr]){
			if(!visited[v]){
				visited[v] = true;
				q.push(v);
			}
		}
	}
}

int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;
	while(t--){
		memset(adj, {}, sizeof(adj));
		memset(visited, false, sizeof(visited));
		cin >> V >> E >> U;
			
		int a, b;
		for(int i = 0; i < E; ++i){
			cin >> a >> b;
			adj[a].push_back(b);
			adj[b].push_back(a);
		}
		bfs();
		cout << '\n';

	
	}
	return 0;
}

DSA09006

// created: 2023-05-26 23:29:39
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

ll n, k;
const ll mod = 1e9 + 7;
const int mxN = 1001;
vector<int> adj[mxN];
bool visited[mxN];
int V, E, S, T;
int par[mxN];

void dfs(int u = S){
	visited[u] = true;
	for(int v : adj[u]){
		if(!visited[v]){
			par[v] = u;
			dfs(v);
		}
	}
}
void solve(){
	memset(par, 0, sizeof(par));
	dfs();
	if(!visited[T]){
		cout << -1 << '\n';
		return;
	}
	vector<int> path;
	while(S != T){
		path.push_back(T);
		T = par[T];
	}
	path.push_back(S);
	reverse(path.begin(), path.end());
	for(int i : path){
		cout << i << ' ';
	}
	cout << '\n';
}

int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		memset(adj, {}, sizeof(adj));
		memset(visited, false, sizeof(visited));
		cin >> V >> E >> S >> T;
		for(int i = 0; i < E; ++i){
			int a, b;
			cin >> a >> b;
			adj[a].push_back(b);
			adj[b].push_back(a);
		}
		solve();
	}	
	return 0;
}

DSA09007

// created: 2023-05-26 23:29:50
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

ll n, k;
const ll mod = 1e9 + 7;
const int mxN = 1001;
vector<int> adj[mxN];
bool visited[mxN];
int V, E, S, T;
int par[mxN];

void dfs(int u = S){
	visited[u] = true;
	for(int v : adj[u]){
		if(!visited[v]){
			par[v] = u;
			dfs(v);
		}
	}
}

void bfs(){
	queue<int> q;
	q.push(S);
	visited[S] = true;
	while(!q.empty()){
		int u = q.front(); q.pop();
		for(int v : adj[u]){
			if(!visited[v]){
				par[v] = u;
				q.push(v);
				visited[v] = true;
			}
		}
	}
}
void solve(){
	memset(par, 0, sizeof(par));
	bfs();
	if(!visited[T]){
		cout << -1 << '\n';
		return;
	}
	vector<int> path;
	while(S != T){
		path.push_back(T);
		T = par[T];
	}
	path.push_back(S);
	reverse(path.begin(), path.end());
	for(int i : path){
		cout << i << ' ';
	}
	cout << '\n';
}

int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		memset(adj, {}, sizeof(adj));
		memset(visited, false, sizeof(visited));
		cin >> V >> E >> S >> T;
		for(int i = 0; i < E; ++i){
			int a, b;
			cin >> a >> b;
			adj[a].push_back(b);
			adj[b].push_back(a);
		}
		solve();
	}	
	return 0;
}


DSA09008

// created: 2023-05-26 23:30:03
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

ll n, k;
const ll mod = 1e9 + 7;
const int mxN = 1001;
vector<int> adj[mxN];
bool visited[mxN];
int V, E, S, T;
int par[mxN];

void dfs(int u){
	visited[u] = true;
	for(int v : adj[u]){
		if(!visited[v]){
			dfs(v);
		}
	}
}

void solve(){
	int cnt = 0;
	for(int i = 1; i <= V; ++i){
		if(!visited[i]){
			dfs(i);
			++cnt;
		}
	}	
	cout << cnt << '\n';
}

int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		memset(adj, {}, sizeof(adj));
		memset(visited, false, sizeof(visited));
		cin >> V >> E;
		for(int i = 0; i < E; ++i){
			int a, b;
			cin >> a >> b;
			adj[a].push_back(b);
			adj[b].push_back(a);
		}
		solve();
	}	
	return 0;
}



DSA09009

// created: 2023-05-26 23:30:24
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

ll n, k;
const ll mod = 1e9 + 7;
const int mxN = 1001;
vector<int> adj[mxN];
bool visited[mxN];
int V, E, S, T;
int par[mxN];

void dfs(int u){
	visited[u] = true;
	for(int v : adj[u]){
		if(!visited[v]){
			dfs(v);
		}
	}
}

void solve(){
	int cnt = 0;
	for(int i = 1; i <= V; ++i){
		if(!visited[i]){
			dfs(i);
			++cnt;
		}
	}	
	cout << cnt << '\n';
}

int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		memset(adj, {}, sizeof(adj));
		memset(visited, false, sizeof(visited));
		cin >> V >> E;
		for(int i = 0; i < E; ++i){
			int a, b;
			cin >> a >> b;
			adj[a].push_back(b);
			adj[b].push_back(a);
		}
		solve();
	}	
	return 0;
}



DSA09010

// created: 2023-05-26 23:30:54
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

ll n, k;
const ll mod = 1e9 + 7;
const int mxN = 1001;
vector<int> adj[mxN];
bool visited[mxN];
int V, E, S, T;
int par[mxN];

void dfs(int u = 1){
	visited[u] = true;
	for(int v : adj[u]){
		if(!visited[v]){
			dfs(v);
		}
	}
}

void solve(){
	bool flag = true;
	dfs();
	for(int i = 1; i <= V; ++i){
		if(!visited[i])
			flag = false;
	}
	cout << (flag ? "YES" : "NO") << '\n';
}

int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		memset(adj, {}, sizeof(adj));
		memset(visited, false, sizeof(visited));
		cin >> V >> E;
		for(int i = 0; i < E; ++i){
			int a, b;
			cin >> a >> b;
			adj[a].push_back(b);
		}
		solve();
	}	
	return 0;
}



DSA09011

// created: 2023-05-26 23:31:07
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll mod = 1e9 + 7;
const int mxN = 1001;
vector<int> adj[mxN];
bool visited[mxN];
int V, E, S, T;
int n, m;
int par[mxN];
int mat[mxN][mxN];
int dx[8] = {1, 0, 0, -1, 1, 1, -1, -1};
int dy[8] = {0, 1, -1, 0, 1, -1, 1, -1};

void dfs(int x, int y){
	mat[x][y] = 0;
	for(int i = 0; i < 8; ++i){
		int xx = x + dx[i];
		int yy = y + dy[i];
		if(xx >= 0 && yy >= 0 && xx < n && yy < m && mat[xx][yy] == 1)
			dfs(xx, yy);
	}
}

void solve(){
	int cnt = 0;
	for(int i = 0; i < n; ++i){
		for(int j = 0; j < m; ++j){
			if(mat[i][j] == 1){
				dfs(i, j);
				++cnt;
			}
		}
	}
	cout << cnt << '\n';
		
}

int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		memset(mat, 0, sizeof(mat));
		cin >> n >> m;	
		for(int i = 0; i < n; ++i){
			for(int j = 0; j < m; ++j){
				cin >> mat[i][j];
			}
		}
		solve();
	}	
	return 0;
}


DSA09012

// created: 2023-05-26 23:31:58
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll mod = 1e9 + 7;
const int mxN = 1001;
vector<int> adj[mxN];
bool visited[mxN];
int V, E, S, T;
int par[mxN];
int mat[mxN][mxN];
int dx[8] = {1, 0, 0, -1, 1, 1, -1, -1};
int dy[8] = {0, 1, -1, 0, 1, -1, 1, -1};

void dfs(int u){
	visited[u] = true;
	for(int v : adj[u]){
		if(!visited[v])
			dfs(v);
	}
}

void solve(){
	
	for(int i = 1; i <= V; ++i){
		int cnt = 0;
		memset(visited, false, sizeof(visited));
		visited[i] = true;
		for(int j = 1; j <= V; ++j){
			if(!visited[j]){
				dfs(j);
				++cnt;
			}
		}
		if(cnt >= 2){
			cout << i << ' ';
		}	
	}
	cout << '\n';
}

int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		memset(adj, {}, sizeof(adj));
		cin >> V >> E;
		for(int i = 0; i < E; ++i){
			int a, b;
			cin >> a >> b;
			adj[a].push_back(b);
			adj[b].push_back(a);
		}	
		solve();
	}	
	return 0;
}


DSA09013

// created: 2023-05-26 23:26:55
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;
 
typedef long long ll;

const int mxN = 1e3;
vector<int> adj[mxN];
bool visited[mxN];
int n, m;
int low[mxN];
int ids[mxN];
int id;
set<pair<int,int>> res;

void dfs(int u = 0, int p = -1){
	visited[u] = true;
	low[u] = ids[u] = id++;
	for(int v: adj[u]){
		if(v == p) continue;
		if(!visited[v]){
			dfs(v, u);
			low[u] = min(low[u], low[v]);
		   	if(ids[u] < low[v]){
				int x = u, y = v;
				if(x > y) swap(x, y);
				res.insert({x,y});
			}
		}
		else
			low[u] = min(low[u], ids[v]);
	}
}

int main(){
 
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		res.clear();
		id = 0;
		cin >> n >> m;
		for(int i = 0; i < n; ++i){
			adj[i].clear();
			visited[i] = false;
			low[i] = ids[i] = -1;
		}
		for(int i = 0; i < m; ++i){
			int u, v;
			cin >> u >> v; --u, --v;
			adj[u].push_back(v);
			adj[v].push_back(u);
		}
		dfs();
		for(auto i: res)
			cout << i.first + 1 << ' ' << i.second + 1<< ' ';
		cout << '\n';
	}	

	return 0;
}

DSA09014

// created: 2023-05-26 23:32:15
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const int mxN = 1001;
vector<int> adj[mxN];
int V, E;
bool flag;
bool visited[mxN];

bool dfs(int u, int p = 0){
	visited[u] = true;
	for(int v: adj[u]){
		if(!visited[v]){
			if(dfs(v, u)) return true;
		}else if(v != p) return true;
	}
	return false;
}

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		flag = false;
		memset(adj, {}, sizeof(adj));
		memset(visited, false, sizeof(visited));
		cin >> V >> E;
		for(int i = 0; i < E; ++i){
			int u, v;
			cin >> u >> v;
			adj[u].push_back(v);
			adj[v].push_back(u);
		}
		bool flag = false;
		for(int i = 1; i <= V; ++i){
			if(!visited[i])
				if(dfs(i)) flag = true;
		}
		if(flag)
			cout << "YES";
		else
			cout << "NO";
		cout << '\n';
	
	}

	return 0;
}

DSA09015

// created: 2023-05-26 23:32:26
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll mod = 1e9 + 7;
const int mxN = 1001;
vector<int> adj[mxN];
bool visited[mxN];
int V, E, S, T;
int color[mxN];

bool dfs(int u){
	
	color[u] = 1;	
	for(int v : adj[u]){
		if(color[v] == 0){
			dfs(v);
		}
		else if(color[u] == 1) return true;
	}
	color[u] = 2;
	return false;
}

int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		memset(adj, {}, sizeof(adj));
		memset(visited, false, sizeof(visited));
		cin >> V >> E;
		for(int i = 0; i < E; ++i){
			int a, b;
			cin >> a >> b;
			adj[a].push_back(b);
		}	
		bool flag= false;
		for(int i = 1; i <= V; ++i){
			memset(color, 0, sizeof(color));
			if(dfs(i))
				flag = true;
		}
		cout << (flag ? "YES" : "NO") << '\n';
	}	
	return 0;
}


DSA09016

// created: 2023-05-26 23:32:38
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll mod = 1e9 + 7;
const int mxN = 1001;
vector<int> adj[mxN];
bool visited[mxN];
int V, E, S, T;
int color[mxN];

bool dfs(int u){
	
	color[u] = 1;	
	for(int v : adj[u]){
		if(color[v] == 0){
			dfs(v);
		}
		else if(color[u] == 1) return true;
	}
	color[u] = 2;
	return false;
}

int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		memset(adj, {}, sizeof(adj));
		memset(visited, false, sizeof(visited));
		cin >> V >> E;
		for(int i = 0; i < E; ++i){
			int a, b;
			cin >> a >> b;
			adj[a].push_back(b);
		}	
		bool flag= false;
		for(int i = 1; i <= V; ++i){
			memset(color, 0, sizeof(color));
			if(dfs(i))
				flag = true;
		}
		cout << (flag ? "YES" : "NO") << '\n';
	}	
	return 0;
}

DSA09017

// created: 2023-05-26 23:32:49
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const int mxN = 1001;
vector<int> adj[mxN];
int V, E, n;
bool flag;
bool visited[mxN];
int sz[mxN];
int par[mxN];

void make_set(){
	for(int i = 1; i <= n; ++i){
		sz[i] = 1;
		par[i] = i;
	}
}

int Find(int u){
	if(u == par[u]) return u;
	return par[u] = Find(par[u]);
}

bool Union(int x, int y){
	x = Find(x);
	y = Find(y);
	if(x == y) return false;
	if(sz[x] < sz[y]) swap(x,y);
	sz[x] += y;
	par[y] = x;
	return true;
}

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		flag = true;
		cin >> n;
		make_set();	
		for(int i = 0; i < n - 1; ++i){
			int u, v;
			cin >> u >> v;
			if(!Union(u,v)) flag = false;
		}
		if(flag)
			cout << "YES";
		else
			cout << "NO";
		cout << '\n';
	}

	return 0;
}


DSA09020

// created: 2023-05-26 23:27:10
// author: Nguyen Tung Duong

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

const int mxN = 1001;
const ll mod = 1e9 + 7;

bool visited[mxN];
vector<pair<int, int>> edges;
vector<int> adj[mxN];
void dfs(int s, int t, int u){
	visited[u] = true;
	for(int v: adj[u]){
		if(u == s && v == t || u == t && v == s) continue;
		if(!visited[v])
			dfs(s, t, v);
	}
}

int main()
{

	#ifndef ONLINE_JUDGE
    freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
	#endif

    ios_base::sync_with_stdio(false);
    cin.tie(0);

  	int n;
	cin >> n;
	cin.ignore();
	int mat[mxN][mxN];
	memset(mat, 0, sizeof(mat));
	for(int i = 1; i <= n; ++i){
		string s;
		getline(cin, s);

		stringstream ss(s);
		int k;
		while(ss >> k){
			mat[i][k] = 1;
		}	
	}
	for(int i = 1; i <= n; ++i){
		for(int j = 1; j <= n; ++j){
			cout << mat[i][j] << ' ';
		}
		cout << '\n';
	}
	
    return 0;
}


DSA09021


// created: 2023-05-26 23:27:54
// author: Nguyen Tung Duong

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

const int mxN = 1001;
const ll mod = 1e9 + 7;

bool visited[mxN];
vector<pair<int, int>> edges;
vector<int> adj[mxN];
void dfs(int s, int t, int u){
	visited[u] = true;
	for(int v: adj[u]){
		if(u == s && v == t || u == t && v == s) continue;
		if(!visited[v])
			dfs(s, t, v);
	}
}

int main()
{

	#ifndef ONLINE_JUDGE
    freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
	#endif

    ios_base::sync_with_stdio(false);
    cin.tie(0);

  	int n;
	cin >> n;
	int mat[mxN][mxN];
	memset(mat, 0, sizeof(mat));
	for(int i = 1; i <= n; ++i){
		for(int j = 1; j <= n; ++j){
			cin >> mat[i][j];
			if(mat[i][j] == 1 && i < j){
				adj[i].push_back(j);
				adj[j].push_back(i);
			}
		}
	}	
	for(int i = 1; i <= n; ++i){
		for(int j : adj[i]){
			cout << j << ' ';
		}
		cout << '\n';
	}
	
    return 0;
}



DSA09022

// created: 2023-05-26 23:28:06
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const int mxN = 1001;
vector<int> adj[mxN];
bool visited[mxN];

int V, E, U;
void dfs(int u = U){
	cout << u << ' ';
	visited[u] = true;
	for(int v : adj[u]){
		if(!visited[v]){
			dfs(v);
		}
	}	
}

void bfs(){
	queue<int> q;
	q.push(U);
	visited[U] = true;
	while(!q.empty()){
		int fr = q.front(); q.pop();
		cout << fr << ' ';
		for(int v: adj[fr]){
			if(!visited[v]){
				visited[v] = true;
				q.push(v);
			}
		}
	}
}

int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;
	while(t--){
		memset(adj, {}, sizeof(adj));
		memset(visited, false, sizeof(visited));
		cin >> V >> E >> U;
			
		int a, b;
		for(int i = 0; i < E; ++i){
			cin >> a >> b;
			adj[a].push_back(b);
		}
		dfs();
		cout << '\n';

	
	}
	return 0;
}

DSA09024

// created: 2023-05-26 23:28:19
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const int mxN = 1001;
vector<int> adj[mxN];
bool visited[mxN];

int V, E, U;
void dfs(int u = U){
	cout << u << ' ';
	visited[u] = true;
	for(int v : adj[u]){
		if(!visited[v]){
			dfs(v);
		}
	}	
}

void bfs(){
	queue<int> q;
	q.push(U);
	visited[U] = true;
	while(!q.empty()){
		int fr = q.front(); q.pop();
		cout << fr << ' ';
		for(int v: adj[fr]){
			if(!visited[v]){
				visited[v] = true;
				q.push(v);
			}
		}
	}
}

int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;
	while(t--){
		memset(adj, {}, sizeof(adj));
		memset(visited, false, sizeof(visited));
		cin >> V >> E >> U;
			
		int a, b;
		for(int i = 0; i < E; ++i){
			cin >> a >> b;
			adj[a].push_back(b);
		}
		bfs();
		cout << '\n';

	
	}
	return 0;
}

DSA09025


// created: 2023-05-26 23:28:30
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const int mxN = 1001;
vector<int> adj[mxN];
bool visited[mxN];
int par[mxN];
int V, E, U, D;
void dfs(int u = U){
	visited[u] = true;
	for(int v : adj[u]){
		if(!visited[v]){
			par[v] = u;
			dfs(v);
		}
	}	
}

void bfs(){
	queue<int> q;
	q.push(U);
	visited[U] = true;
	while(!q.empty()){
		int fr = q.front(); q.pop();
		cout << fr << ' ';
		for(int v: adj[fr]){
			if(!visited[v]){
				visited[v] = true;
				q.push(v);
			}
		}
	}
}

void solve(){
	dfs();
	if(!visited[D]){
		cout << -1;
		return;
	}	
	vector<int> path;
	while(D != U){
		path.push_back(D);
		D = par[D];
	}
	path.push_back(D);
	for(int i = path.size() - 1; i >= 0; --i){
		cout << path[i] << ' ';
	}
}

int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;
	while(t--){
		memset(adj, {}, sizeof(adj));
		memset(visited, false, sizeof(visited));
		cin >> V >> E >> U >> D;
			
		int a, b;
		for(int i = 0; i < E; ++i){
			cin >> a >> b;
			adj[a].push_back(b);
		}
		solve();
		cout << '\n';

	
	}
	return 0;
}

DSA09026

// created: 2023-05-26 23:28:44
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const int mxN = 1001;
vector<int> adj[mxN];
bool visited[mxN];
int par[mxN];
int V, E, U, D;
void dfs(int u = U){
	visited[u] = true;
	for(int v : adj[u]){
		if(!visited[v]){
			par[v] = u;
			dfs(v);
		}
	}	
}

void bfs(){
	queue<int> q;
	q.push(U);
	visited[U] = true;
	while(!q.empty()){
		int fr = q.front(); q.pop();
		for(int v: adj[fr]){
			if(!visited[v]){
				visited[v] = true;
				par[v] = fr;
				q.push(v);
			}
		}
	}
}

void solve(){
	bfs();
	if(!visited[D]){
		cout << -1;
		return;
	}	
	vector<int> path;
	while(D != U){
		path.push_back(D);
		D = par[D];
	}
	path.push_back(D);
	for(int i = path.size() - 1; i >= 0; --i){
		cout << path[i] << ' ';
	}
}

int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;
	while(t--){
		memset(adj, {}, sizeof(adj));
		memset(visited, false, sizeof(visited));
		cin >> V >> E >> U >> D;
			
		int a, b;
		for(int i = 0; i < E; ++i){
			cin >> a >> b;
			adj[a].push_back(b);
		}
		solve();
		cout << '\n';

	
	}
	return 0;
}

DSA09027

// created: 2023-05-26 23:28:55
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const int mxN = 1001;
vector<int> adj[mxN];
bool visited[mxN];
int par[mxN];
int V, E, U, D;
void dfs(int u){
	visited[u] = true;
	for(int v : adj[u]){
		if(!visited[v]){
			dfs(v);
		}
	}	
}

void bfs(){
	queue<int> q;
	q.push(U);
	visited[U] = true;
	while(!q.empty()){
		int fr = q.front(); q.pop();
		for(int v: adj[fr]){
			if(!visited[v]){
				visited[v] = true;
				q.push(v);
			}
		}
	}
}

void solve(){
	memset(visited,false, sizeof(visited));
	dfs(U);
	if(visited[D]){
		cout << "YES";
	}else
	    cout << "NO";
}

int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;
	while(t--){
		memset(adj, {}, sizeof(adj));
		memset(par, 0, sizeof(par));
		cin >> V >> E;
		int a,b;
		for(int i = 0; i < E; ++i){
			cin >> a >> b;
			adj[a].push_back(b);
			adj[b].push_back(a);
		}
		int q;
		cin >> q;
		while(q--){
		    memset(visited, false, sizeof(visited));
			cin >> U >> D;
			solve();
			cout << '\n';
		}
	
	}
	return 0;
}


DSA09028

// created: 2023-05-26 23:33:01
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

const int mxN = 20;
int V, E, M;

int a[mxN][mxN];
int color[mxN];

bool check(int u, int clr){
	for(int i = 1; i <= V; ++i){
		if(a[u][i] && clr == color[i]){
			return false;	
		}	
	}
	return true;
}

bool Try(int u = 1){
	
	if(u == V + 1) return true;	
	for(int clr = 1; clr <= M; ++clr){
		if(check(u, clr)){
			color[u] = clr;
			if(Try(u + 1)) return true;	
			color[u] = 0;
		}

	}
	return false;
}

int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;
	
	while(t--){
		cin >> V >> E >> M;
		memset(a, 0, sizeof(a));
		memset(color, 0, sizeof(color));
		for(int i = 0; i < E; ++i){
			int u, v;
			cin >> u >> v;
			a[u][v] = 1;	
			a[v][u] = 1;
		}		
		cout << (Try() ? "YES" : "NO") << '\n';	
	}
	return 0;
}



DSA09029

// created: 2023-05-26 23:33:44
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const int mxN = 501;
int a[mxN][mxN];
bool visited[mxN];
int V, E;
bool flag = false;

void Try(int j = 0, vector<int> x = {}){
	if(j == V){
		flag = true;
		return;
	}	
	for(int i =	1; i <= 10; ++i){
		if(flag) return;
		if(x.size() == 0){
			x.push_back(i);
			visited[i] = true;
			Try(j + 1, x);
			visited[i] = false;
			x.pop_back();
		}else if(!visited[i] && a[x.back()][i]){
			visited[i] = true;
			x.push_back(i);
			Try(j + 1, x);
			visited[i] = false;
			x.pop_back();
		}
	}
}

int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		flag = false;
		memset(a, 0, sizeof(a));
		memset(visited, false, sizeof(visited));
		cin >> V >> E;
		for(int i = 0; i < E; ++i){
			int u, v;
			cin >> u >> v;
			a[u][v] = 1;
			a[v][u] = 1;
		}	
		Try();
		cout << (flag ? 1 : 0) << '\n';
	}

	return 0;
}








DSA09030

// created: 2023-05-26 23:33:57
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const int mxN = 1001;
vector<int> adj[mxN];
int V, E, n;
bool flag;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		memset(adj, {}, sizeof(adj));
		cin >> V >> E;
		for(int i = 0; i < E; ++i){
			int u, v;
			cin >> u >> v;
			adj[u].push_back(v);
			adj[v].push_back(u);
		}		
		vector<int> side(V + 1, -1);
		queue<int> q;
		flag = true;
		for(int i = 1; i <= V; ++i){
			if(side[i] == -1){
				side[i] = 0;
				q.push(i);
				while(!q.empty()){
					int u = q.front(); q.pop();
					for(int v: adj[u]){
						if(side[v] == -1){
							side[v] = side[u] ^ 1;
							q.push(v);
						}else{
							flag &= (side[v] ^ side[u]);
						}
					}
				}
			}
		}
		if(flag)
			cout << "YES";
		else
			cout << "NO";
		cout << '\n';
	}

	return 0;
}



DSA09031

// created: 2023-05-26 23:35:21
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

ll n, k, m;

const int mxN = 101;

set<pair<pair<ll,ll>, pair<ll,ll>>> ok;
bool visited[mxN][mxN];
ll a[mxN][mxN];
vector<pair<ll,ll>> p;
ll dx[4] = {0,0,1,-1};
ll dy[4] = {1,-1,0,0};

ll bfs(pair<ll,ll> p1){
	ll res = 0;	
	queue<pair<ll,ll>> q;
	q.push(p1);
	visited[p1.first][p1.second] = true;
	while(!q.empty()){
		pair<ll,ll> fr = q.front(); q.pop();
		ll x = fr.first;
		ll y = fr.second;

		res += a[x][y];
		for(ll i = 0; i < 4; ++i){
			ll xx = x + dx[i];
			ll yy = y + dy[i];
			pair<ll,ll> tmp = {xx, yy};
			if(xx <= n && yy <= n && xx >= 1 && yy >= 1 && !visited[xx][yy] && ok.find({fr, tmp}) == ok.end()){
				visited[xx][yy] = true;
				q.push({xx,yy});
			}
		}
	}
	return res * (res - 1) / 2;
}

int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	memset(a, 0, sizeof(a));	
	memset(visited, false, sizeof(visited));	
	cin >> n >> k >> m;
	for(ll i = 0; i < m; ++i){
		ll x1, y1, x2, y2;
		cin >> x1 >> y1 >> x2 >> y2;
		ok.insert({{x1,y1}, {x2, y2}});
		ok.insert({{x2, y2}, {x1, y1}});
	}
	for(ll i = 0; i < k; ++i){
		ll x, y;
		cin >> x >> y;		
		p.push_back({x,y});
		a[x][y]++;
	}
	ll cnt = k * (k - 1) / 2;
	for(ll i = 0; i < k; ++i){
		if(!visited[p[i].first][p[i].second]){
			cnt -= bfs(p[i]);
		};
	}
	cout << cnt;
	return 0;
}



DSA09032

// created: 2023-05-26 23:34:16
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const int mxN = 100001;
vector<int> adj[mxN];
int V, E;
bool flag;
bool visited[mxN];
int sz[mxN];
int par[mxN];

void make_set(){
	for(int i = 1; i <= V; ++i){
		sz[i] = 1;
		par[i] = i;
	}
}

int Find(int u){
	if(u == par[u]) return u;
	return par[u] = Find(par[u]);
}

void Union(int x, int y){
	x = Find(x);
	y = Find(y);
	if(x == y) return;
	if(sz[x] < sz[y]) swap(x,y);
	sz[x] += sz[y];
	par[y] = x;
}

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		cin >> V >> E;
		make_set();
		for(int i = 0; i < E; ++i){
			int u, v;
			cin >> u >> v;
			Union(u,v);
		}
		int res = 1;
		for(int i = 1; i <= V; ++i){
			res = max(res, sz[i]);
		}
		cout << res << '\n';
	}

	return 0;
}

DSA09033

// created: 2023-05-26 23:34:28
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

ll n, k;
const ll mod = 1e9 + 7;
const int mxN = 100001;
vector<int> adj[mxN];
bool visited[mxN];
int V, E, S, T;
int par[mxN];

void dfs(int u = 1){
	visited[u] = true;
	for(int v : adj[u]){
		if(!visited[v]){
			dfs(v);
		}
	}
}

void solve(){
	bool flag = true;
	dfs();
	for(int i = 1; i <= V; ++i){
		if(!visited[i])
			flag = false;
	}
	cout << (flag ? "YES" : "NO") << '\n';
}

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		memset(adj, {}, sizeof(adj));
		memset(visited, false, sizeof(visited));
		cin >> V >> E;
		for(int i = 0; i < E; ++i){
			int a, b;
			cin >> a >> b;
			adj[a].push_back(b);
		}
		solve();
	}	
	return 0;
}


DSA09034

// created: 2023-05-26 23:35:36
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll mod = 1e9 + 7;
const int mxN = 1001;
vector<int> adj[mxN];
bool visited[mxN];
int V, E, S, T;
int n, m;
int par[mxN];
char mat[mxN][mxN];
int dx[8] = {1, 0, 0, -1, 1, 1, -1, -1};
int dy[8] = {0, 1, -1, 0, 1, -1, 1, -1};

void dfs(int x, int y){
	mat[x][y] = '.';
	for(int i = 0; i < 8; ++i){
		int xx = x + dx[i];
		int yy = y + dy[i];
		if(xx >= 0 && yy >= 0 && xx < n && yy < m && mat[xx][yy] == 'W')
			dfs(xx, yy);
	}
}

void solve(){
	int cnt = 0;
	for(int i = 0; i < n; ++i){
		for(int j = 0; j < m; ++j){
			if(mat[i][j] == 'W'){
				dfs(i, j);
				++cnt;
			}
		}
	}
	cout << cnt << '\n';
		
}

int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	memset(mat, '.', sizeof(mat));
	cin >> n >> m;	
	for(int i = 0; i < n; ++i){
		for(int j = 0; j < m; ++j){
			cin >> mat[i][j];
		}
	}
	solve();
	return 0;
}


DSA09037

// created: 2023-05-26 23:36:02
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const int mxN = 1001;
vector<int> adj[mxN];
bool visited[mxN];
vector<int> a;
int k, n, m;
unordered_map<int,int> cnt;

void dfs(int u){
	visited[u] = true;
	cnt[u]++;
	for(int v: adj[u]){
		if(!visited[v]){
			dfs(v);
		}
	}
}

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);
	
	cin >> k >> n >> m;

	a.resize(k);
	for(int i = 0; i < k; ++i){
		cin >> a[i];
	}
	for(int i = 0; i < m; ++i){
		int x, y;
		cin >> x >> y;
		adj[x].push_back(y);
	}

	for(int i = 0; i < k; ++i){
		memset(visited, false, sizeof(visited));
		dfs(a[i]);
	}
	int res = 0;
	for(auto p: cnt){
		if(p.second == k){
			++res;
		}
	}
	cout << res;
	return 0;
}


DSA09049

// created: 2023-05-26 23:36:19
// author: Nguyen Tung Duong


#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const int mxN = 200001;
vector<int> adj[mxN];
vector<ll> d(mxN);
vector<ll> c(mxN);
int n;

void dfs(int u = 1){
	for(int v: adj[u]){
		dfs(v);
		c[u] += c[v];
		d[u] += d[v] + c[v];
	}
	d[u]++;
	c[u]++;
}

int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	cin >> n;
	for(int i = 2; i <= n; ++i){
		int x;
		cin >> x;
		adj[x].push_back(i);	
	}
	dfs();
	for(int i = 1; i <= n; ++i){
		cout << d[i] << ' ';
	}
	return 0;
}




DSA10003

// created: 2023-05-26 23:34:44
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const int mxN = 1001;
vector<int> adj[mxN];
int V, E;
bool flag;
bool visited[mxN];
int sz[mxN];
int par[mxN];

void make_set(){
	for(int i = 1; i <= V; ++i){
		sz[i] = 1;
		par[i] = i;
	}
}

int Find(int u){
	if(u == par[u]) return u;
	return par[u] = Find(par[u]);
}

bool Union(int x, int y){
	x = Find(x);
	y = Find(y);
	if(x == y) return true;
	if(sz[x] < sz[y]) swap(x,y);
	sz[x] += sz[y];
	par[y] = x;
	return false;
}

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		flag = false;
		cin >> V >> E;
		make_set();
		for(int i = 0; i < E; ++i){
			int u, v;
			cin >> u >> v;
			if(Union(u,v)) flag = true;
		}
		if(flag)
			cout << "YES";
		else
			cout << "NO";
		cout << '\n';

	}

	return 0;
}

DSA10004

// created: 2023-05-26 23:29:10
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

ll n, k;
const ll mod = 1e9 + 7;
const int mxN = 1001;
vector<int> adj[1001];
int V, E;
int deg[mxN];

void solve(){
	for(int i = 1; i <= V; ++i){
		deg[i] = adj[i].size();
	}
	bool flag1 = true;
	bool flag2 = true;
	int cnt = 0;
	for(int i = 1; i <= V; ++i){
		if(deg[i] & 1){
			flag2 = false;
			cnt++;
		}
	}


	if(cnt != 0 && cnt != 2){
		flag1 = false;
	}
	if(flag2){
		cout << 2 << '\n';
	}else if(flag1){
		cout << 1 << '\n';
	}else
		cout << 0 << '\n';
}

int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		memset(deg, 0, sizeof(deg));
		memset(adj, {}, sizeof(adj));
		cin >> V >> E;
		for(int i = 0; i < E; ++i){
			int a, b;
			cin >> a >> b;
			adj[a].push_back(b);
			adj[b].push_back(a);
		}
		solve();
	}	
	return 0;
}


DSA10005

// created: 2023-05-26 23:29:26
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

ll n, k;
const ll mod = 1e9 + 7;
const int mxN = 1001;
vector<int> adj[1001];
int V, E;
int indeg[mxN];
int outdeg[mxN];
void solve(){
	for(int i = 1; i <= V; ++i){
		outdeg[i] = adj[i].size();
		for(int v : adj[i]){
			indeg[v]++;
		}
	}
	int cnt = 0;
	for(int i = 1; i <= V; ++i){
		if(indeg[i] == outdeg[i])
			++cnt;
	}	
	if(cnt == V){
		cout << 1 << '\n';
	}else
		cout << 0 << '\n';
}

int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		memset(outdeg, 0, sizeof(outdeg));
		memset(indeg, 0, sizeof(indeg));
		memset(adj, {}, sizeof(adj));
		cin >> V >> E;
		for(int i = 0; i < E; ++i){
			int a, b;
			cin >> a >> b;
			adj[a].push_back(b);
		}
		solve();
	}	
	return 0;
}


TN05009

// created: 2023-05-26 23:35:08
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const int mxN = 1001;
vector<int> adj[mxN];
int V, E;
bool flag;
int color[mxN];

void dfs(int u = 1, int p = 0, vector<int> cycle = {1}){
		
	color[u] = 1;
	for(int v: adj[u]){
		if(flag) return;
		if(color[v] == 0){
			cycle.push_back(v);
			dfs(v, u, cycle);
			cycle.pop_back();
		}else if(color[v] == 1 && v != p){
			if(v == 1){
				flag = true;
				for(int i : cycle){
					cout << i << ' ';
				}
				cout << 1;
			}
		}
	}

	color[u] = 2;
}

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		flag = false;
		memset(color, 0, sizeof(color));
		memset(adj, {}, sizeof(adj));
		cin >> V >> E;
		for(int i = 0; i < E; ++i){
			int u, v;
			cin >> u >> v;
			adj[u].push_back(v);
			adj[v].push_back(u);
		}
		for(int i = 1; i <= V; ++i){
			sort(adj[i].begin(), adj[i].end());
		}		
		dfs();
		if(!flag)
			cout << "NO";
		cout << '\n';
	}

	return 0;
}



DSA09018 - LIỆT KÊ ĐỈNH TRỤ

// created: 2023-05-26 23:37:02
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll mod = 1e9 + 7;
const int mxN = 1001;
vector<int> adj[mxN];
bool visited[mxN];
int V, E, S, T;
int par[mxN];
int mat[mxN][mxN];
int dx[8] = {1, 0, 0, -1, 1, 1, -1, -1};
int dy[8] = {0, 1, -1, 0, 1, -1, 1, -1};

void dfs(int u){
	visited[u] = true;
	for(int v : adj[u]){
		if(!visited[v])
			dfs(v);
	}
}

void solve(){
	
	for(int i = 1; i <= V; ++i){
		int cnt = 0;
		memset(visited, false, sizeof(visited));
		visited[i] = true;
		for(int j = 1; j <= V; ++j){
			if(!visited[j]){
				dfs(j);
				++cnt;
			}
		}
		if(cnt >= 2){
			cout << i << ' ';
		}	
	}
	cout << '\n';
}

int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		memset(adj, {}, sizeof(adj));
		cin >> V >> E;
		for(int i = 0; i < E; ++i){
			int a, b;
			cin >> a >> b;
			adj[a].push_back(b);
			adj[b].push_back(a);
		}	
		solve();
	}	
	return 0;
}


DSA09019 - KIỂM TRA CHU TRÌNH

// created: 2023-05-26 23:37:18
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll mod = 1e9 + 7;
const int mxN = 1001;
vector<int> adj[mxN];
bool visited[mxN];
int V, E, S, T;

bool bfs(int U){
	
	queue<int> q;
	int par[mxN];
	q.push(U);
	visited[U] = true;
	while(!q.empty()){
		int u = q.front(); q.pop();
		for(int v: adj[u]){
			if(!visited[v]){
				visited[v] = true;
				q.push(v);
				par[v] = u;
			}else if(v != par[u]){
				return true;
			}
		}
	}
	return false;
}

int main(){

	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		memset(adj, {}, sizeof(adj));
		cin >> V >> E;
		for(int i = 0; i < E; ++i){
			int a, b;
			cin >> a >> b;
			adj[a].push_back(b);
			adj[b].push_back(a);
		}	
		bool flag = false;	
		for(int i = 1; i <= V; ++i){
			memset(visited, false, sizeof(visited));
				if(bfs(i)) flag = true;
			
		}
		cout << (flag ? "YES" : "NO") << '\n';
	}	
	return 0;
}


DSA10001 - TÌM ĐƯỜNG

// created: 2023-05-26 23:37:30
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int n, m;
int dx[4] = {0,0,1,-1};
int dy[4] = {1,-1,0,0};
vector<vector<char>> a;
int x1, _y1, x2, y2;
void bfs(){
	queue<pair<pair<int,int>,pair<int,int>>> q;
	for(int i = 0; i < 4; ++i){
		int x = x1 + dx[i];
		int y = _y1 + dy[i];
		if(x < n && y < m && x >= 0 && y >= 0 && a[x][y] == '.'){
			a[x][y] = '*';
			q.push({{x, y}, {0, i}});
		}
	}
	a[x1][_y1] = '*';
	while(!q.empty()){
		pair<pair<int,int>, pair<int,int>> fr = q.front(); q.pop();
		int x = fr.first.first;
		int y = fr.first.second;
		int step = fr.second.first;
		int dir = fr.second.second;
		if(x == x2 && y == y2){
			if(step <= 2){
				cout << "YES\n";
			}else{
				cout << "NO\n";
			}
			return;
		}
		for(int i = 0; i < 4; ++i){
			int xx = x + dx[i];
			int yy = y + dy[i];
			while(xx >= 0 && yy >= 0 && xx < n && yy < m && a[xx][yy] == '.'){
				a[xx][yy] = '*';
				q.push({{xx, yy}, {i == dir ? step : step + 1, i}});
				xx += dx[i];
				yy += dy[i];
			}
		}
	}	
	cout << "NO\n";
}

int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		cin >> n >> m;
		a.clear();
		a.resize(n, vector<char>(m));
		for(int i = 0; i < n; ++i){
			for(int j = 0; j < m; ++j){
				cin >> a[i][j];
				if(a[i][j] == 'S'){
					x1 = i, _y1 = j;
					a[i][j] = '.';
				}else if(a[i][j] == 'T'){
					x2 = i, y2 = j;
					a[i][j] = '.';
				}
			}
		}
		if(x1 == x2 && _y1 == y2){
			cout << "YES" << '\n';
		}else
			bfs();	
	}
	return 0;
}


DSA10006 - CÂY KHUNG CỦA ĐỒ THỊ THEO THUẬT TOÁN DFS

// created: 2023-05-26 23:37:43
// author: Nguyen Tung Duong

#include<iostream>
#include<vector>
#include<algorithm>
#include<cstring>
using namespace std;

struct Edge{
    int u,v;  
    Edge(int u, int v){
        this->u = u;
        this->v = v;
    }
};

const int mxN = 1001;
vector<int> adj[mxN]; 
bool visited[mxN];
int V, E, U;
vector<Edge> mst;

void dfs(int u = U){
	visited[u] = true;	
	for(int v: adj[u]){
		if(!visited[v]){
			Edge e(u,v);
			mst.push_back(e);
			dfs(v);
		}
	}
}

int main(){
    
    ios_base::sync_with_stdio(false);
    cin.tie(0);

   	int t;
	cin >> t;

	while(t--){
		mst.clear();
		memset(adj, {}, sizeof(adj));
		memset(visited, false, sizeof(visited));
		cin >> V >> E >> U;
		for(int i = 0; i < E; ++i){
			int u, v;
			cin >>u >> v;
			adj[u].push_back(v);
			adj[v].push_back(u);
		}
		dfs();
		if(mst.size() < V - 1){
			cout << -1 << '\n';
		}else{
			for(int i = 0; i < V - 1; ++i){
				cout << mst[i].u << ' ' << mst[i].v << '\n';
			}
		}
	}


    return 0;
}

DSA10007 - CÂY KHUNG CỦA ĐỒ THỊ THEO THUẬT TOÁN BFS

// created: 2023-05-26 23:38:00
// author: Nguyen Tung Duong

#include<iostream>
#include<vector>
#include<algorithm>
#include<cstring>
#include<queue>
using namespace std;

struct Edge{
    int u,v;  
    Edge(int u, int v){
        this->u = u;
        this->v = v;
    }
};

const int mxN = 1001;
vector<int> adj[mxN]; 
bool visited[mxN];
int V, E, U;
vector<Edge> mst;

void dfs(int u = U){
	visited[u] = true;	
	for(int v: adj[u]){
		if(!visited[v]){
			Edge e(u,v);
			mst.push_back(e);
			dfs(v);
		}
	}
}

void bfs(int u = U){
	queue<int> q;
	q.push(u);
	visited[u] = true;
	while(!q.empty()){
		int u = q.front(); q.pop();
		for(int v: adj[u]){
			if(!visited[v]){
				visited[v] = true;
				q.push(v);
				Edge e(u,v);
				mst.push_back(e);
			}
		}
	}
}

int main(){
    
    ios_base::sync_with_stdio(false);
    cin.tie(0);

   	int t;
	cin >> t;

	while(t--){
		mst.clear();
		memset(adj, {}, sizeof(adj));
		memset(visited, false, sizeof(visited));
		cin >> V >> E >> U;
		for(int i = 0; i < E; ++i){
			int u, v;
			cin >>u >> v;
			adj[u].push_back(v);
			adj[v].push_back(u);
		}
		bfs();
		if(mst.size() < V - 1){
			cout << -1 << '\n';
		}else{
			for(int i = 0; i < V - 1; ++i){
				cout << mst[i].u << ' ' << mst[i].v << '\n';
			}
		}
	}


    return 0;
}



DSA10008 - DIJKSTRA

// created: 2023-05-26 23:38:13
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const int mxN = 1001;
const int INF = 1e9;
int V, E, U;
vector<pair<int,int>> adj[mxN];

void dijkstra(){
	priority_queue<pair<int,int>, vector<pair<int,int>>, greater<pair<int,int>>> q;
	vector<int> dist(V + 1, INF);
	dist[U] = 0;
	q.push({0, U});
	while(!q.empty()){
		pair<int,int> x = q.top(); q.pop();
		if(x.first > dist[x.second]) continue;
		for(pair<int,int> v: adj[x.second]){
			if(dist[x.second] + v.second < dist[v.first]){
				dist[v.first] = x.first + v.second;
				q.push({dist[v.first], v.first});
			}
		}
	}
	for(int i = 1; i <= V; ++i){
		cout << dist[i] << ' ';
	}
	cout << '\n';
}

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);
	
	int t;
	cin >> t;
	while(t--){
		memset(adj, {}, sizeof(adj));
		cin >> V >> E >> U;
		for(int i = 0; i < E; ++i){
			int u, v, w;
			cin >> u >> v >> w;
			adj[u].push_back({v, w});
			adj[v].push_back({u, w});

		}
		dijkstra();
	}

	return 0;
}




DSA10009 - FLOYD

// created: 2023-05-26 23:38:38
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int V, E;
	cin >> V >> E;
	ll dp[101][101] = {};
	memset(dp, 0, sizeof(dp));
	for(int i = 0; i < E; ++i){
		int u, v, w;
		cin >> u >> v >> w;
		dp[u][v] = dp[v][u] = w;
	}
	
	for(int i = 1; i <= V; ++i){
		for(int j = 1; j <= V; ++j){
			if(i == j)
				dp[i][j] = 0;
			else if(!dp[i][j])
				dp[i][j] = 9999999999;
		}
	}

	for(int k = 1; k <= V; ++k){
		for(int i = 1; i <= V; ++i){
			for(int j = 1; j <= V; ++j){
				dp[i][j] = min(dp[i][j], dp[i][k] + dp[k][j]);
			}
		}
	}



	int q;
	cin >> q;	

	while(q--){
		int U, V;
		cin >> U >> V;
		cout << dp[U][V] << '\n';
	}

	return 0;
}


DSA10011 - DI CHUYỂN TRÊN BẢNG SỐ

// created: 2023-05-26 23:38:49
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const int mxN = 250001;
const int INF = 1e9;
int V, E, U;
int n, m;
vector<pair<int,int>> adj[mxN];
int dx[4] = {0,0,1,-1};
int dy[4] = {1,-1,0,0};
int X;
int a[501][501];
int mp(int x, int y){
	return m * (x - 1) + y;
}

void dijkstra(){
	priority_queue<pair<int,int>, vector<pair<int,int>>, greater<pair<int,int>>> q;
	vector<int> dist(V + 10, INF);
	dist[1] = X;
	q.push({X, 1});
	while(!q.empty()){
		pair<int,int> x = q.top(); q.pop();
		if(x.first > dist[x.second]) continue;
		for(pair<int,int> v: adj[x.second]){
			if(dist[x.second] + v.second < dist[v.first]){
				dist[v.first] = x.first + v.second;
				q.push({dist[v.first], v.first});
			}
		}
	}
	cout << dist[V] << '\n';
}


int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);
	
	int t;
	cin >> t;
	while(t--){
		memset(adj, {}, sizeof(adj));
		cin >> n >> m;
		V = n * m;
		for(int i = 1; i <= n; ++i){
			for(int j = 1; j <= m; ++j){
				cin >> a[i][j];
			}
		}
		X = a[1][1];
		for(int i = 1; i <= n; ++i){
			for(int j = 1; j <= m; ++j){
				for(int k = 0; k < 4; ++k){
					int ii = i + dx[k];
					int jj = j + dy[k];
					if(ii >= 1 && ii <= n && jj >= 1 && jj <= m){
						adj[mp(i,j)].push_back({mp(ii, jj), a[ii][jj]});
					}
				}
			}
		}
		dijkstra();	
	}

	return 0;
}



DSA10012 - ĐƯỜNG ĐI TRUNG BÌNH

// created: 2023-05-26 23:39:03
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll INF = 9999999999;

int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){

		int V, E;
		cin >> V >> E;
		ll dp[101][101] = {};
		memset(dp, 0, sizeof(dp));
		for(int i = 0; i < E; ++i){
			int u, v;
			cin >> u >> v;
			dp[u][v] = 1;
		}
		
		for(int i = 1; i <= V; ++i){
			for(int j = 1; j <= V; ++j){
				if(i == j)
					dp[i][j] = 0;
				else if(!dp[i][j])
					dp[i][j] = INF;
			}
		}

		for(int k = 1; k <= V; ++k){
			for(int i = 1; i <= V; ++i){
				for(int j = 1; j <= V; ++j){
					dp[i][j] = min(dp[i][j], dp[i][k] + dp[k][j]);
				}
			}
		}
		ll sum = 0;
		ll cnt = 0;
		for(int i = 1; i <= V; ++i){
			for(int j = 1; j <= V; ++j){
				if(dp[i][j] != INF && i != j){
					sum += dp[i][j];
					++cnt;
				}
			}
		}
		cout << fixed << setprecision(2) << (sum / (double) cnt) << '\n';

	}

	return 0;
}


DSA10015 - KRUSKAL

// created: 2023-05-26 23:39:18
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const int mxN = 1001;

struct Edge{
	int u, v, w;
	Edge(int u, int v, int w){
		this->u = u;
		this->v = v;
		this->w = w;
	}
};

int V, E;
vector<Edge> edges;
int par[mxN];
int sz[mxN];

int Find(int x){
	if(x == par[x]) return x;	
	return par[x] = Find(par[x]);	
}

bool Union(int x, int y){
	
	x = Find(x);
	y = Find(y);
	
	if(x == y) return false;
	if(sz[x] < sz[y]) swap(x, y);
	par[y] = x;
	return true;	
}

void Kruskal(){
	sort(edges.begin(), edges.end(), [](Edge e1, Edge e2){
		return e1.w < e2.w;
	});

	int res = 0;

	for(Edge e: edges){
		if(Union(e.u, e.v)){
			res += e.w;
		}
	}
	cout << res;
}


int main(){

	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		edges.clear();
		cin >> V >> E;
		for(int i = 0; i < E; ++i){
			int u, v, w;
			cin >> u >> v >> w;
			Edge e(u,v,w);
			edges.push_back(e);
		}		
		for(int i = 1; i <= V; ++i){
			sz[i] = 1;
			par[i] = i;
		}
		Kruskal();
		cout << '\n';
	}

	return 0;
}


DSA10016 - NỐI ĐIỂM

// created: 2023-05-26 23:39:44
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

class Point{
public:
	double x;
	double y;
};

class Edge{
public:

	int u;
	int v;
	double w;	
};

const int mxN = 1001;
int par[mxN];
int sz[mxN];
int n;
vector<Edge> E;
double dis(Point a, Point b){
	return sqrt((a.x - b.x) * (a.x - b.x) + (a.y - b.y) * (a.y - b.y));
}

void init(){
	for(int i = 1; i <= n; ++i){
		par[i] = i;
		sz[i] = 1;
	}
}

int Find(int u){
	if(par[u] == u) return u;
	return par[u] = Find(par[u]);
}

bool Union(int a, int b){
	a = Find(a);
	b = Find(b);
	if(a == b) 
		return false;
	if(sz[a] < sz[b]) 
		swap(a,b);
	par[b] = a;
	sz[a] += b;
	return true;
}

void mst(){
	init();
	sort(E.begin(), E.end(), [](Edge &e1, Edge &e2){
		return e1.w < e2.w;
	});	
	double d = 0;
	for(int i = 0; i < E.size(); ++i){
		if(Union(E[i].u, E[i].v)){
			d += E[i].w;
		}
	}
	cout << fixed << setprecision(6) << d << '\n';
}


int main(){
	
	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
	#endif
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;

	while(t--){
		memset(par, 0, sizeof(par));
		memset(sz, 0, sizeof(sz));
		E.clear();
		cin >> n;
		vector<Point> a(n + 1);
		for(int i = 1; i <= n; ++i){
			cin >> a[i].x >> a[i].y;
		}	
		for(int i = 1; i <= n - 1; ++i){
			for(int j = i + 1; j <= n; ++j){
				Edge e;
				e.u = i;
				e.v = j;
				e.w = dis(a[i], a[j]);
				E.push_back(e);
			}
		}

		mst();
	}
	return 0;
}


DSA10017 - CHU TRÌNH ÂM

// created: 2023-05-26 23:39:28
// author: Nguyen Tung Duong

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll mod = 1e9 + 7;

struct Edge{
	ll u, v, w;
};

vector<Edge> edges;
const ll mxN = 1001;
ll V, E;
bool flag;

void BellmanFord(){
	vector<ll> dist(V + 1, - 1);
	int x;
	for(int i = 0; i < V - 2; ++i){
		x = -1;
		for(Edge e: edges){
			if(dist[e.u] + e.w < dist[e.v]){
				dist[e.v] = dist[e.u] + e.w;
				x = 0;
			}
		}
	}	
	if(x == 0) flag = true;
}

int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	ll t;
	cin >> t;
	
	while(t--){
		flag = false;
		cin >> V >> E;
		edges.clear();
		for(ll i = 0; i < E; ++i){
			ll u, v, w;
			cin >> u >> v >> w;
			Edge e = {u, v, w};
			edges.push_back(e);
		}		
		BellmanFord();
		cout << (flag ? 1 : 0) << '\n';
	}
	return 0;
}

<----------------------------------------->
BINH_THONG_NHAU
#include <bits/stdc++.h>
#pragma gcc optimize("Ofast")
#define endl '\n'
using namespace std;

using ll = long long;

int parent[1000005], sz[1000005];

int t, n;

void init() {
	for (int i = 1; i <= n; i++) {
		parent[i] = i;
		sz[i] = 1;
	}
}

int Find(int u) {
	if (u == parent[u]) return u;
	else return parent[u] = Find(parent[u]);
}

bool Union(int u, int v) {
	u = Find(u);
	v = Find(v);
	if (u == v) return false;
	if (sz[u] < sz[v]) swap(u, v);
	sz[u] += sz[v];
	parent[v] = u;
	return true;
}
int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	cin >> t;
	n = t;
	init();
	for (int i = 0; i < n; i++) {
		int x, y, z;
		cin >> x >> y >> z;
		if (z == 2) {
			if (Find(x) != Find(y)) cout << "0\n";
			else cout << "1\n";
		} else {
			Union(x, y);
		}
	}
	return 0;
}
<----------------------------------------->
TINH_TOAN_GIA_TRI_BIEU_THUC
#include <bits/stdc++.h>
#pragma gcc optimize("Ofast")
#define endl '\n'
using namespace std;

using ll = long long;

ll t, n;
vector<string>v;

ll res(ll a, ll b, string c) {
	if (c == "+") return a + b;
	else if (c == "-") return a - b;
	else if (c == "*") return a * b;
	else return a / b;
}

ll so(string s) {
	ll x = 0;
	for (int i = 0; i < s.size(); i++) {
		x = x * 10 + (s[i] - '0');
	}
	return x;
}
void Tiento() {
	stack<ll>st;
	for (int i = v.size() - 1; i >= 0; i--) {
		if (v[i] != "+" && v[i] != "-" && v[i] != "*" && v[i] != "/") {
			if (v[i][0] == '-') {
				string tmp = "";
				for (int j = 1; j < v[i].size(); j++) {
					tmp += string(1, v[i][j]);
				}
				st.push(-1 * so(tmp));
			} else {
				st.push(so(v[i]));
			}
		} else {
			ll a = st.top(); st.pop();
			ll b = st.top(); st.pop();
			st.push(res(a, b, v[i]));
		}
	}
	cout << st.top() << endl;
}

void Hauto() {
	stack<ll>st;
	for (int i = 0; i < v.size(); i++) {
		if (v[i] != "+" && v[i] != "-" && v[i] != "*" && v[i] != "/") {
			if (v[i][0] == '-') {
				string tmp = "";
				for (int j = 1; j < v[i].size(); j++) {
					tmp += string(1, v[i][j]);
				}
				st.push(-1 * so(tmp));
			} else {
				st.push(so(v[i]));
			}
		} else {
			ll a = st.top(); st.pop();
			ll b = st.top(); st.pop();
			st.push(res(b, a, v[i]));
		}
	}
	cout << st.top() << endl;
}

int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	cin >> t;
	while (t--) {
		cin >> n;
		for (int i = 0; i < n; i++) {
			string s;
			cin >> s;
			v.push_back(s);
		}
		if (v[0] == "+" || v[0] == "-" || v[0] == "*" || v[0] == "/") {
			Tiento();
		} else {
			Hauto();
		}
		v.clear();
	}
	return 0;
}
<----------------------------------------->
TO_HOP
#include <bits/stdc++.h>
#pragma gcc optimize("Ofast")
#define endl '\n'
using namespace std;

using ll = long long;

int t, k;
string s;
int x[1005];
set<string>se;
void Try(int i) {
	for (int j = x[i - 1] + 1; j <= s.size() - 1 - k + i; j++) {
		x[i] = j;
		if (i == k) {
			string tmp = "";
			for (int h = 1; h <= k; h++) {
				tmp += s[x[h]];
			}
			se.insert(tmp);
		} else Try(i + 1);
	}
}
int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	cin >> t;
	while (t--) {
		cin >> s >> k;
		s = "@" + s;
		Try(1);
		for (auto &x : se) {
			cout << x << endl;
		}
		se.clear();
	}
	return 0;
}

<----------------------------------------->
DUYET_CAY_NHI_PHAN_TIM_KIEM
#include <bits/stdc++.h>
#pragma gcc optimize("Ofast")
#define endl '\n'
using namespace std;

using ll = long long;


struct node {
	int data;
	node *left;
	node *right;
	node (int val) {
		data = val;
		left = right = NULL;
	}
};

node *insert_node(node *root, int u) {
	if (root == NULL) root = new node(u);
	else {
		if (u < root->data) root->left = insert_node(root->left, u);
		else root->right = insert_node(root->right, u);
	}
	return root;
}

void postOrder(node *root) {
	if (root == NULL) return;
	cout << root->data << " ";
	postOrder(root->left);
	postOrder(root->right);
}
int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	int t;
	cin >> t;
	while (t--) {
		node *root = NULL;
		int n;
		cin >> n;
		for (int i = 0; i < n; i++) {
			int x;
			cin >> x;
			root = insert_node(root, x);
		}
		postOrder(root);
		cout << endl;
	}
	return 0;
}
<----------------------------------------->
HOAN_VI
#include <bits/stdc++.h>
#pragma gcc optimize("Ofast")
#define endl '\n'
using namespace std;

using ll = long long;

int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	int n, m;
	cin >> n >> m;
	int a[n];
	for (int i = 0; i < n; i++) {
		a[i] = i + 1;
	}
	int idx = 1;
	do {
		if (idx % m == 0) {
			for (auto &x : a) cout << x << " ";
			cout << endl;
		}
		idx++;
	} while (next_permutation(a, a + n));
	return 0;
}
<----------------------------------------->
TINH_TONG_CHI_PHI
#include <bits/stdc++.h>
#pragma gcc optimize("Ofast")
#define endl '\n'
using namespace std;

using ll = long long;

int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	ll n, k;
	cin >> n >> k;
	priority_queue<ll, vector<ll>, greater<ll>>pq;
	for (int i = 0; i < n; i++) {
		ll x;
		cin >> x;
		pq.push(x);
	}
	ll tmp = k;
	ll tien = 0;
	while (pq.size() > 1) {
		ll sum = 0, lon = 0, nho = 0;
		if (pq.size() >= k) {
			while (tmp--) {
				if (tmp == k - 1) nho = pq.top();
				if (tmp == 0) lon = pq.top();
				sum += pq.top();
				pq.pop();
			}
		} else {
			ll hoa = pq.size();
			while (!pq.empty()) {
				if (pq.size() == hoa) nho = pq.top();
				if (pq.size() == 1) lon = pq.top();
				sum += pq.top();
				pq.pop();
			}
		}
		tmp = k;
		tien += lon - nho;
		pq.push(sum);
	}
	cout << pq.top() << "\n" << tien;
	return 0;
}
<----------------------------------------->
A.NGUOI_DU_LICH
#include <bits/stdc++.h>

using namespace std;

using ll = long long;
int n, c[1005][1005], cmin = INT_MAX, visited[1005], x[1005], ans = INT_MAX;
vector<vector<int>>res;

void Try(int i, int sum) {
	for (int j = 2; j <= n; j++) {
		if (!visited[j]) {
			x[i] = j;
			visited[j] = 1;
			sum += c[x[i - 1]][x[i]];
			if (i == n) {
				if (ans > sum + c[x[i]][1]) {
					ans = sum + c[x[i]][1];
					vector<int>tmp;
					for (int k = 1; k <= i; k++) {
						tmp.push_back(x[k]);
					}
					tmp.push_back(x[1]);
					res.push_back(tmp);
				}
			} else if (sum + (n - i - 1)*cmin < ans) Try(i + 1, sum);
			visited[j] = 0;
			sum -= c[x[i - 1]][x[i]];
		}
	}
}
int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	cin >> n;
	for (int i = 1; i <= n; i++) {
		for (int j = 1; j <= n; j++) {
			cin >> c[i][j];
			cmin = min(cmin, c[i][j]);
		}
	}
	x[1] = 1;
	Try(2, 0);
	cout << "(";
	int qhoa = res.size() - 1;
	for (int i = 0; i < res[qhoa].size(); i++) {
		cout << res[qhoa][i];
		if (i != res[qhoa].size() - 1)
			cout << ",";
	}
	cout << ")\n";
	cout << ans;
	return 0;
}
<----------------------------------------->
B.KY_TU_A_B_C
#include <bits/stdc++.h>

using namespace std;

using ll = long long;

int n, m;
char x[1005], a[1005];
void init() {
	a[1] = 'A';
	a[2] = 'B';
	a[3] = 'C';
}

int cnt[1005];

map<char, int>mp;

void Try(int i) {
	for (int j = 1; j <= 3; j++) {
		x[i] = a[j];
		mp[x[i]]++;
		if (i == m) {
			if (mp['A'] > 0 && mp['B'] > 0 && mp['C'] > 0 && mp['A'] <= mp['B'] && mp['B'] <= mp['C']) {
				for (int k = 1; k <= m; k++) {
					cout << x[k];
				}
				cout << endl;
			}
		} else Try(i + 1);
		mp[x[i]] --;
	}
}
int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	init();
	cin >> n;
	for (int i = 3; i <= n; i++) {
		m = i;
		Try(1);
	}
	return 0;
}
<----------------------------------------->
C.DUNG_CUOI
#include <bits/stdc++.h>

using namespace std;

using ll = long long;

int n;
string s[1005];
string tmp;

int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	cin >> n;
	for (int i = 1; i <= n; i++) {
		cin >> s[i];
	}
	cin >> tmp;
	vector<string>v;
	for (int i = 1; i <= n; i++) {
		if (s[i] != tmp)
			v.push_back(s[i]);
	}
	sort(v.begin(), v.end());
	do {
		for (int i = 0; i < v.size(); i++) {
			cout << v[i] << " ";
		}
		cout << tmp << endl;
	} while (next_permutation(v.begin(), v.end()));
	return 0;
}
<----------------------------------------->
D.XAU_CON_NHO_NHAT
#include <bits/stdc++.h>

using namespace std;

using ll = long long;

int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	int t;
	cin >> t;
	while (t--) {
		string s;
		cin >> s;
		set<char>se;
		for (int i = 0; i < s.size(); i++) {
			se.insert(s[i]);
		}
		int k = se.size();
		map<char, int>mp;
		int l = 0, MIN = INT_MAX;
		for (int r = 0; r < s.size(); r++) {
			mp[s[r]]++;
			while (mp.size() == k) {
				MIN = min(MIN, r - l + 1);
				mp[s[l]]--;
				if (mp[s[l]] == 0) mp.erase(s[l]);
				++l;
			}
		}
		cout << MIN << endl;
	}
	return 0;
}
<----------------------------------------->
E.DAY_CON_LAP_LAI_DAI_NHAT
#include <bits/stdc++.h>

using namespace std;

using ll = long long;

int t, n;
int dp[1005][1005];
string s;
int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	int t;
	cin >> t;
	while (t--) {
		cin >> n >> s;
		for (int i = 1; i <= n; i++) {
			for (int j = 1; j <= n; j++) {
				if (s[i - 1] == s[j - 1] && j != i) {
					dp[i][j] = dp[i - 1][j - 1] + 1;
				} else {
					dp[i][j] = max(dp[i - 1][j], dp[i][j - 1]);
				}
			}
		}
		cout << dp[n][n] << endl;
		memset(dp, 0, sizeof(dp));
	}
	return 0;
}
<----------------------------------------->
F.TONG_CAC_THUA_SO_NGUYEN_TO_LON_NHAT
#include <bits/stdc++.h>

using namespace std;

using ll = long long;
const int p = 1e6;

int prime[p + 1];

void sieve() {
	for (int i = 0; i <= p; i++) {
		prime[i] = 1;
	}
	prime[0] = prime[1] = 0;
	for (int i = 0; i <= sqrt(p); i++) {
		if (prime[i]) {
			for (int j = i * i; j <= p; j += i) {
				prime[j] = 0;
			}
		}
	}
}
int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	sieve();
	int t;
	cin >> t;
	while (t--) {
		int l, r;
		cin >> l >> r;
		ll sum = 0;
		for (int i = l; i <= r; i++) {
			int MAX = 0;
			int tmp = i;
			for (int k = 1; k <= sqrt(tmp); k++) {
				if (tmp % k == 0) {
					if (prime[k]) {
						MAX = max(MAX, k);
					}
					if (prime[tmp / k]) {
						MAX = max(MAX, tmp / k);
					}
				}
			}
			sum += 1ll * MAX;
		}
		cout << sum << endl;
	}
	return 0;
}
<----------------------------------------->
G.XAU_CON_KHONG_GIAM
#include <bits/stdc++.h>

using namespace std;

using ll = long long;

int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	string s;
	cin >> s;
	int F[1005];
	int ans = INT_MIN;
	for (int i = 0; i < s.size(); i++) {
		F[i] = 1;
		for (int j = 0; j < i; j++) {
			if (s[j] <= s[i])
				F[i] = max(F[i], F[j] + 1);
		}
		ans = max(ans, F[i]);
	}
	cout << ans;
	return 0;
}
<----------------------------------------->
H.XAU_NHI_PHAN_DOI_XUNG
#include <bits/stdc++.h>

using namespace std;

using ll = long long;

string s;
int dp[5005][5005];
int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	cin >> s;
	for (int i = s.size() - 1; i >= 0; i--) {
		for (int j = i; j < s.size(); j++) {
			if (i == j) dp[i][j] = 1;
			else if (s[i] == s[j]) {
				if (j - i == 1) dp[i][j] = 1;
				else dp[i][j] = dp[i + 1][j - 1];
			}
		}
	}
	int q;
	cin >> q;
	while (q--) {
		int l, r;
		cin >> l >> r;
		if (dp[l - 1][r - 1]) cout << "YES\n";
		else cout << "NO\n";
	}
	return 0;
}
<----------------------------------------->
SO_BUOC_DI_CHUYEN_IT_NHAT
#include <bits/stdc++.h>

using namespace std;

using ll = long long;

int dx[3] = {1, 0, 1};
int dy[3] = {0, 1, 1};

int n, m;

int visited[1005][1005], A[1005][1005];

void BFS() {
	queue<pair<pair<int, int>, int>>q;
	q.push({{1, 1}, 0});
	visited[1][1] = 1;
	while (!q.empty()) {
		auto x = q.front();
		q.pop();
		if (x.first.first == n && x.first.second == m) {
			cout << x.second << endl;
			return;
		}
		int a = x.first.first, b = x.first.second;
		int step1 = 0, step2 = 0, step3 = 0;
		if (a + 1 <= n)
		{
			step1 = abs(A[a + 1][b] - A[a][b]);
		}
		if (b + 1 <= m)
		{
			step2 = abs(A[a][b + 1] - A[a][b]);
		}
		if (a + 1 <= n && b + 1 <= m)
		{
			step3 = abs(A[a][b] - A[a + 1][b + 1]);
		}
		if (!visited[a + step1][b] && (a + step1 <= n) && step1)
		{
			q.push({{a + step1, b}, x.second + 1});
			visited[a + step1][b] = 1;
		}
		if (!visited[a][b + step2] && (b + step2 <= m) && step2)
		{
			q.push({{a, b + step2}, x.second + 1});
			visited[a][b + step2] = 1;
		}
		if (!visited[a + step3][b + step3] && (a + step3 <= n) && (b + step3 <= m) && step3)
		{
			q.push({{a + step3, b + step3}, x.second + 1});
			visited[a + step3][b + step3] = 1;
		}
	}
	cout << -1 << endl;
	return;
}
int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	int t;
	cin >> t;
	while (t--) {
		cin >> n >> m;
		for (int i = 1; i <= n; i++) {
			for (int j = 1; j <= m; j++) {
				cin >> A[i][j];
			}
		}
		BFS();
		memset(visited, 0, sizeof(visited));
		memset(A, 0, sizeof(A));
	}
	return 0;
}
<----------------------------------------->
AC_4_SO_BUOC_DI_CHUYEN_IT_NHAT
#include <bits/stdc++.h>

using namespace std;

using ll = long long;

int dx[3] = {1, 0, 1};
int dy[3] = {0, 1, 1};

int n, m;

int visited[1005][1005], A[1005][1005];

void BFS() {
	queue<pair<pair<int, int>, int>>q;
	q.push({{1, 1}, 0});
	visited[1][1] = 1;
	while (!q.empty()) {
		auto x = q.front();
		q.pop();
		if (x.first.first == n && x.first.second == m) {
			cout << x.second << endl;
			return;
		}
		int a = x.first.first, b = x.first.second;
		int step1 = 0, step2 = 0, step3 = 0;
		if (a + 1 <= n)
		{
			step1 = abs(A[a + 1][b] - A[a][b]);
		}
		if (b + 1 <= m)
		{
			step2 = abs(A[a][b + 1] - A[a][b]);
		}
		if (a + 1 <= n && b + 1 <= m)
		{
			step3 = abs(A[a][b] - A[a + 1][b + 1]);
		}
		if (!visited[a + step1][b] && (a + step1 <= n) && step1)
		{
			q.push({{a + step1, b}, x.second + 1});
			visited[a + step1][b] = 1;
		}
		if (!visited[a][b + step2] && (b + step2 <= m) && step2)
		{
			q.push({{a, b + step2}, x.second + 1});
			visited[a][b + step2] = 1;
		}
		if (!visited[a + step3][b + step3] && (a + step3 <= n) && (b + step3 <= m) && step3)
		{
			q.push({{a + step3, b + step3}, x.second + 1});
			visited[a + step3][b + step3] = 1;
		}
	}
	cout << -1 << endl;
	return;
}
int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	int t;
	cin >> t;
	while (t--) {
		cin >> n >> m;
		for (int i = 1; i <= n; i++) {
			for (int j = 1; j <= m; j++) {
				cin >> A[i][j];
			}
		}
		BFS();
		memset(visited, 0, sizeof(visited));
		memset(A, 0, sizeof(A));
	}
	return 0;
}
<----------------------------------------->
CHIA_CAT_DO_THI
#include <bits/stdc++.h>
using namespace std;

using ll = long long;

int t, n, m;
vector<int> adj[1000001];
int visited[1000001];

void DFS(int u)
{
	visited[u] = 1;
	for (auto x : adj[u])
	{
		if (!visited[x])
			DFS(x);
	}
}
int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(false);
	cin.tie(nullptr);
	cout.tie(nullptr);
	cin >> t;
	while (t--) {
		cin >> n >> m;
		for (int i = 0; i < m; i++)
		{
			int x, y;
			cin >> x >> y;
			adj[x].push_back(y);
			adj[y].push_back(x);
		}
		int tplt = 0;
		for (int i = 1; i <= n; i++)
		{
			if (!visited[i])
			{
				tplt++;
				DFS(i);
			}
		}
		memset(visited, 0, sizeof(visited));
		int ans = 0;
		int pos = 0;
		int ok = 0;
		for (int i = 1; i <= n; i++)
		{
			visited[i] = 1;
			int dem = 0;
			for (int j = 1; j <= n; j++)
			{
				if (!visited[j])
				{
					dem++;
					DFS(j);
				}
			}
			if (dem > tplt) {
				ok = 1;
				if (ans < dem) {
					ans = dem;
					pos = i;
				}
			}
			memset(visited, false, sizeof(visited));
		}
		if (ok)
			cout << pos << endl;
		else cout << 0 << endl;
		memset(visited, false, sizeof(visited));
		for (int i = 1; i <= n; i++) {
			adj[i].clear();
		}
	}
	return 0;
}
<----------------------------------------->
DAT_HINH_CHU_NHAT_DON_SAC
#include <bits/stdc++.h>
#define ll long long
#pragma GCC optimize("Ofast")
const ll mod = (ll)1e9 + 7;
#define endl "\n"
#define all(v) v.begin(), v.end()
#define ms(a) memset(a, 0, sizeof(a))
#define faster()                  \
    ios_base::sync_with_stdio(0); \
    cin.tie(0);                   \
    cout.tie(0);
using namespace std;
ll max_area(ll a[], ll m)
{
    ll ans = -1;
    stack<int> st;
    for (ll i = 0; i < m; i++)
    {
        if (st.empty())
        {
            st.push(i);
        }
        else
        {
            if (a[i] >= a[st.top()])
            {
                st.push(i);
            }
            else
            {
                while (!st.empty() && a[i] < a[st.top()])
                {
                    ll top = st.top();
                    st.pop();
                    if (st.empty())
                    {
                        ans = max(ans, a[top] * i);
                    }
                    else
                    {
                        ans = max(ans, a[top] * (i - st.top() - 1));
                    }
                }
                st.push(i);
            }
        }
    }
    while (!st.empty())
    {
        ll top = st.top();
        st.pop();
        if (st.empty())
        {
            ans = max(ans, a[top] * m);
        }
        else
        {
            ans = max(ans, a[top] * (m - st.top() - 1));
        }
    }
    return ans;
}
int main()
{
    faster();
    ll n, m;
    cin >> n >> m;
    ll a[m], b[m], res = -1;
    for (auto &x : a)
        cin >> x;
    for (ll i = 0; i < m; i++)
    {
        b[i] = n - a[i];
    }
    res = max(res, max_area(a, m));
    res = max(res, max_area(b, m));
    cout << res << endl;
    return 0;
}
<----------------------------------------->
DAT_LOAI_BO_DAU_NGOAC
#include <bits/stdc++.h>

using namespace std;

using ll = long long;

int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	ll t; cin>>t;
	cin.ignore();
	while(t--)
	{
		string s; getline(cin,s);
		stack<pair<ll,ll>> st;
		ll f[256]={0};
		string res="";
		for(auto x:s) 
		{
			if(x!=' ') res+=x;
		}
		ll cnt1=0,cnt2=0;
		bool ok=false;
		for(ll i=0;i<res.size();i++)
		{
			if(res[i]=='(' && i==0)
			{
				st.push({0,-1});
			}
			else
			{
				if(res[i]=='(')
				{
					if(res[i-1]=='-')
					{
						st.push({i,1});
						cnt1++;
					}
					else
					{
						st.push({i,-1});
					}
				}
				else
				{
					if(res[i]==')')
					{
						auto top=st.top();
						st.pop();
						if(top.second==1)
						{
							if(cnt2==0 && cnt1!=0) // ko co toan hang nao
							{
								f[i]=f[top.first]=-1;
							}
							else
							{
								f[i]=f[top.first]=top.second;
								cnt1--;
								cnt2--;
								ok=false;
							}
						}
						else
						{
							f[i]=f[top.first]=top.second;
						}
					}
					else if(res[i]=='+' || res[i]=='-')
					{
						if(cnt1>=1 && ok==false)
						{
							cnt2++;
							ok=true;
						}
					}
				}
			}
		}
		for(ll i=0;i<res.size();i++)
			{
				if(res[i]=='(' || res[i]==')')
				{
					if(f[i]==1) cout<<res[i];
				}
				else cout<<res[i];
			}
			cout<<endl;

	}
	return 0;
}
<----------------------------------------->
DINH_TRU_VA_CANH_CAU_TARJAN
#include <bits/stdc++.h>

using namespace std;

using ll = long long;

int n, m;
vector<int>adj[1005];
int low[1005], disc[1005];
int cnt = 0;
int bridge = 0, articulation_point = 0;
void Tarjan(int u, int p) {
	disc[u] = low[u] = ++cnt;
	int node = (p != 0);
	for (auto &v : adj[u]) {
		if (v == p) continue;
		if (disc[v]) {
			low[u] = min(low[u], disc[v]);
		} else {
			Tarjan(v, u);
			low[u] = min(low[u], low[v]);
			if (low[v] == disc[v])
				bridge++;
			if (low[v] >= disc[u]) node++;
		}
	}
	if (node >= 2) articulation_point++;
}
int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	cin >> n >> m;
	for (int i = 0; i < m; i++) {
		int x, y;
		cin >> x >> y;
		adj[x].push_back(y);
		adj[y].push_back(x);
	}
	for (int i = 1; i <= n; i++) {
		if (!disc[i]) Tarjan(i, 0);
	}
	cout << articulation_point << " " << bridge << endl;
	return 0;
}
<----------------------------------------->
DINH_TRU_VA_CANH_CAU
#include <bits/stdc++.h>
using namespace std;

using ll = long long;

int n, m;
vector<int> adj[1000001];
int visited[1000001];
vector<pair<int, int>> edge;

void DFS(int u)
{
	visited[u] = 1;
	for (auto x : adj[u])
	{
		if (!visited[x])
			DFS(x);
	}
}

void DFS2(int u, int x, int y)
{
	visited[u] = true;
	for (auto z : adj[u])
	{
		if (z == x && u == y || z == y && u == x)
			continue;
		if (!visited[z])
		{
			DFS2(z, x, y);
		}
	}
}

int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(false);
	cin.tie(nullptr);
	cout.tie(nullptr);
	cin >> n >> m;
	for (int i = 0; i < m; i++)
	{
		int x, y;
		cin >> x >> y;
		adj[x].push_back(y);
		adj[y].push_back(x);
		edge.push_back({x, y});
	}
	int tplt = 0;
	for (int i = 1; i <= n; i++)
	{
		if (!visited[i])
		{
			tplt++;
			DFS(i);
		}
	}
	memset(visited, 0, sizeof(visited));
	int tru = 0; // Dinh tru
	for (int i = 1; i <= n; i++)
	{
		visited[i] = 1;
		int dem = 0;
		for (int j = 1; j <= n; j++)
		{
			if (!visited[j])
			{
				dem++;
				DFS(j);
			}
		}
		memset(visited, false, sizeof(visited));
		if (dem > tplt)
			tru++;
	}
	int cau = 0; // Canh cau
	for (auto e : edge)
	{
		int x = e.first, y = e.second;
		int dem = 0;
		memset(visited, false, sizeof(visited));
		for (int i = 1; i <= n; i++)
		{
			if (!visited[i])
			{
				dem++;
				DFS2(i, x, y);
			}
		}
		if (dem > tplt)
			cau++;
	}
	cout << tru << " " << cau;
	return 0;
}
<----------------------------------------->
GIANG_SO_MAY_MAN_TIEP_THEO
#include <bits/stdc++.h>

using namespace std;

int main() {
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	int a, b;
	cin >> a >> b;
	queue<long long> q;
	q.push(4);
	q.push(7);
	long long kq = 0;
	int dem = a;
	while (1) {
		long long tmp = q.front();
		q.pop();
		while (dem <= tmp && dem <= b) {
			kq += tmp;
			dem++;
		}
		if (dem > b) break;
		q.push(tmp * 10 + 4);
		q.push(tmp * 10 + 7);
	}
	cout << kq;
}
<----------------------------------------->
GIANG_VUA_VA_QUAN_MA
#include<bits/stdc++.h>
using namespace std;
using ll = long long;

int n,xm,ym,xv,yv; 
char a[1005][1005];
bool flag[1005][1005];
bool visited[1005][1005];
int dp[1005][1005];
const int mx[8] = {-1,-2,-2,-1,1,2,2,1};
const int my[8] = {-2,-1,1,2,2,1,-1,-2};
int dp1[1005][1005];
const int vx[8] = {1,-1,0,0,1,-1,1,-1};
const int vy[8] = {1,1,1,-1,-1,-1,0,0};

void BFS(int i, int j){
    queue <pair<int,int>> q;
    q.push({i,j});
    visited[i][j] = true;
    while(!q.empty()){
        pair<int,int> x = q.front();
        q.pop();
        for(int k = 0; k < 8; k++){
            int i1 = x.first + mx[k], j1 = x.second + my[k];
            if(i1 >= 1 && i1 <= n && j1 >= 1 && j1 <= n && !visited[i1][j1]){
                dp[i1][j1] = dp[x.first][x.second] + 1;
                q.push({i1,j1});
                visited[i1][j1] = true;
            }
        }
    }
}

void BFS1(int i, int j){
    queue <pair<int,int>> q;
    q.push({i,j});
    flag[i][j] = true;
    while(!q.empty()){
        pair<int,int> x = q.front();
        q.pop();
        for(int k = 0; k < 8; k++){
            int i1 = x.first + vx[k], j1 = x.second + vy[k];
            if(i1 >= 1 && i1 <= n && j1 >= 1 && j1 <= n && !flag[i1][j1]){
                dp1[i1][j1] = dp1[x.first][x.second] + 1;
                q.push({i1,j1});
                flag[i1][j1] = true;
            }
        }
    }
}

int main(){
    cin >> n;
    for(int i = 1; i <= n; i++){
        for(int j = 1; j <= n; j++){
            cin >> a[i][j];
            if(a[i][j] == '#') {
                flag[i][j] = true;
                visited[i][j] = true;
            }
            else if(a[i][j] == 'M'){
                xm = i; ym = j;
            }
            else if(a[i][j] == 'T'){
                xv = i; yv = j;
            }
        }
    }
    int ans = 1e6;
    BFS(xm,ym);
    BFS1(xv,yv);
    for(int i = 1; i <= n; i++){
        for(int j = 1; j <= n; j++){
            if(dp[i][j] == dp1[i][j] && dp[i][j] != 0){
                ans = min(ans,dp[i][j]);
            }
        }
        cout << endl;
    }
    cout << ans << endl;
}
<----------------------------------------->
HAI_THAY THE DAU NGOAC
#include <bits/stdc++.h>
using namespace std;
 
int main()
{
    int t;
    cin >> t;
    cin.ignore();
    while (t--)
    {
        string s;
        cin >> s;
        stack<int> st;     // stack nay luu vi tri cac dau sai
        int a[1005] = {0}; // a[i] = 1: Ngoac vi tri i dung/vi tri do khong la dau ngoac, a[i] = 0: Ngoac vi tri i sai
        for (int i = 0; i < s.size(); i++)
            a[i] = 0;
        for (int i = 0; i < s.size(); i++)
        {
            if (s[i] == '(')
            {
                st.push(i);
            }
            else if (s[i] == ')')
            {
                if (!st.empty())
                {
                    // Danh dau dau mo 0 dau dong la 1
                    a[i] = 1;
                    a[st.top()] = 0;
                    st.pop();
                }
                else
                {
                    a[i] = -1;
                }
            }
        }
        while (!st.empty())
        { // Trong stack toan vi tri ngoac sai
            int p = st.top();
            a[p] = -1;
            st.pop();
        }
        for (int i = 0; i < s.size(); i++)
        {
            if (s[i] == '(' || s[i] == ')')
            {
                cout << a[i];
            }
            else
                cout << s[i];
        }
        cout << endl;
    }
}
<----------------------------------------->
HAU_TO
#include <bits/stdc++.h>

using namespace std;

using ll = long long;

ll calc(ll x, ll y, string c) {
	if (c == "+") return x + y;
	else if (c == "-") return x - y;
	else if (c == "*") return x * y;
	else return x / y;
}
int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	int t;
	cin >> t;
	while (t--) {
		int n;
		cin >> n;
		vector<string>v;
		for (int i = 0; i < n; i++) {
			string s;
			cin >> s;
			v.push_back(s);
		}
		stack<ll>st;
		for (int i = 0; i < v.size(); i++) {
			if (v[i] == "+" || v[i] == "-" || v[i] == "*" || v[i] == "/") {
				ll x = st.top(); st.pop();
				ll y = st.top(); st.pop();
				st.push(calc(y, x, v[i]));
			} else {
				st.push(stoll(v[i]));
			}
		}
		cout << st.top() << endl;
	}
	return 0;
}
<----------------------------------------->
KHONG_LIEN_THONG_VOI_DINH_1_DSU_9_10
#include <bits/stdc++.h>

using namespace std;

using ll = long long;

int parent[1005];
int sz[1005];
int n, m;

void init() {
	for (int i = 1; i <= n; i++) {
		sz[i] = 1;
		parent[i] = i;
	}
}
int Find(int u) {
	if (u == parent[u]) return u;
	else return parent[u] = Find(parent[u]);
}

void Union(int u, int v) {
	v = Find(v);
	u = Find(u);
	if (u == v) return;
	if (sz[u] < sz[v]) swap(u, v);
	sz[u] += sz[v];
	parent[v] = u;
	return;
}
int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	cin >> n >> m;
	init();
	for (int i = 1; i <= m; i++) {
		int x, y;
		cin >> x >> y;
		Union(x, y);
	}
	int ok = 0;
	for (int i = 1; i <= n; i++) {
		if (parent[i] != parent[1]) {
			ok = 1;
			cout << i << endl;
		}
	}
	if (!ok) cout << 0;
	return 0;
}
<----------------------------------------->
LOAI_BO_DAU_NGOAC
#include <bits/stdc++.h>

using namespace std;

using ll = long long;

int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	int t;
	cin >> t;
	cin.ignore();
	while (t--) {
		string s2;
		getline(cin, s2);
		stack<char>st;
		string res = "";
		string s = "";
		for (char x : s2) {
			if (x != ' ') {
				s += x;
			}
		}
		for (int i = 0; i < s.length(); i++) {
			char c = s[i];
			if (isalpha(c) || c == '+' || c == '-') {
				st.push(c);
			} else if (!st.empty() && st.top() == '-' && c == '(') {
				st.push(c);
			} else if (c == ')') {
				while (!st.empty() && st.top() != '(') {
					res = string(1, st.top()) + res;
					st.pop();
				}
				if (!st.empty()) {
					res += st.top();
					st.pop();
				}
				res += ')';
			}
		}
		while (!st.empty()) {
			res = string(1, st.top()) + res;
			st.pop();
		}
		cout << res << endl;
	}
	return 0;
}
<----------------------------------------->
MAI_DAY_NGOAC_VUONG_DAI_NHAT
#include<bits/stdc++.h>
using namespace std;
int main()
{
    int t = 1;
    string s;
    while(t--)
    {
        cin >> s;
        int cnt = 0, res = 0;
        stack<pair<char, int>> st;
        st.push({'*', 0});
        for(char &i : s)
        {
            if(st.size() && ((i == ')' && st.top().first == '(') || (i == ']' &&  st.top().first == '[')))
            {
                st.pop();
                if(st.size())
                    res = max(res, cnt - st.top().second);
            }
            else
            {
                cnt += i == '[';
                st.push({i, cnt});
            }
        }
        cout << res;
    }
    return 0;
}
<----------------------------------------->
MAI_SO_THU_TU_CAP_NGOAC
#include<bits/stdc++.h>

using namespace std;
int main()
{
    int t;
    cin >> t;
    string s;
    cin.ignore();
    while(t--)
    {
        getline(cin, s);
        int cnt = 1;
        stack<int> st;
        for(char &i : s)
        {
            if(i == '(')
            {
                st.push(cnt);
                cout << cnt << ' ';
                ++cnt;
            }
            else if(i == ')')
            {
                cout << st.top() << ' ';
                st.pop();
            }
        }
        cout << endl;
    }
    return 0;
}
<----------------------------------------->
NEW_SO_BUOC_DI_CHUYEN_IT_NHAT
#include <bits/stdc++.h>

using namespace std;

using ll = long long;

int dx[3] = {1, 0, 1};
int dy[3] = {0, 1, 1};

int n, m;

int visited[1005][1005], A[1005][1005];

int BFS() {
	queue<pair<pair<int, int>, int>>q;
	q.push({{1, 1}, 0});
	visited[1][1] = 1;
	while (!q.empty()) {
		auto x = q.front();
		q.pop();
		if (x.first.first == n && x.first.second == m) {
			return x.second;
		}
		int a = x.first.first, b = x.first.second;
		int step1 = 0, step2 = 0, step3 = 0;
		for (int k = 0; k < 3; k++) {
			int a1 = x.first.first + dx[k];
			int b1 = x.first.second + dy[k];
			if (k == 0) {
				if (a + 1 <= n)
				{
					step1 = abs(A[a + 1][b] - A[a][b]);
					if (!visited[a + step1][b] && (a + step1 <= n) && step1)
					{
						q.push({{a + step1, b}, x.second + 1});
						visited[a + step1][b] = 1;
					}
				}
			} else if (k == 1) {
				if (b + 1 <= m)
				{
					step2 = abs(A[a][b + 1] - A[a][b]);
					if (!visited[a][b + step2] && (b + step2 <= m) && step2)
					{
						q.push({{a, b + step2}, x.second + 1});
						visited[a][b + step2] = 1;
					}
				}
			} else {
				if (a + 1 <= n && b + 1 <= m)
				{
					step3 = abs(A[a][b] - A[a + 1][b + 1]);
					if (!visited[a + step3][b + step3] && (a + step3 <= n) && (b + step3 <= m) && step3)
					{
						q.push({{a + step3, b + step3}, x.second + 1});
						visited[a + step3][b + step3] = 1;
					}
				}
			}
		}
	}
	return -1;
}
int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	int t;
	cin >> t;
	while (t--) {
		cin >> n >> m;
		for (int i = 1; i <= n; i++) {
			for (int j = 1; j <= m; j++) {
				cin >> A[i][j];
			}
		}
		cout << BFS() << endl;
		memset(visited, 0, sizeof(visited));
		memset(A, 0, sizeof(A));
	}
	return 0;
}
<----------------------------------------->
NGOAC_VUONG_DAT
#include <bits/stdc++.h>
#define ll long long
const ll mod = (ll)1e9 + 7;
#define endl "\n"
#define all(v) v.begin(), v.end()
#define ms(a) memset(a, 0, sizeof(a))
#define faster()                  \
    ios_base::sync_with_stdio(0); \
    cin.tie(0);                   \
    cout.tie(0);
using namespace std;

int main()
{
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
    faster();
    ll t;
    cin >> t;
    cin.ignore();
    while (t--)
    {
        string s;
        cin >> s;
        stack<char> st;
        ll cnt1 = 0, cnt2 = 0;
        for (ll i = 0; i < s.size(); i++)
        {
            if (!st.empty())
            {
                if (s[i] == ')' && st.top() == '(')
                {
                    st.pop();
                }
                else
                {
                    if (s[i] == ']' && st.top() == '[')
                    {
                        st.pop();
                        cnt2++;
                    }
                    else
                    {
                        st.push(s[i]);
                    }
                }
            }
            else
                st.push(s[i]);
        }
        cout << cnt2 << endl;
    }
}
<----------------------------------------->
PHUONG_THAY THE DAU NGOAC
#include<bits/stdc++.h>
using namespace std;

void solve(string s)
{
	map<int, int> mp;
	for(int i = 0; i< s.size(); i++)
	{
		if(s[i] == '(' || s[i] == ')')
			mp[i] = -1;
		else mp[i] = 2;
	}
	
	stack<pair<char, int>> st;
	
	for(int i = 0; i< s.size(); i++)
	{
		if(s[i] == '(')
		{
			st.push({'(', i});
		}
		else if(s[i] == ')')
		{
			if(!st.empty() && st.top().first == '(')
			{
				mp[st.top().second] = 0;
				mp[i] = 1;
				st.pop();
			}
		}
	}
	
	for(int i = 0; i< s.size(); i++)
	{
		if(mp[i] == 2)
			cout << s[i];
		else cout << mp[i];
	}
}

int main()
{
	int t;
	cin >> t;
	while(t--)
	{
		string s;
		cin >> s;
		solve(s);
		cout << endl;
	}
}

<----------------------------------------->
SO_2_UU_THE
#include <bits/stdc++.h>

using namespace std;

using ll = long long;

set<ll>v;
int n;
bool check(string s) {
	int cnt = 0;
	for (int i = 0; i < s.size(); i++) {
		if (s[i] == '2') cnt++;
	}
	return cnt > s.size() / 2;
}

void init() {
	queue<string>q;
	q.push("0");
	q.push("1");
	q.push("2");
	while (1) {
		string top = q.front();
		q.pop();
		if (top.size() == n) break;
		if (check(top)) v.insert(stoll(top));
		q.push(top + "0");
		q.push(top + "1");
		q.push(top + "2");
	}
}

int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	n = 10;
	init();
	int t;
	cin >> t;
	while (t--) {
		int x;
		cin >> x;
		int dem = 0;
		for (auto h : v) {
			cout << h << " ";
			dem++;
			if (dem == x) break;
		}
		cout << endl;
	}
	return 0;
}
<----------------------------------------->
SO_MAY_MAN_TIEP_THEO
#include <bits/stdc++.h>

using namespace std;

using ll = long long;

vector<ll>v;

ll a, b;
void init() {
	queue<string>q;
	q.push("4");
	q.push("7");
	while (1) {
		string top = q.front();
		q.pop();
		if (top.size() == 19) break;
		v.push_back(stoll(top));
		q.push(top + "4");
		q.push(top + "7");
	}
}
int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	init();
	cin >> a >> b;
	ll sum = 0;
	for (int i = a; i <= b; i++) {
		auto it = lower_bound(v.begin(), v.end(), i);
		sum += *it;
	}
	cout << sum;
	return 0;
}
<----------------------------------------->
SO_NGUYEN_THUY
#include <bits/stdc++.h>

using namespace std;

using ll = long long;

vector<string>v;

void init() {
	queue<string>q;
	q.push("4");
	q.push("5");
	while (1) {
		string top = q.front();
		q.pop();
		string tmp = top;
		reverse(tmp.begin(), tmp.end());
		string x = "";
		x += top + tmp;
		if (x != "45" && x != "54") {
			v.push_back(x);
		}
		if (v.size() > 10000) break;
		q.push(top + "4");
		q.push(top + "5");
	}
}
int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	init();
	int t;
	cin >> t;
	while (t--) {
		int n;
		cin >> n;
		for (int i = 0; i < n; i++) {
			cout << v[i] << " ";
		}
		cout << endl;
	}
	return 0;
}
<----------------------------------------->
THAM_KHAO_SO_BUOC_DI_CHUYEN_IT_NHAT
#include <bits/stdc++.h>

using namespace std;

using ll = long long;

int t, n, m;

int A[1005][1005];
int dp[1005][1005];
void BFS() {
	queue<pair<int, int>>q;
	q.push({1, 1});
	dp[1][1] = 0;
	while (!q.empty()) {
		auto x = q.front();
		q.pop();
		int a = x.first, b = x.second;
		if (a == n && b == m) {
			break;
		}
		int a1, b1;
		if (a + 1 <= n)
		{
			a1 = a + abs(A[a][b] - A[a + 1][b]), b1 = b;
			if (dp[a1][b1] == 1e9 && a1 <= n)
			{
				dp[a1][b1] = dp[a][b] + 1;
				q.push({a1, b1});
			}
		}
		if (b + 1 <= m)
		{
			a1 = a; b1 = b + abs(A[a][b] - A[a][b + 1]);
			if (dp[a1][b1] == 1e9 && b1 <= m)
			{
				dp[a1][b1] = dp[a][b] + 1;
				q.push({a1, b1});
			}
		}
		if (a + 1 <= n && b + 1 <= m)
		{
			a1 = a + abs(A[a][b] - A[a + 1][b + 1]);
			b1 = b + abs(A[a][b] - A[a + 1][b + 1]);
			if (dp[a1][b1] == 1e9 && (a1 <= n) && (b1 <= m))
			{
				dp[a1][b1] = dp[a][b] + 1;
				q.push({a1, b1});
			}
		}
	}
	if (dp[n][m] == 1e9) cout << -1;
	else cout << dp[n][m];
	cout << endl;
	return;
}
int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	cin >> t;
	while (t--) {
		cin >> n >> m;
		for (int i = 1; i <= n; i++) {
			for (int j = 1; j <= m; j++) {
				cin >> A[i][j];
				dp[i][j] = 1e9;
			}
		}
		BFS();
	}
	return 0;
}
<----------------------------------------->
THANH_PHAN_LIEN_THONG_1
#include <bits/stdc++.h>

using namespace std;

using ll = long long;

vector<int>p[1005];
bool visited[1005];

void DFS(int u) {
	visited[u] = true;
	for (auto x : p[u]) {
		if (!visited[x]) {
			DFS(x);
		}
	}
}
int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	int n, m, e;
	cin >> n >> m >> e;
	for (int i = 0; i < m; i++) {
		int x, y;
		cin >> x >> y;
		p[x].push_back(y);
		p[y].push_back(x);
	}
	DFS(e);
	int ok = 0;
	for (int i = 1; i <= n; i++) {
		if (!visited[i]) {
			ok = 1;
			cout << i << endl;
		}
	}
	if (!ok) cout << ok;
	return 0;
}
<----------------------------------------->
THAY_THE_DAU_NGOAC_EDIT
#include<bits/stdc++.h>
using namespace std;

int main() {
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	int t;
	cin >> t;
	while (t--) {
		string s;
		cin >> s;
		stack<int>st;
		int a[1005]; 
		for (int i = 0; i < s.size(); i++) a[i] = 1;
		for (int i = 0; i < s.size(); i++) {
			if (s[i] == '(') {
				st.push(i);
			} else if (s[i] == ')') {
				if (!st.empty() && s[st.top()] == '(') {
					a[i] = 1; a[st.top()] = 0;
					st.pop();
				} else {
					st.push(i);
				}
			}
		}
		while (!st.empty()) { //Trong stack toan vi tri ngoac sai
			int p = st.top();
			a[p] = -1;
			st.pop();
		}
		for (int i = 0; i < s.size(); i++) {
			cout << a[i];
		}
		cout << endl;
	}
}
/*2
((())(()()
((()())(

-10011-10101
-1001011-1

*/
<----------------------------------------->
THAY_THE_DAU_NGOAC
#include <bits/stdc++.h>

using namespace std;

using ll = long long;

int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	int t;
	cin >> t;
	while (t--) {
		string s;
		cin >> s;
		string res = "";
		stack<char>st;
		for (int i = 0; i < s.length(); i++) {
			if (s[i] != ')') {
				st.push(s[i]);
			} else {
				string tmp = "";
				while (!st.empty() && st.top() != '(') {
					tmp = tmp + st.top();
					st.pop();
				}
				if (st.empty()) {
					tmp += "-1";
				} else {
					tmp += "1";
					tmp = "0" + tmp;
				}
				res += tmp;
			}
		}
		cout << res << endl;
	}
	return 0;
}
<----------------------------------------->
TIEN_TO
#include <bits/stdc++.h>

using namespace std;

using ll = long long;

ll calc(ll x, ll y, string c) {
	if (c == "+") return x + y;
	else if (c == "-") return x - y;
	else if (c == "*") return x * y;
	else return x / y;
}
int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	int t;
	cin >> t;
	while (t--) {
		int n;
		cin >> n;
		vector<string>v;
		for (int i = 0; i < n; i++) {
			string s;
			cin >> s;
			v.push_back(s);
		}
		stack<ll>st;
		for (int i = v.size() - 1; i >= 0; i--) {
			if (v[i] == "+" || v[i] == "-" || v[i] == "*" || v[i] == "/") {
				ll x = st.top(); st.pop();
				ll y = st.top(); st.pop();
				st.push(calc(x, y, v[i]));
			} else {
				st.push(stoll(v[i]));
			}
		}
		cout << st.top() << endl;
	}
	return 0;
}
<----------------------------------------->
DEM_DUONG_DI_NGAN_NHAT
#include <bits/stdc++.h>
#pragma gcc optimize("Ofast")
using namespace std;

using ll = long long;

ll n, m;
vector<pair<ll, ll>>adj[1000005];
ll route[1000005];
ll d[1000005];
void dijkstra(ll i) {
	fill(d + 1, d + n + 1, 1e18);
	priority_queue<pair<ll, ll>, vector<pair<ll, ll>>, greater<pair<ll, ll> >> pq;
	d[i] = 0;
	pq.push({d[i], i});
	route[i] = 1;
	while (!pq.empty()) {
		auto top = pq.top();
		pq.pop();
		ll u = top.second;
		ll du = top.first;
		if (du > d[u]) continue;
		for (auto &x : adj[u]) {
			ll v = x.first;
			ll w = x.second;
			if (d[v] == d[u] + w) {
				route[v] += route[u];
			}
			if (d[v] > d[u] + w) {
				d[v] = d[u] + w;
				route[v] = route[u];
				pq.push({d[v], v});
			}
		}
	}
}
int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	cin >> n >> m;
	for (int i = 0; i < m; i++) {
		ll x, y, c;
		cin >> x >> y >> c;
		adj[x].push_back({y, c});
		adj[y].push_back({x, c});
	}
	dijkstra(1);
	cout << d[n] << " " << route[n] << endl;
	return 0;
}
<----------------------------------------->
DI_CHUYEN_TREN_DO_THI_CO_TRONG_SO
#include <bits/stdc++.h>
#pragma gcc optimize("Ofast")
using namespace std;

using ll = long long;

int n, m, q, D[1005][1005];

void floyd() {
	for (int k = 1; k <= n; k++) {
		for (int u = 1; u <= n; u++) {
			for (int v = 1; v <= n; v++) {
				D[u][v] = min(D[u][v], max(D[u][k], D[k][v]));
			}
		}
	}
}

int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	cin >> n >> m >> q;
	for (int i = 1; i <= n; i++) {
		for (int j = 1; j <= n; j++) {
			if (i == j) D[i][j] = 0;
			else D[i][j] = D[j][i] = 1e9;
		}
	}
	for (int i = 0; i < m; i++) {
		int x, y, w;
		cin >> x >> y >> w;
		D[x][y] = w;
	}
	floyd();
	while (q--) {
		int x, y;
		cin >> x >> y;
		if (D[x][y] == 1e9) cout << -1;
		else cout << D[x][y];
		cout << endl;
	}
	return 0;
}
<----------------------------------------->
DIEM_NGHEN_GIAO_THONG
#include <bits/stdc++.h>
#pragma gcc optimize("Ofast")
using namespace std;

using ll = long long;

vector<int>adj[1005];
bool visited[1005];

void DFS(int u) {
	stack<int>st;
	st.push(u);
	visited[u] = true;
	while (!st.empty()) {
		int x = st.top();
		st.pop();
		for (auto &y : adj[x]) {
			if (!visited[y]) {
				visited[y] = true;
				st.push(x);
				st.push(y);
			}
		}
	}
}
int t, n, m, u, v;
int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	cin >> t;
	while (t--) {
		cin >> n >> m >> u >> v;
		for (int i = 0; i < m; i++) {
			int x, y;
			cin >> x >> y;
			adj[x].push_back(y);
		}
		int cnt = 0;
		for (int i = 1; i <= n; i++) {
			visited[i] = true;
			DFS(u);
			if (!visited[v]) cnt++;
			memset(visited, 0, sizeof(visited));
		}
		cout << cnt << endl;
		for (int i = 1; i <= n; i++) {
			adj[i].clear();
		}
	}
	return 0;
}
<----------------------------------------->
DO_THI_LIEN_THONG_2
#include <bits/stdc++.h>

using namespace std;

using ll = long long;

int t, n, m;
vector<int>adj[1005];
int low[1005], disc[1005];
int cnt;
vector<pair<int, int>>res;
void Tarjan(int u, int p) {
	disc[u] = low[u] = ++cnt;
	for (auto &v : adj[u]) {
		if (v == p) continue;
		if (disc[v]) {
			low[u] = min(low[u], disc[v]);
		} else {
			Tarjan(v, u);
			low[u] = min(low[u], low[v]);
			if (low[v] == disc[v]) {
				res.push_back({min(u, v), max(u, v)});
			}
		}
	}
}
int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	cin >> t;
	while (t--) {
		cin >> n >> m;
		for (int i = 1; i <= n; i++) {
			adj[i].clear();
		}
		res.clear();
		memset(low, 0, sizeof(low));
		memset(disc, 0, sizeof(disc));
		cnt = 0;
		for (int i = 0; i < m; i++) {
			int x, y;
			cin >> x >> y;
			adj[x].push_back(y);
			adj[y].push_back(x);
		}
		Tarjan(1, 0);
		sort(res.begin(), res.end());
		cout << res.size() << endl;
		for (int i = 0; i < res.size(); i++) {
			cout << "(" << res[i].first << " " << res[i].second << ") ";
		}
		cout << endl;
	}
	return 0;
}
<----------------------------------------->
DOAN_LIEN_TIEP
#include <bits/stdc++.h>
#pragma gcc optimize("Ofast")
using namespace std;

using ll = long long;

int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	int t;
	cin >> t;
	while (t--) {
		int n;
		cin >> n;
		int a[n];
		for (auto &x : a) {
			cin >> x;
		}
		stack<int>st;
		int b[n];
		for (int i = 0; i < n; i++) {
			while (!st.empty() && a[st.top()] <= a[i])
				st.pop();
			if (st.empty()) b[i] = i + 1;
			else b[i] = i - st.top();
			st.push(i);
		}
		for (int i = 0; i < n; i++)
			cout << b[i] << " ";
		cout << endl;
	}
	return 0;
}
<----------------------------------------->
SO_BUOC_DI_CHUYEN_IT_NHAT
#include <bits/stdc++.h>
#pragma gcc optimize("Ofast")
#define endl "\n"
using namespace std;

using ll = long long;

int t, n, m;

int A[1005][1005];
int dp[1005][1005];

void BFS(int i, int j) {
	queue<pair<int, int>>q;
	q.push({i, j});
	dp[i][j] = 0;
	while (!q.empty()) {
		auto x = q.front();
		q.pop();
		int a = x.first, b = x.second;
		if (a == n && b == m) {
			break;
		}
		int a1, b1;
		if (a + 1 <= n)
		{
			a1 = a + abs(A[a][b] - A[a + 1][b]), b1 = b;
			if (dp[a1][b1] == 1e9 && a1 <= n)
			{
				dp[a1][b1] = dp[a][b] + 1;
				q.push({a1, b1});
			}
		}
		if (b + 1 <= m)
		{
			a1 = a; b1 = b + abs(A[a][b] - A[a][b + 1]);
			if (dp[a1][b1] == 1e9 && b1 <= m)
			{
				dp[a1][b1] = dp[a][b] + 1;
				q.push({a1, b1});
			}
		}
		if (a + 1 <= n && b + 1 <= m)
		{
			a1 = a + abs(A[a][b] - A[a + 1][b + 1]);
			b1 = b + abs(A[a][b] - A[a + 1][b + 1]);
			if (dp[a1][b1] == 1e9 && (a1 <= n) && (b1 <= m))
			{
				dp[a1][b1] = dp[a][b] + 1;
				q.push({a1, b1});
			}
		}
	}
	return;
}
int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	cin >> t;
	while (t--) {
		cin >> n >> m;
		for (int i = 1; i <= n; i++) {
			for (int j = 1; j <= m; j++) {
				cin >> A[i][j];
				dp[i][j] = 1e9;
			}
		}
		BFS(1, 1);
		if (dp[n][m] == 1e9) cout << -1;
		else cout << dp[n][m];
		cout << endl;
	}
	return 0;
}
<----------------------------------------->
THANH_PHAN_LIEN_THONG_2
#include <bits/stdc++.h>
#pragma gcc optimize("Ofast")
using namespace std;

using ll = long long;

int n, m;
int visited[100005];
vector<int>adj[100005];

void DFS(int u) {
	stack<int>st;
	st.push(u);
	visited[u] = 1;
	while (!st.empty()) {
		int x = st.top();
		st.pop();
		for (auto &y : adj[x]) {
			if (!visited[y]) {
				visited[y] = 1;
				st.push(x);
				st.push(y);
				break;
			}
		}
	}
}
int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	cin >> n >> m;
	for (int i = 0; i < m; i++) {
		int x, y;
		cin >> x >> y;
		adj[x].push_back(y);
		adj[y].push_back(x);
	}
	for (int i = 1; i <= n; i++) {
		int tplt = 0;
		visited[i] = 1;
		for (int i = 1; i <= n; i++) {
			if (!visited[i]) {
				tplt++;
				DFS(i);
			}
		}
		cout << tplt << endl;
		memset(visited, 0, sizeof(visited));
	}
	return 0;
}
<----------------------------------------->
VUA_VA_QUAN_MA
#include <bits/stdc++.h>
#pragma gcc optimize("Ofast")
using namespace std;

using ll = long long;

int n;

int mx[8] = { -1, -2, -2, -1, 1, 2, 2, 1};
int my[8] = { -2, -1, 1, 2, 2, 1, -1, -2};

int vx[8] = {1, -1, 0, 0, 1, -1, 1, -1};
int vy[8] = {1, 1, 1, -1, -1, -1, 0, 0};

int dp1[1005][1005];
int dp2[1005][1005];

int flag1[1005][1005];
int flag2[1005][1005];

char a[1005][1005];

int xm, ym, xv, yv;

int ans = 1e9;

void King(int i, int j) {
	queue<pair<int, int>>q;
	q.push({i, j});
	flag1[i][j] = 0;
	while (!q.empty()) {
		auto x = q.front();
		q.pop();
		int a = x.first;
		int b = x.second;
		for (int k = 0; k < 8; k++) {
			int i1 = a + vx[k];
			int j1 = b + vy[k];
			if (i1 < 1 || i1 > n || j1 < 1 || j1 > n || flag1[i1][j1]) continue;
			dp1[i1][j1] = dp1[a][b] + 1;
			q.push({i1, j1});
			flag1[i1][j1] = 1;
		}
	}
	return;
}

void Knight(int i, int j) {
	queue<pair<int, int>>q;
	q.push({i, j});
	flag2[i][j] = 0;
	while (!q.empty()) {
		auto x = q.front();
		q.pop();
		int a = x.first;
		int b = x.second;
		for (int k = 0; k < 8; k++) {
			int i1 = a + mx[k];
			int j1 = b + my[k];
			if (i1 < 1 || i1 > n || j1 < 1 || j1 > n || flag2[i1][j1]) continue;
			dp2[i1][j1] = dp2[a][b] + 1;
			q.push({i1, j1});
			flag2[i1][j1] = 1;
		}
	}
	return;
}
int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	cin >> n;
	for (int i = 1; i <= n; i++) {
		for (int j = 1; j <= n; j++) {
			cin >> a[i][j];
			if (a[i][j] == '#') {
				flag1[i][j] = flag2[i][j] = 1;
			}
			else if (a[i][j] == 'M') {
				xm = i; ym = j;
			} else if (a[i][j] == 'T') {
				xv = i;
				yv = j;
			}
		}
	}
	King(xv, yv);
	Knight(xm, ym);
	for (int i = 1; i <= n; i++) {
		for (int j = 1; j <= n; j++) {
			if (dp1[i][j] == dp2[i][j] && dp1[i][j] != 0) {
				ans = min(ans, dp1[i][j]);
			}
		}
	}
	cout << ans << endl;
	return 0;
}
<----------------------------------------->
<----------------------------------------->
<----------------------------------------->
<----------------------------------------->
<----------------------------------------->
<----------------------------------------->
<----------------------------------------->
<----------------------------------------->
<----------------------------------------->
<----------------------------------------->
<----------------------------------------->
<----------------------------------------->
<----------------------------------------->
<----------------------------------------->
<----------------------------------------->
<----------------------------------------->
<----------------------------------------->
<----------------------------------------->
<----------------------------------------->
<----------------------------------------->
<----------------------------------------->
<----------------------------------------->
<----------------------------------------->
<----------------------------------------->
<----------------------------------------->
<----------------------------------------->
<----------------------------------------->
<----------------------------------------->

